<A> . plot ( kind = 'scatter' , <B> = <c> , <D> = <e> )	 <A> . plot ( kind = 'scatter' , <B> , <C> = <c> ) 
<A> [ <A> . isnull ( ) . any ( axis = 1 ) ] . shape	 <A> [ <A> . isnull ( ) . shape 
<A> [ 'temperature_rolling_mean' ] = <A> [ <b> ] . rolling ( <C> = <d> ) . mean ( )	 <A> [ <b> ] = <A> [ <c> ] . mean ( ) 
plt . plot ( X , reg . predict ( X ) )	 plt . figure ( <A> ) 
plt . subplot ( <a> , <b> , <a> )	 plt . subplot ( <a> , <b> , <a> ) 
plt . bar ( <A> , <B> , align = 'center' , width = <c> )	 plt . plot ( <A> , <B> , label = <c> ) 
df . groupby ( [ 'weather' ] ) [ 'temperature' ] . mean ( )	 df [ [ 'kcal' ] . corr ( ) . count ( ) 
<A> [ <b> : 106 ]	 <A> . head ( <b> ) 
<A> . groupby ( [ <b> , <c> ] ) [ 'sales' ] . sum ( )	 <A> [ [ <b> ] . value_counts ( ) . count ( ) 
<A> [ <b> : 106 ]	 <A> [ <b> ] . head ( ) 
<A> = pd . read_csv ( 'student-mat.csv' )	 <A> = pd . read_csv ( './data/lunch_box.csv' ) 
plt . title ( <a> )	 plt . ylabel ( <a> ) 
<A> <B> = pd . to_datetime ( <A> <B> , format = '%Y-%m-%d' )	 <A> [ <A> . index ( ) 
<A> = <A> [ [ <b> , <c> , <d> , <e> ] ]	 <A> [ <A> [ <b> , <c> ] ] . head ( ) 
plt . plot ( <A> , <B> , color = <c> )	 plt . plot ( <A> , <B> , color = <c> ) 
plt . plot ( <A> , <B> , label = <c> )	 plt . plot ( <A> , <B> , label = <c> ) 
<A> . drop ( [ <b> ] , axis = 1 , inplace = True )	 <A> . drop ( [ <b> ] , axis = True ) 
df . plot ( kind = 'hist' , <A> = <b>   , bins = <c> , figsize = ( <d> , <e> ) , alpha = <f> )	 <A> . plot ( kind = 'hist' , <A> = <b> , bins = <c> , figsize = ( <d> ) , <e> ) 
np . corrcoef ( [ <A> [ 'G1' ] , <A> [ 'G3' ] ] )	 <A> [ [ 'name' , 'kcal' ] ] ] . cov ( ) 
dummy_df = pd . get_dummies ( <A> , columns = [ <b> , <c> , <d> , <e> , <f> ] )	 <A> [ <b> , <c> ] ] . head ( ) 
df . plot ( y = [ 'temperature' , 'temperature_rolling_mean' , 'temperature_pct_change' ] , figsize = ( <a> , <b> ) , alpha = <c> )	 df . plot ( kind = [ <b> , inplace = False , inplace = True ) 
from <A> import <B> , <C>	 from <A> import <B> <C> 
plt . xlabel ( <a> )	 plt . ylabel ( <a> ) 
plt . xlabel ( <a> )	 plt . ylabel ( <a> ) 
import <A> as <B>	 import <A> <B> as <C> 
plt . savefig ( <a> )	 plt . show ( <a> ) 
<A> . isnull ( ) . sum ( )	 <A> . isnull ( ) . sum ( ) 
<A> . isnull ( ) . sum ( )	 <A> . isnull ( ) 
<A> . index	 <A> . dtypes 
<A> [ [ <b> , <c> ] ] . corr ( )	 <A> [ [ <b> ] > <c> ] . head ( ) 
df [ 'temperature_diff' ] = df [ 'temperature' ] . diff ( periods = 1 )	 df [ [ 'name' , 'kcal' ] ] . head ( ) 
plt . grid ( True )	 plt . grid ( True ) 
df [ 'sales' ] . plot ( )	 plt . hist ( <A> , <B> ) 
<A> [ <A> . isnull ( ) . any ( axis = 1 ) ] . head ( )	 <A> [ <A> . isnull ( ) . head ( ) 
<A> = linear_model . LinearRegression ( )	 <A> [ <b> ] 
plt . legend ( )	 plt . legend ( ) 
import <A> as <B>	 import <A> as <B> 
<A> [ 'absences' ] . describe ( )	 <A> [ 'absences' ] . median ( ) 
plt . plot ( <A> [ 'G1' ] , <A> [ 'G3' ] , <b> )	 plt . boxplot ( <A> [ 'G1' ] , <A> [ 'G1' ] ) 
