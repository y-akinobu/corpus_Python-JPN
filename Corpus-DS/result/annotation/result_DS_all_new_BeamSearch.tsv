<B> 軸に <C> 、 <D> 軸に <E> と設定した <A> の散布図を描く。	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )	 df . plot ( kind = 'scatter' , <A> = <B> , <C> = <D> ) 	 df . plot ( kind = 'scatter' , <A> = <B> , <C> = <D> ) 	 df . plot ( kind = 'scatter' , <A> = <B> , <C> = <D> ) 	 plt . plot ( <A> , <B> , color = <C> ) 	 plt . plot ( <A> , <B> , color = <C> ) 
<A> の欠損値が含まれている行を抽出し、その列数と行数を確認する	<A> [ <A> . isnull ( ) . any ( axis = 1 ) ] . shape	 <A> [ <A> . isnull ( ) . any ( axis = 1 ) ] . shape 	 np <A> [ <B> ] = <A> . rolling ( ) . shape 	 np <A> [ <B> ] = <A> . rolling ( ) . shape 	 np <A> [ <B> , <C> ] . head ( ) 	 np <A> [ <B> , ] ] . head ( ) . head ( ) 
<A> の列 <B> について、頭から <C> サイズ <D> で移動平均を算出	<A> [ 'temperature_rolling_mean' ] = <A> [ <B> ] . rolling ( <C> = <D> ) . mean ( )	 <A> [ <B> ] = <A> [ <C> ] . rolling ( <D> = <E> ) . mean ( ) 	 df [ <A> ] = <A> [ <B> ] . rolling ( <C> , <D> ) . mean ( ) 	 <A> [ <B> ] = <A> [ <C> ] . rolling ( <D> = <E> ) . mean ( ) 	 <A> [ <B> ] = <A> [ <C> ] . rolling ( <D> = <E> ) . mean ( ) 	 np <A> [ <B> ] = <A> [ <C> ] . rolling ( <D> = <E> ) . mean ( ) 
線形回帰直線を引く	plt . plot ( X , reg . predict ( X ) )	 <A> . coef_ 	 import <A> as <B> 	 reg . coef_ 	 reg . coef_ ) 	 import <A> ) 
<A> 行 <B> 列のグラフの <A> つ目を指定	plt . subplot ( <A> , <B> , <A> )	 plt . subplot ( <A> , <B> , <A> ) 	 plt . subplot ( <A> , <B> , <A> ) 	 plt . subplot ( <A> , <B> , <A> ) 	 plt . subplot ( <A> , <B> , <B> ) 	 plt . subplot ( <A> , <B> , <B> ) 
横軸を <A> 、縦軸を <B> として、幅 <C> の棒グラフを表示する	plt . bar ( <A> , <B> , align = 'center' , width = <C> )	 plt . plot ( <A> , <B> , color = <C> ) 	 plt . plot ( <A> , <B> , color = <C> ) 	 pivot_monthly_df . plot ( kind = 'bar' , alpha = <B> , figsize = ( <C> , <D> ) ) 	 pivot_monthly_df . plot ( kind = 'bar' , alpha = <B> , figsize = ( <C> , <D> ) ) 	 pivot_monthly_df . plot ( kind = 'bar' , alpha = <B> , figsize = ( <C> , <D> ) ) 
weather 'を軸に' temperature 'の平均値を求める。	df . groupby ( [ 'weather' ] ) [ 'temperature' ] . mean ( )	 df . groupby ( [ 'month' , 'period' ] ) [ 'sales' ] . sum ( ) 	 from df . groupby ( [ 'month' , 'period' ] ) [ 'sales' ] . sum ( ) 	 from df . groupby ( [ 'month' , 'period' ] ) [ 'sales' ] . sum ( ) 	 from df . groupby ( [ 'month' , 'period' ] ) [ 'sales' ] . sum ( ) 	 from df . groupby ( [ 'month' , 'period' ] ) [ 'sales' ] . sum ( ) 
<A> の <B> 行目から 105 行目を表示する	<A> [ <B> : 106 ]	 <A> . head ( <B> ) 	 from <A> [ <B> : 106 ] 	 from <A> [ <B> : 106 ] 	 from <A> [ <B> ] . head ( ) 	 df [ <B> : 106 ] . head ( ) 
<A> について、列 <B> , 列 <C> の値ごとに 'soldout' の数をカウント	<A> . groupby ( [ <B> , <C> ] ) [ 'sales' ] . sum ( )	 <A> . groupby ( [ <B> ] , <C> ] ) [ <C> ] . count ( ) 	 <A> . groupby ( [ <B> , <C> , <D> ] , [ <E> ) [ <E> ) 	 <A> . groupby ( [ <B> , <C> ] , [ <C> ] ) . count ( ) 	 <A> . groupby ( [ <B> ] ) [ <C> , <D> ] . count ( ) 	 <A> . groupby ( [ <B> , <C> , <D> ] , [ <C> ] ] ) . count ( ) 
<A> の <B> 行目から 105 行目を抽出する	<A> [ <B> : 106 ]	 <A> [ <B> : 106 ] 	 <A> [ <B> : 106 ] 	 <A> [ <B> : 106 : 106 ] 	 [ <A> [ <B> : 106 ] . 106 ] 	 from <A> [ <B> : 106 ] 
student - mat .csv 'を <A> として読み込む	<A> = pd . read_csv ( 'student-mat.csv' )	 <A> = pd . read_csv ( 'student-mat.csv' ) 	 <A> = pd . read_csv ( 'student-mat.csv' ) 	 <A> = pd . read_csv ( 'student-mat.csv' ) 	 pd . read_csv ( <A> ) 	 pd . read_csv ( <A> ) 
グラフのタイトルを <A> とする。	plt . title ( <A> )	 plt . title ( <A> ) 	 plt . title ( <A> ) 	 plt . title ( <A> ) 	 plt . title ( <A> ) 	 plt . title ( <A> ) 
<A> <B> を参照し、年月日をハイフン区切りの形式に変更する。	<A> <B> = pd . to_datetime ( <A> <B> , format = '%Y-%m-%d' )	 <A> . index = pd . to_datetime ( <A> . index , format = '%Y-%m-%d' ) 	 pd . DataFrame ( <A> [ <B> ] . mask ( <A> [ <A> ) . head ( ) 	 import <A> [ <A> <B> ] . nan 	 import <A> [ <B> ] > <C> ] 	 import <A> [ <B> ] > <C> ] 
<A> から列 <B> , 列 <C> , 列 <D> , 列 <E> を抽出して、 <A> とする	<A> = <A> [ [ <B> , <C> , <D> , <E> ] ]	 <A> . iloc [ [ <B> , <C> , <D> ] , [ <E> , <C> ] ] 	 <A> . iloc [ [ <B> , <C> , <D> ] = <E> , [ <E> , <C> ] ) 	 <A> . iloc [ [ <B> , <C> , <C> , <D> ] , [ <E> , <C> ] ] 	 df [ <A> , <B> ] ] = <A> = <A> [ <C> , <E> ) . head ( ) 	 pivot_monthly_df <A> [ [ <B> , <C> ] . head ( <D> , [ <E> , <C> ] ] ) 
グラフの色をカラーコードで <C> の色に指定して、 <A> と <B> からグラフをプロットする。	plt . plot ( <A> , <B> , color = <C> )	 plt . plot ( <A> , <B> , color = <C> ) 	 plt . plot ( <A> , <B> , color = <C> ) 	 plt . plot ( <A> , <B> , color = <C> ) 	 plt . plot ( <A> , <B> , color = <C> ) 	 pivot_monthly_df . plot ( kind = 'bar' , alpha = <B> , figsize = ( <C> ) ) 
ラベルを <C> として、 <A> と <B> の値からプロット	plt . plot ( <A> , <B> , label = <C> )	 plt . plot ( <A> , <B> , label = <C> ) 	 plt . plot ( <A> , <B> , label = <C> ) 	 plt . plot ( <A> , <B> , label = <C> ) 	 from plt . plot ( <A> , <B> , label = <C> ) 	 plt . plot ( <A> , <B> , label = <C> ) 
<A> の <B> 列を削除する	<A> . drop ( [ <B> ] , axis = 1 , inplace = True )	N	N	 <A> . drop ( [ <B> , axis = ] ) 	 reg . drop ( [ <B> , axis ] , axis = 1 ) 	 pivot_monthly_df . drop ( [ <B> ] , axis = 1 ) 
<A> 軸を <B> として、図のサイズ <D> × <E> 、ビンのサイズ <C> 、透過率 <F> のヒストグラムを表示	df . plot ( kind = 'hist' , <A> = <B>   , bins = <C> , figsize = ( <D> , <E> ) , alpha = <F> )	 plt . plot ( <A> , <B> , color = ( <C> , <D> ) 	 df . plot ( kind = 'hist' , <A> = <B> , bins = <C> , figsize = ( <D> , <E> ) , alpha = <F> ) 	 df . plot ( kind = 'hist' , <A> = <B> , bins = <C> , figsize = ( <D> , <E> ) , alpha = <F> ) 	 df . plot ( kind = 'hist' , <A> = <B> , bins = <C> , figsize = ( <D> , <E> ) , alpha = <F> ) 	 df . plot ( kind = 'hist' , <A> = <B> , bins = <C> , figsize = ( <D> , <E> ) , alpha = <F> ) 
データ <A> の G1 , G3 について相関行列を算出	np . corrcoef ( [ <A> [ 'G1' ] , <A> [ 'G3' ] ] )	 np . cov ( <A> [ 'G1' ] , <A> [ 'G3' ] ) 	 np . cov ( <A> [ 'G1' ] , <A> [ 'G2' ] , <A> [ 'G3' ] ) 	 np . cov ( <A> [ 'G1' ] , 'G3' ] , <A> [ 'G3' ] ) 	 plt . boxplot ( [ <A> , <A> [ 'G1' ] , <A> [ 'G3' ] ) 	 plt . boxplot ( [ <A> , 'G1' ] , <A> [ 'G3' ] ) 
<A> を参照して、列 = [ <B> , <C> , <D> , <E> , <F> ] のダミー変数を生成する。	dummy_df = pd . get_dummies ( <A> , columns = [ <B> , <C> , <D> , <E> , <F> ] )	 <A> . iloc [ [ <B> , <C> , <D> ] , [ <E> , <C> ] ] 	 <A> . iloc [ [ <B> , <C> , <D> ] , [ <E> , <C> ] ] ] 	 df . plot ( kind = [ <A> , <B> , <C> , <D> , <E> ) 	 pd . get_dummies ( df , <A> , columns = [ <B> , <C> , <D> , <E> , <F> ] ] ) 	 pd . get_dummies ( df , <A> , columns = [ <B> , <C> , <D> , <E> , <F> ] ) 
列’ temperature ', 列' temperature_rolling_mean ', 列' temperature_pct_change 'の値をサイズ <A> × <B> 、透過度 <C> の折れ線グラフで表示	df . plot ( y = [ 'temperature' , 'temperature_rolling_mean' , 'temperature_pct_change' ] , figsize = ( <A> , <B> ) , alpha = <C> )	 <A> . plot ( y = [ <B> , 'temperature_rolling_mean' , 'temperature_rolling_mean' , <C> ] , figsize = ( <D> ) 	 <A> . plot ( y = [ <B> , 'temperature_rolling_mean' , 'temperature_rolling_mean' , <C> ] ) . head ( ) 	 <A> . plot ( y = [ <B> , 'temperature_rolling_mean' , 'temperature_rolling_mean' , <C> ] , figsize = ( <D> ) , alpha = <F> ) 	 <A> . plot ( y = [ <B> , 'temperature_rolling_mean' , 'temperature_rolling_mean' , <C> ] , figsize = ( <D> ) , alpha = <F> ) 	 df . dropna ( subset = [ 'temperature_diff' , 'temperature_rolling_mean' , 'temperature_rolling_mean' , 'temperature_pct_change' ] , axis = 0 ) . head ( ) 
<A> から <B> と <C> をインポート	from <A> import <B> , <C>	 from <A> <B> import <C> 	 import <A> <B> as <C> 	 import <A> <B> as <C> 	 import <A> <B> as <C> 	 import <A> <B> as <C> 
x 軸に <A> という軸ラベルをつける。	plt . xlabel ( <A> )	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 
グラフの x 軸のラベルを <A> とする	plt . xlabel ( <A> )	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 	 plt . ylabel ( <A> ) 
<A> を <B> と名前を付けてインポート	import <A> as <B>	 import <A> <B> as <C> 	 import <A> <B> as <C> 	 import <A> <B> as <C> 	 import <A> <B> as <C> 	 import <A> <B> as <C> 
プロットを <A> として保存する	plt . savefig ( <A> )	 plt . show ( ) 	 plt . show ( ) 	 plt . show ( ) 	 plt . show ( ) 	 plt . show ( ) 
<A> のそれぞれの列に対して欠損値の個数をカウントする。	<A> . isnull ( ) . sum ( )	 <A> . isnull ( ) . sum ( ) 	 adult . <A> . isnull ( ) . sum ( ) 	 adult . <A> . isnull ( ) . sum ( ) 	 adult . <A> . isnull ( ) . sum ( ) 	 sns . <A> . isnull ( ) . sum ( ) 
<A> に含まれる欠損値の個数を列ごとに算出	<A> . isnull ( ) . sum ( )	 <A> . isnull ( ) . sum ( ) 	 reg . isnull ( ) . sum ( ) 	 reg . isnull ( ) . sum ( ) 	 sns . <A> . isnull ( ) . sum ( ) 	 np . <A> . isnull ( ) . sum ( ) 
<A> のインデックスを表示	<A> . index	 <A> . index 	 <A> . index 	 pd . set_option ( <A> ) 	 <A> . index 	 pd . set_option ( <A> ) 
<A> の <B> 列と <C> 列の相関を求める	<A> [ [ <B> , <C> ] ] . corr ( )	 <A> [ [ <B> , <C> ] ] . head ( ) 	 df [ [ <B> , <C> ] ] . head ( ) 	 [ <A> [ <B> , <C> ] ] . head ( ) 	 from <A> [ <B> , <C> ] ] . head ( ) 	 from <A> [ <B> , <C> ] ] . head ( ) 
temperature 'を参照して1行前の値との差分を算出し、' temperature_diff 'という列に代入する。	df [ 'temperature_diff' ] = df [ 'temperature' ] . diff ( periods = 1 )	 df . sort_values ( [ 'sales' , 'temperature' ] , ascending = False ) . head ( ) 	 df . sort_values ( [ 'sales' , 'temperature' ] , ascending = False ) . head ( ) 	 df . sort_values ( [ 'sales' , 'temperature_rolling_mean' , 'temperature' ] , ascending = False ) . head ( ) 	 df . sort_values ( [ 'sales' , 'temperature' ] , ascending = False ) . head ( ) 	 df . sort_values ( [ 'sales' , 'temperature' ] , ascending = False ) . head ( ) 
グラフにグリッドを表示する	plt . grid ( True )	 plt . grid ( True ) 	 plt . grid ( True ) 	 plt . grid ( True ) 	 plt . grid ( True ) 	 plt . grid ( True ) 
sales 'の値を二次元グラフにプロットする	df [ 'sales' ] . plot ( )	 plt . hist ( <A> ) 	 plt . hist ( <A> ) 	 plt . hist ( <A> ) 	 pivot_monthly_df . plot ( ) 	 pivot_monthly_df . plot ( ) 
<A> の欠損値が含まれている行を抽出し、上 5 行を表示する	<A> [ <A> . isnull ( ) . any ( axis = 1 ) ] . head ( )	 <A> [ <A> . head ( ) 	 np <A> [ <A> . head ( ) 	 np <A> . head ( ) 	 df [ <A> ] . head ( ) 	 DataFrame <A> [ <A> . head ( ) . head ( ) 
線形回帰のインスタンスを生成し、 <A> とする	<A> = linear_model . LinearRegression ( )	 <A> . describe ( ) 	 import <A> as <C> 	 import <A> as <B> ) 	 import <A> as <B> ) 	 import <A> as <B> 
グラフ内に凡例を表示する。	plt . legend ( )	 plt . legend ( ) 	 plt . legend ( ) 	 plt . legend ( ) 	 plt . legend ( ) 	 plt . legend ( ) 
<A> を <B> としてインポート	import <A> as <B>	 import <A> as <B> 	 import <A> as <B> 	 import <A> as <B> 	 import <A> as <B> 	 import <A> as <B> 
データ <A> の absences についての要約統計量を取得	<A> [ 'absences' ] . describe ( )	 <A> [ 'absences' ] . median ( ) 	 pd . DataFrame ( <A> [ 'absences' ] . mask ( ) 	 <A> [ 'absences' ] . median ( ) 	 <A> [ 'absences' ] . median ( ) 	 <A> [ 'absences' ] . median ( ) 
データ <A> の G1 , G3 についての散布図をプロットを <B> として表示	plt . plot ( <A> [ 'G1' ] , <A> [ 'G3' ] , <B> )	 plt . boxplot ( <A> [ <B> ] , <A> [ <C> ] ) 	 plt . boxplot ( <A> [ <B> ] , <A> [ <C> ] ) 	 plt . hist ( <A> [ <B> ] , <A> [ <C> ] ) 	 plt . boxplot ( <A> [ <B> ] , <A> [ <C> ] ) 	 plt . boxplot ( <A> [ <B> ] , <A> [ <C> ] ) 
