<A> 内のカラム <B> に重複はあるのかを調べる	<A> . duplicated ( subset = <B> )	<D> <A> . duplicated ( subset = <B> )
データフレーム <A> 内で重複する行の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
同じグラフ内で表データ <A> の <B> と表データ <A> の <C> と <A> の表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の NaN を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
データフレーム <B> をインデックスに沿ってソートし、 <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
左側のデータの位置と右側のデータの <D> を項目名として、 <B> と <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	merge <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表データ <A> の <B> 行から末尾までを確認する	<A> [ <B> : ]	<A> [ <B> : ]
同じ軸で <A> <B> と表 <A> <C> 列と <A> <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
CSV ファイル <B> ( ファイル名 ) からカンマ区切りで表を読み、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
ビン数を <D> 、ビンのラベルを 0 始まりの連番として、 <B> の <C> をビン分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	range = pd . cut ( <B> [ <C> ] , <D> , label = False )
<B> というエクセルのシート名 <C> をデータフレームとして読み込んで、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
データフレーム <A> の <B> カラムを四分位数ごとで分割する	pd . qcut ( <A> [ <B> ] , 4 )	4 . qcut ( <A> [ <B> ] , 4 )
表データ <A> を表属性 <B> でソートする	<A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> )
そこで、マーカーの輪郭色として赤を用いる	markeredgecolor = 'red'	markeredgewidth = 'red'
表 <B> の全ての列で重複している行を取り除いて、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
そこで、グラフの種類はヒストグラムをする	kind = 'hist'	kind = 'hist'
表 <A> の欠損を <B> で埋め、インプレースする	<A> . fillna ( <B> , inplace = True )	X . fillna ( <A> , <B> , inplace = True )
<A> の <B> 列をヒストグラムで描画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
そこで、目印の色として青を用いる	markerfacecolor = 'blue'	'blue' = 'blue'
<B> という名前のエクセルファイルからデータフレームを読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
データフレーム <B> の全ての列で重複している行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	X = <B> . drop_duplicates ( )
そこで、色としてグレーを使う	color = 'gray'	markerfacecolor = 'gray'
表 <A> の中の欠損値を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> を <B> の値でソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
そこで、マーカーの輪郭色は赤紫を用いる	markeredgecolor = 'magenta'	markeredgewidth = 'magenta'
<A> の重複した行をドロップして、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表データ <A> の <B> と <C> の相関	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
そこで、赤をマーカーの輪郭色とする	markeredgecolor = 'red'	end = 'red'
表データ <A> <B> と表 <A> <C> 表属性と <A> 表属性 <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> という列を消して、 <A> にする	<A> = df . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
<A> の <B> と <A> データフレームの <C> とデータフレーム <A> の <D> カラムの箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、エラー処理を厳密にする	errors = 'strict'	errors = 'strict'
表 <A> のコラム <B> の月	<A> [ <B> ] . dt . month	plt . hist ( <A> [ <B> ] )
表 <A> の最初から <B> 行目まで	<A> [ : <B> ]	<A> [ : <B> ]
データフレーム <A> を <B> の値を軸に並び替え、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
そこで、線として点と線を使う	linestyle = 'dashbot'	'dashbot' = 'dashbot'
表データ <A> 中の未記入の値を削除して、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
<A> の振り直して、元のインデックスを削除して、再代入する	<A> = <A> . reset_index ( drop = True )	reset_index = <A> . reset_index ( drop = True )
<A> の <B> と <A> の <C> と <A> の <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内のそれぞれのカラムにある <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> のデータの詳細を表示する	<A> . info ( )	<A> . info ( )
同じグラフ内で <A> <B> と <A> 表属性 <C> と <A> <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> をグループ化して、値ごとのデータ数を求める	<A> . groupby ( <B> ) . size ( )	df1 . groupby ( <A> [ <B> ] ) . size ( )
表 <A> の全ての列で重複している行を取り除き、置き換える	<A> . drop_duplicates ( inplace = True )	= <A> . drop_duplicates ( )
表データ <A> 内の重複した行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
<A> をインデックスでソートし、インプレースする	<A> . sort_index ( inplace = True )	<A> = <A> . sort_index ( )
表データ <A> 内の NaN を <B> とし、再代入する	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
表 <A> 中の表属性 <B> に重複が存在するのか表示する	<A> . duplicated ( subset = <B> )	df . duplicated ( subset = [ <A> , <B> ] )
表データ <A> の <B> 表属性と <C> に重複はあるかどうか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> 内の欠損値が存在する行をドロップ	<A> . dropna ( )	<A> . dropna ( )
<A> と <B> を横にマージする	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
表 <A> の元の位置を振り直して、置き換える	<A> . reset_index ( drop = True , inplace = True )	reset_index = <A> . reset_index ( drop = True )
表 <A> 全体を <B> コラムでソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表データ <A> の <B> の欠損をカラム <B> の平均値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
表データ <A> の <B> と <C> の相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
<C> 番目の列をインデックスと設定して、 <B> をデータフレームとして読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
同じグラフ内で表 <A> の <B> と <A> 表の <C> と表 <A> の <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> をエクセルファイル <B> に書き込む	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
表データ <A> 全体をインデックスでソートする	<A> . sort_index ( )	<A> . sort_index ( )
<B> 区切りで表を CSV ファイル <A> ( ファイル名 ) から読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
表データ <A> 内の欠損を <A> の平均値で埋め、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> . fillna ( <A> . mean ( ) , inplace = True )
表 <A> をファイル名 <B> に書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表データ <A> の <B> の未入力の値を <B> コラムの平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
<A> の表属性 <B> をインデックスとして、 <A> とする	<A> = <A> . set_index ( <B> )	= <A> . set_index ( <B> )
表 <A> の <B> の曜日の数値型を見る	<A> [ <B> ] . dt . dayofweek	<A> [ <B> ] . dt . dayofweek
表データ <A> の <B> と <A> 表データの <C> と <A> 表データのコラム <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> <B> とデータフレーム <A> <C> コラムとデータフレーム <A> <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> 行目を落とし、 <A> とする	<A> = <A> . drop ( <B> )	X = <A> . drop ( <B> )
<A> の <B> コラムと <C> の相関を表示する	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
表 <A> のカラム名	<A> . columns	<A> . columns
<A> 中の NaN の個数を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の <B> コラムの値をソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
そこで、色は水色を用いる	color = 'cyan'	'cyan' = 'cyan'
表データ <A> の中の未記入の値を <B> とする	<A> . fillna ( <B> )	<B> <A> . fillna ( method = 'ffill' )
列番号 <B> をインデックスに、ファイルパス <A> を表データに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
そこで、★のマーカーを使用する	marker = '*'	marker = '*'
同じ x 軸と y 軸でデータフレーム <A> <B> と <A> データフレーム <C> と <A> データフレーム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体をインデックスを元にソートして、再代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
データフレーム <A> 中の <B> 表属性と <C> に重複があるか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <B> 内に存在する <C> を未記入の値に置換して、 <A> にする	<A> = <B> . replace ( <C> , np . nan )	<A> = <B> . replace ( <C> , np . nan )
<C> で <A> と <B> の折れ線グラフを表示する	plt . plot ( <A> , <B> , color = <C> )	sns . plot ( <A> , <B> , color = <C> )
表 <A> 内の未入力の値を消して、インプレースする	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
<A> のカラム名を <B> から <C> に、 <D> から <E> にリネームし、インプレースする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	'words' . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
表 <A> の <B> の出現回数を見る	<A> [ <B> ] . value_counts ( )	<B> <A> [ <B> ] . value_counts ( )
表データ <A> 内の欠損を <B> に置換し、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
データフレーム <A> 中の <B> を未入力の値に置換し、未入力の値がある行を削除を <A> にする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
同じ x 軸と y 軸で <A> の <B> と <C> とカラム <D> をボックスチャートで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	for plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中のコラム <B> とコラム <C> に重複があるかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
先頭の列をインデックスとして、 <B> を読んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	pd . read_csv ( <A> , index_col = <B> )
表 <A> 全体を <B> の値を元に昇順で並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
<B> の <C> を軸に昇順で並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<B> の <C> の値を軸に昇順で並び替えて、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
<B> を <A> 、リスト <D> を <C> コラムとして、新しいデータフレームを作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	range = ( <A> , <B> , <C> : <D> } )
表データ <A> のそれぞれの列にある <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> までの列を表示させる	pd . set_option ( 'display.max_columns' , <A> )	sns . pairplot ( <A> )
そこで、目印の色を赤紫とする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
そこで、マーカーの形のエッジ色は黄緑を使う	markeredgecolor = 'greenyellow'	'greenyellow' = 'greenyellow'
データフレーム <B> 全体を <C> で並び替え、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
そこで、マーカーは五芒星	marker = '*'	marker = '*'
データフレーム <A> 内の <B> と <C> に重複があるのかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、マーカーは円をする	marker = 'o'	marker = 'o'
表示するグラフのサイズを <A> x6 にする	plt . figure ( figsize = ( <A> , 6 ) )	plt . figure ( figsize = ( <A> , 6 ) )
表データ <A> 内の未入力の値が存在する行を削除	<A> . dropna ( )	<A> . dropna ( )
<A> を y 軸、 <B> を横軸として、線グラフを描写する	plt . plot ( <A> , <B> )	kind = plt . plot ( <A> , <B> )
表データ <A> のバリュー	<A> . values	<A> . values
データフレーム <A> 内の重複をを確認する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
タイトルを <A> にする	plt . title ( <A> )	plt . title ( <A> )
表 <A> の <B> と <A> のカラム <C> と <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、ビン数として <A> を用いる	bins = <A>	bins = <A>
データフレーム <A> のコラム <C> の曜日の数値型を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek	dt [ <A> [ <B> ] = <A> [ <C> ] . dayofweek
データフレーム <A> の <C> カラムの曜日の数値型を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek	dt [ <A> [ <B> ] = <A> [ <C> ] . dayofweek
<A> の内容を表示してみる	<A> . head ( )	X . head ( )
データフレーム <B> 内の NaN を含む行をドロップを <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> 内の列にある <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<B> ファイル名として <A> データフレームを CSV に書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
分割数を <C> 、ビンのラベルを 0 始まりの連番として、 <A> 表データの <B> 列をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
そこで、マーカーの形はクロスとする	marker = 'x'	marker = 'x'
データフレーム <A> の欠損を <B> で埋め、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
表 <A> 中の <B> に重複があるか	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
データフレーム <B> と表 <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> )	sep = <B> , <C> )
表データ <A> の <B> と <C> に重複が存在するのか調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の中に重複があるのかどうか表示する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表 <A> 内のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
同じ x 軸と y 軸でデータフレーム <A> の <B> カラムと <A> の <C> カラムと <A> の <D> カラムを箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を y 座標に加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
<A> というエクセルファイルの <B> 番目のシートから読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
データフレーム <A> をファイルパス <B> という名前で保存する	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
表 <A> の欠損を <B> に置換し、インプレースする	<A> . fillna ( <B> , inplace = True )	<A> . replace ( <B> , np . nan , inplace = True )
とりあえず <A> の内容を確認する	<A> . head ( )	<A> . head ( )
表データ <A> 内の <B> に重複がある行を落として、置き換える	<A> = <A> . drop_duplicates ( subset = <B> )	= <A> . drop_duplicates ( subset = <B> )
表 <A> のコラム <B> の未入力の値を <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
表データ <B> 全体を位置で並び替えて、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
同じグラフ内で <A> <B> カラムと <A> <C> カラムと <A> 表データ <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
位置と <D> を項目名として表データ <B> と <C> 表データを一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	merge <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> の <B> と <C> と <D> についての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ビン数を <D> 、ビンのラベルを整数値として、表データ <B> の <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	linestyle = pd . cut ( <B> [ <C> ] , <D> , label = False )
そこで、色として黄緑を使用する	color = 'greenyellow'	'greenyellow' = 'greenyellow'
表データ <A> 内の <B> と <C> 表属性に重複は存在するのかチェックする	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> の未記入の値をドロップを <A> にする	<A> = <A> . dropna ( )	= <A> . dropna ( )
<A> を <B> をコラム名として表にする	pd . DataFrame ( <A> , columns = <B> )	<A> . pd . DataFrame ( <B> , columns = [ 'label' ] )
表 <A> の <B> と <C> に重複があるかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> 中の <B> に重複があるか表示する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
データフレーム <B> の <C> と <D> コラムを消して、 <A> とする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
そこで、打点の大きさとして <A> を使う	markersize = <A>	markersize = <A>
データフレーム <A> 内の <B> に重複があるとき	if <A> . duplicated ( subset = <B> ) :	pd . duplicated ( subset = <A> [ <B> ] ) :
<A> において、 <B> の箱ひげ図を描画する	plt . boxplot ( <A> [ <B> ] )	boxplot plt . boxplot ( <A> [ <B> ] )
<A> の <B> カラムと <C> を値が大きい順に並び替え、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
データフレーム <A> カラム <B> と <A> <C> と <A> 表データ <D> カラムの箱髭図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> と <C> 表属性と <D> 表属性のボックスチャートを一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <C> の日にちを表示して、  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . day	<A> [ <B> ] = <A> [ <C> ] . dt . day
表 <A> の表属性 <B> をインデックス、 <C> 表属性を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> )	df1 <A> . pivot_table ( index = <B> , columns = <C> )
表 <A> 中のそれぞれの列にある <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> <B> と表データ <A> <C> と <A> <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を BOM 付きで <B> ファイルパスに書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	encoding = <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
データフレーム <A> の <B> と列 <C> と <D> について関係性を一度に作図する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> の <B> ごとに <C> の平均値	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<B> <A> . groupby ( [ <C> ] ) [ <D> ] . mean ( )
表 <A> のコラム <B>	<A> [ <B> ]	[ <A> <B> ]
そこで、プロットマーカーの種類の透明度を <A> とする	alpha = <A>	linestyle = <A> )
表 <A> の中の欠損値の数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> 中のそれぞれのカラムに存在する <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> 中の <B> を未記入の値に置換し、未記入の値がある行を落とし、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <A> の <B> 行目をドロップして、インプレースする	<A> . drop ( <B> , inplace = True )	for <A> . drop ( <B> , inplace = True )
そこで、マーカーは五芒星を使う	marker = '*'	marker = '*'
<B> というエクセルファイルの <C> 番目のシートを表データに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
そこで、マーカーのエッジ色は赤とする	markeredgecolor = 'red'	markeredgewidth = 'red'
表 <B> 全体を位置でソートを <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> という名前のエクセルデータを読む	pd . read_excel ( <A> )	pd . read_excel ( <A> , sheet_name = None )
<A> のコラム <B> に重複はあるかチェック	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> の中の <B> に重複がある行をドロップし、 <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	= <A> . drop_duplicates ( subset = <B> )
同じグラフ内で <A> 表データ <B> と <A> <C> と表データ <A> <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の列名を <B> から <C> に、 <D> から <E> に変更する	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<B> 中の欠損値を <B> の平均値で補って、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	= <B> . fillna ( <A> . mean ( ) )
表データ <A> を <B> の値を元にソートを <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表データ <B> 全体を <C> を元に昇順でソートを <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
列番号 <C> を位置に設定して、 <B> を表データに格納して、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> の <C> の前後の行の差分を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<B> <A> [ <C> ] = <A> [ <D> ] . diff ( periods = 1 )
境界値をリスト <D> として、データフレーム <B> の <C> をビン分割し、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<A> = pd . cut ( <B> [ <C> ] , <D> )
表 <A> 内の重複する行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <B> と <C> を縦に結合し、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
表データ <B> のカラム名を <C> から <D> に、 <E> から <F> にリネームし、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	markeredgewidth = <B> , columns = <C> , <D> : <E> } )
<A> の <B> コラムの値をソートし、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
データフレーム <A> の <B> ごとに <C> の数を計算する	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
表 <A> 内の重複している行をドロップし、 <A> に代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> の <B> と <A> の <C> と <A> 表の列 <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> をエクセルファイル <B> に変換する	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
<A> からカンマ区切りで表データを読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
データフレーム <A> の中の重複した行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表データ <A> 内の未入力の値を直前の行の値で補って、 <A> にする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表データ <A> のそれぞれの行に対して重複がある場合	if <A> . duplicated ( ) :	<A> . drop_duplicates ( )
データフレーム <A> の <B> の未入力の値を表属性 <B> の平均値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
<B> 全体を <C> コラムを元に昇順で並び替え、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表 <A> 中の列それぞれに存在する <B> の個数を見る	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <B> の中の未記入の値が存在する行を削除して、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<A> カラムをダミー変数に変換する	pd . get_dummies ( df [ <A> ] )	pd . get_dummies ( df [ <A> ] )
データフレーム <A> の <B> と <C> と <D> について関係性を一気に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
x 座標を <A> として、 <B> の棒グラフを描画する	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
<B> を <C> でソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<B> の <C> の名前を <D> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
データフレーム <A> の振り直して、元のインデックスを削除し、 <A> とする	<A> = <A> . reset_index ( drop = True )	fontsize = <A> . reset_index ( drop = True )
表データ <A> 内の重複している行を落とし、再代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
そこで、目印の色は黄緑色をする	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
表データを <C> 区切りで CSV ファイル <B> ( ファイル名 ) から読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
データフレーム <A> 内の重複要素がある行をドロップする	<A> . drop_duplicates ( )	X = <A> . drop_duplicates ( )
表データ <A> の形状を見る	<A> . shape	marker = <A> )
エクセルファイル <A> の <B> のシートを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
左側のデータの位置と右側のデータの <D> をキーとして、 <B> と表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	merge <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
そこで、点のマーカーを用いる	marker = '.'	marker = '.'
表データ <A> 内の <B> と <C> に重複が存在するのか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> にある <B> を欠損値に置換する	<A> . replace ( <B> , np . nan )	replace <A> . replace ( <B> , np . nan )
データフレーム <A> の <B> と <C> をドロップ	<A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> 表属性に重複がある行をドロップ	df . drop_duplicates ( subset = <A> )	<A> . drop_duplicates ( subset = <A> )
表データ <A> 内の欠損値を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	markeredgewidth = <A> . fillna ( <B> )
データフレーム <A> の <B> 行目の表属性 <C> を取得する	<A> . iloc [ <B> ] [ <C> ]	X [ <A> ] [ <B> ] [ <C> ]
表 <A> の <B> 列と表データ <A> の <C> と <A> 表データの列 <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と <B> の折れ線グラフを RGBc でプロットする	plt . plot ( <A> , <B> , color = c )	plot plt . plot ( <A> , <B> , color = c )
<A> ( データフレーム ) の列 <B> についてダミー変数を生成して、 <A> とする	<A> = pd . get_dummies ( <A> [ <B> ] )	<A> = pd . get_dummies ( <A> [ <B> ] )
<B> 番目の列をインデックスと設定して、 <A> をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
同じ軸で表データ <A> のコラム <B> と表データ <A> のコラム <C> と表データ <A> の <D> を箱髭図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> を位置に基づいてソートして、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <A> の全ての列の重複する値がある行をドロップして、インプレースする	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
表データ <A> 内の未入力の値を <B> で埋めて、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表データ <A> の <B> の名前を <C> に変更し、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
ビン数を <D> 、ビンの名前を <E> リストとして、 <B> の <C> をビン分割して、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	range = pd . cut ( <B> [ <C> ] , <D> , label = <E> )
左側のデータの位置と右側のデータの <D> をキーとして、表 <B> と表 <C> を結合し、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	df1 <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表 <B> の <C> の名前を <D> にリネームして、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
表 <A> の <B> を未記入の値に置換し、未記入の値がある行を落として、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <B> の <C> を落として、 <A> にする	<A> = <B> . drop ( <C> , axis = 1 )	<A> = <B> . drop ( <C> , axis = 1 )
そこで、目印は円である	marker = 'o'	marker = 'o'
同じ x 軸と y 軸で表 <A> の <B> 列と <C> と <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
エクセルファイル <A> の <B> からデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	<A> . to_excel ( <B> )
データフレーム <B> と表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> )	sep = <B> , <C> )
データフレーム <A> の <B> カラムとデータフレーム <A> のカラム <C> と <A> の <D> カラムの箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の列 <C> と <D> 列を大から小へと並び替え、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> をインデックスでソートし、置き換える	<A> . sort_index ( inplace = True )	= <A> . sort_index ( )
<A> というエクセルデータの <B> からデータフレームを読む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
データフレーム <A> を <B> という名前でエクセル形式で保存する	<A> . to_excel ( <B> )	plt . to_excel ( <A> [ <B> ] )
表 <B> と <C> データフレームを縦方向で一つにまとめ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
<B> という名前のエクセルの <C> のシートを読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
<B> の列 <C> を昇順でソートして、 <A> に代入する	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
日本語をグラフ内で表示できるようにする	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
データフレーム <A> のカラム <B> とカラム <C> ごとに <D> の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<A> 中の <B> に重複があるか	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表 <A> の行名を <B> から <C> にリネームして、再代入する	<A> = <A> . rename ( index = { <B> : <C> } )	<B> <A> = <A> . rename ( index = { <C> : <D> } )
リスト <B> を <A> 、 <D> を <C> 表属性として、新しい表データを作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	sns . pairplot ( <A> : <B> , <C> : <D> } )
表 <A> 内の重複する行の数を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> の <B> の出現頻度を表示する	<A> [ <B> ] . value_counts ( )	'words' <A> [ <B> ] . value_counts ( )
データフレーム <A> の <B> 列が <C> より少ないデータ	<A> [ <A> [ <B> ] <  <C> ]	< <A> [ <A> [ <B> ] < <C> ]
<A> の欠損を <B> に置き換える	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表 <A> の <B> と <C> コラムを値が大きい順に並び替え、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
CSV ファイル <A> ( ファイル名 ) から <B> 区切りで表データを読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
列番号 <C> をインデックスに、ファイル名 <B> から読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	] = pd . read_csv ( <B> , index_col = <C> )
同じグラフ内で <A> の <B> と <C> と <D> コラムを箱髭図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の全ての列の重複する行を取り除き、 <A> に代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<B> 区切りで表を <A> から読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<A> ( データフレーム ) の <B> を one - hot 表現にする	pd . get_dummies ( <A> [ <B> ] )	for pd . get_dummies ( <A> [ <B> ] )
データフレーム <A> の <B> カラムを位置に設定し、インプレースする	<A> . set_index ( <B> , inplace = True )	<A> . set_index ( <B> , inplace = True )
エポックは <A> までにする	max_iter = <A>	df . sort_values ( <A> )
表データ <A> 内の <B> に重複があるのか確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> 中の NaN の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <B> 内の重複している行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表データ <A> 中の <B> を欠損に置換し、欠損がある行を落として、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表データ <A> の行の名前を <B> から <C> に変更する	<A> . rename ( index = { <B> : <C> } )	<B> <A> . rename ( index = { <C> : <D> } )
<A> <B> と <A> <C> と <A> <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> をソートを <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
同じグラフ内で <A> <B> カラムと <A> 表データ <C> カラムと <A> <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、恒等関数を活性化とする	activation = 'identity'	bins = 'identity'
<B> という名前のエクセルデータをデータフレームとして読み込み、 <A> にする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
データフレーム <A> の <B> と表属性 <C> を値が大きい順に並び替え、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	X = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、 <A> に小数点以下 2 桁まで表現すること、パーセントを指定する。	<A> = '%.2f%%'	<A> = '%.2f%%'
データフレーム <A> の列 <B> の NaN を <B> の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
<A> と表 <B> のどちらにも存在するデータでマージする	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
表データ <A> の <B> の名前を <C> に、表属性 <D> の名前を <E> に変更し、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	markeredgewidth = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
表データ <A> と <B> を横方向に連結する	pd . concat ( [ <A> , <B> ] , axis = 1 )	for pd . concat ( [ <A> , <B> ] , axis = 1 )
表 <A> 内の重複する行をドロップし、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表データ <A> <B> 表属性と <A> <C> と <A> 表データ <D> のボックスチャートを一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の <B> を未記入の値に置換し、未記入の値がある行を消し、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
描いたグラフを <A> というファイル名で保存する	plt . savefig ( <A> )	to_csv plt . savefig ( <A> )
<A> のカラム名を <B> から <C> に、 <D> から <E> にリネームして、再代入する	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<B> <A> = <A> . rename ( columns = { <C> : <D> , <E> : <E> } )
<A> に重複はあるのかどうか確認する	df . duplicated ( subset = <A> )	sklearn . duplicated ( subset = <A> )
データフレーム <A> の <B> 行目から最後まで	<A> [ <B> : ]	<A> [ <B> : ]
<A> の全ての列の重複する値がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表 <A> 中の未記入の値の合計を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> の中の重複している行を削除し、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<B> というエクセルファイル <B> のシート全てをデータフレームに格納し、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表 <A> の表属性 <B> と <A> 表データの <C> と <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> と <C> 表データを横方向にマージし、 <A> とする	<A> = pd . merge ( <B> , <C> )	= pd . merge ( <A> , <B> , on = <C> )
そこで、マーカーの形の輪郭色は赤を用いる	markeredgecolor = 'red'	markeredgewidth = 'red'
データフレーム <A> 全体を <B> コラムの値を元に並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	linestyle = <A> . sort_values ( <B> )
表 <A> の列 <B> と列 <C> をドロップする	<A> . drop ( [ <B> , <C> ] , axis = 1 )	axis = <A> . drop ( [ <B> , <C> ] , axis = 1 )
表 <A> 中の <B> を欠損に置換し、欠損が存在する行を消して、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <A> を <B> ファイル名という名前にして CSV ファイルで保存する	<A> . to_csv ( <B> )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
エクセルファイル <B> の <C> から読み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表データ <A> 中の <B> を未入力の値に置換し、未入力の値が存在する行を落とし、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> 全体を列 <B> を元に昇順でソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表データ <A> を位置を元にソートして、 <A> にする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <A> <B> と <A> 表 <C> 列と表 <A> 列 <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> の重複している行を落とす	<A> . drop_duplicates ( )	markerfacecolor = <A> . drop_duplicates ( )
表 <A> の中に存在する <B> を欠損値に置換し、再代入する	<A> = <A> . replace ( <B> , np . nan )	nan = <A> . replace ( <B> , np . nan )
そこで、マーカーの形のエッジ色としてグレーを使う	markeredgecolor = 'gray'	activation = 'gray'
新しい表属性を表 <A> に追加し、名前を <B> とする	<A> [ <B> ] = [ 0 ] * len ( <A> )	<B> <A> = [ <B> ] * len ( <A> )
表 <A> 表属性 <B> とデータフレーム <A> 表属性 <C> と <A> <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の中の <B> 表属性に重複があるか否か	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<B> の元の位置を振り直して、 <A> とする	<A> = <B> . reset_index ( drop = True )	sns = <A> . reset_index ( drop = True )
データフレーム <A> <B> と <A> <C> とデータフレーム <A> <D> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <B> をインデックスに設定して、 <A> をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表 <A> の <D> 列について、 <B> 列をインデックス、 <C> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<B> <A> . pivot_table ( index = <C> , columns = <D> , values = <E> )
<A> のカラム <B> と <C> を消して、 <A> とする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
同じグラフ内で <A> 表データの <B> と <A> 表データの列 <C> と <A> の <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、積み上げグラフを使う	stacked = True	stacked = True
表データ <A> の <B> と <C> 列と <D> 列について関係性を一気に描く	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	linestyle = [ <A> [ <B> , <C> , <D> ] ] )
データフレーム <B> のインデックスをリセットして、 <A> とする	<A> = <B> . reset_index ( )	<A> = <B> . reset_index ( )
表 <A> 内の <B> を欠損に置換し、欠損が存在する行を削除を <A> にする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> 内の <B> に重複がある行を削除して、置き換える	<A> = <A> . drop_duplicates ( subset = <B> )	sns . drop_duplicates ( subset = <A> , inplace = True )
同じグラフ内で表データ <A> の <B> 表属性と <A> の <C> と <A> の表属性 <D> をボックスチャートで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> と <A> 表の <C> と <A> 表の列 <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> <B> と表 <A> 表属性 <C> と <A> <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> カラム <B> と表 <A> カラム <C> と <A> <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> <B> と表 <A> <C> と <A> 表 <D> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> 表属性に重複は存在するのか見る	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
そこで、色を紺色とする	color = 'navy'	color = 'navy'
全結合で <A> データフレームとデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
データフレーム <A> の <B> コラムとコラム <C> と <D> コラムについての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グラフの種類は面グラフとする	kind = 'area'	kind = 'area'
同じグラフ内で <A> の列 <B> と <A> の <C> とデータフレーム <A> の <D> をボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> と <B> 表に対して、カラム <C> をキーとしてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
分割数を <C> 、ビンのラベルを整数値として、 <A> 表の <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
<B> についてダミー変数を生成し、 <A> にする	<A> = pd . get_dummies ( <A> [ <B> ] )	<A> = pd . get_dummies ( <A> [ <B> ] )
表 <A> をインデックスを元に昇順で並び替える	<A> . sort_index ( )	ascending = <A> . sort_index ( )
<A> 全体を位置でソートして、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
今までのグラフを <A> として書き出す	plt . savefig ( <A> )	to_csv plt . savefig ( <A> )
データフレーム <A> の <D> について、コラム <B> を位置、コラム <C> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<B> <A> . pivot_table ( index = <C> , columns = <D> , values = <E> )
<A> を表として <B> 区切りで読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
表データ <A> のコラム <B> のデータ列を取得する	<A> [ <B> ]	<A> [ <B> ]
そこで、グラフの色を黄緑とする	color = 'greenyellow'	stacked = 'greenyellow'
グラフの x 軸を <A> として、 <B> の縦向き棒グラフを作画する	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
表 <A> 中のそれぞれのカラムに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> の重複する行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
y 座標に <A> というラベルを加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
表データ <A> のコラム <B> ごとに <C> の数	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
<A> 中の <B> を欠損に置換し、欠損がある行をドロップを <A> にする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表示するグラフの大きさを横 <A> 縦 <B> にセットする	plt . figure ( figsize = ( <A> , <B> ) )	plt . figure ( figsize = ( <A> , <B> ) )
表 <B> と <C> 表データを縦向きにマージして、 <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
同じ軸のセットで表 <A> 表属性 <B> と <A> 表 <C> 表属性と <A> <D> をボックスチャートで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の表属性 <B> と <A> の <C> と <A> の <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> の <C> 表属性を並び替えて、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
表データ <A> 中の NaN を含む行をドロップし、置き換える	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
表 <A> の <B> 内の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
エクセルデータ <A> の全部のシートをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> の度数分布図を <B> から <C> の間で描画する	plt . hist ( <A> , range = ( <B> , <C> ) )	plt . hist ( <A> , range = ( <B> , <C> ) )
<D> カラムをキーとして、 <B> と <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
そこで、リトルエンディアンを用いる	byteorder = 'little'	dropna = 'little'
そこで、文字コードとしてシフト JIS を使用する	encoding = 'shift_jis'	end = 'shift_jis'
データフレーム <A> にいくつ欠損値があるか確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、グレーを色にする	color = 'gray'	markerfacecolor = 'gray'
エクセルデータ <A> をデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> )
ビン数を <D> として、データフレーム <B> の <C> を要素数が等しくなるように分割し、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
表 <A> の <B> の未記入の値を <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
そこで、円グラフ上に小数点 2 位までのパーセント表記で構成割合を出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
ヘッダーなしでパス <A> を読み込む	pd . read_csv ( <A> , header = None )	markeredgecolor = pd . read_csv ( <A> , header = None )
<A> から新しい表データを作成する	pd . DataFrame ( { 'words' : <A> } )	marker = pd . DataFrame ( { 'words' : <A> } )
<B> カラムという列をドロップを <A> に代入する	<A> = <A> . drop ( <B> , axis = 1 )	<A> = <A> . drop ( <B> , axis = 1 )
データフレーム <A> 中のカラムそれぞれに存在する <B> の個数の合計を計算する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <B> を <C> コラムの値に基づいてソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表 <A> 中の重複している行をドロップ	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
データフレーム <A> の欠損値の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
ビン数を <D> 、ビンのラベルを整数値として、 <B> データフレームの <C> 列をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	linestyle = pd . cut ( <B> [ <C> ] , <D> , label = False )
カラム <A> という列をドロップし、置き換える	df . drop ( <A> , axis = 1 , inplace = True )	= df . drop ( <A> , axis = 1 )
表 <A> をパス <B> にして保存する	<A> . to_csv ( <B> )	'utf_8_sig' <A> . to_csv ( <B> )
<C> 区切りで <B> を読み込み、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表データ <B> の <E> について、 <C> をインデックス、表属性 <D> を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
ビンの数を <B> として <A> のヒストグラムを作画する	plt . hist ( <A> , bins = <B> )	kind = 'hist'
表データ <A> <B> と <A> <C> と表データ <A> <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> の <C> の名前を <D> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
同じ軸のセットで <A> の <B> と <A> の <C> と表 <A> の <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> と <A> 表データの <C> と表データ <A> の <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カンマ区切りで <B> を読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
<A> ( データフレーム ) の列 <B> と列 <C> を逆順にする	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	sns . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
そこで、打点として＊を使う	marker = '*'	marker = '*'
表 <A> の <B> に重複はあるかチェック	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表 <A> のインデックス名を調べる	<A> . index	index = <A> . index
表データ <A> から重複している行をドロップして、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
コラム <B> という列をドロップして、 <A> に代入する	<A> = df . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
表データ <A> の <B> 行目の <C>	<A> . iloc [ <B> ] [ <C> ]	X [ <A> ] [ <B> ] [ <C> ]
表 <A> 中のカラムに存在する <B> の個数を計算する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> の <B> カラムと <C> と <D> カラムについてのボックスチャートを描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の中の <B> に重複はあるか表示する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表 <A> を <B> で並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	sort_values <A> . sort_values ( <B> , inplace = True )
<A> を表データに格納する	pd . read_csv ( <A> )	DataFrame = pd . read_csv ( <A> )
表 <A> と <B> 表データを横方向に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
カンマ区切りで表として <B> ファイルを読み込み、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
列 <B> と <C> を大きい順にソートし、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )
同じグラフ内で <A> データフレームコラム <B> とデータフレーム <A> <C> とデータフレーム <A> <D> を箱髭図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
位置と <C> を項目名として <A> と <B> 表データをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
x 軸を <A> として、 <B> の棒グラフを描画する	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
<A> のカラム <B> に重複はあるのの場合	if <A> . duplicated ( subset = <B> ) :	sns . duplicated ( subset = [ <A> , <B> ] ) :
データフレーム <A> の <B> を確認する	<A> [ <B> ]	[ <A> <B> ]
データフレーム <A> を <B> コラムに沿ってソートし、再代入する	<A> = <A> . sort_values ( <B> )	linestyle = <A> . sort_values ( <B> )
<A> の <B> の前後の行の差分を求める	<A> [ <B> ] . diff ( periods = 1 )	diff [ <B> ] . diff ( periods = 1 )
表 <A> の <B> と <C> を値が大きい順にソートして、 <A> に代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、色は赤紫をする	color = 'magenta'	color = 'magenta'
同じ軸のセットでデータフレーム <A> <B> と <A> データフレーム <C> とデータフレーム <A> <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> 中の未記入の値が存在する行をドロップして、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <B> を <C> コラムを軸にソートを <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表 <B> 中の重複した行を落として、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
そこで、マーカーは四角形をする	marker = 's'	marker = 's'
<A> をインデックスで並び替えて、置き換える	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <A> <B> と表データ <A> <C> 表属性と <A> <D> 表属性の箱髭図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <C> をインデックスに設定して、 <B> を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	] = <A> . read_csv ( <B> , index_col = <C> )
<A> というエクセルファイルの <B> のシートを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
表 <A> 中の欠損が存在する行を消し、インプレースする	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
棒グラフの位置を真ん中として、 <A> 軸を <A> とした <B> の棒グラフを作図する	plt . barh ( <A> , <B> , align = 'center' )	plt . barh ( <A> , <B> , align = 'center' )
y 座標のラベルを <A> に設定する	plt . ylabel ( <A> )	plt . ylabel ( <A> )
<A> 内の <B> を NaN に置換し、 NaN が存在する行を削除し、 <A> に代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> 内の欠損の合計を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> をデータフレームにして、 <A> とする	<A> = pd . DataFrame ( <B> , columns = [ 'label' , 'label2' ] )	] <A> = pd . DataFrame ( <B> , columns = [ 'label' ] )
エクセルの <B> の <C> のシートを表データに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	] = pd . read_excel ( <B> , sheet_name = <C> )
<B> 番目の列をインデックスとして、ファイル <A> を表に格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表データ <A> の <B> と <C> と <D> について関係性を一気に作画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> を表属性 <B> の値を元に並び替え、 <A> に代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
そこで、バッファリングしない	buffering = -1	color = 'cyan'
表 <A> の <B> の名前を <C> にリネームし、再代入する	<A> = <A> . rename ( index = { <B> : <C> } )	'words' = <A> . rename ( columns = { <B> : <C> } )
表 <A> を <B> を軸に並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> を小さい順に並び替え、置き換える	df . sort_values ( <A> , inplace = True )	df = df . sort_values ( <A> )
重複している最後の行を残して <B> ( データフレーム ) 内の重複している行を落として、 <A> とする	<A> = <B> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
表 <A> の <B> を中央値で分割する	pd . qcut ( <A> [ <B> ] , 2 )	pd . qcut ( <A> [ <B> ] , 2 )
<A> の <B> とカラム <C> ごとに <D> の値の合計	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
そこで、目印としてアスタリスクを使う	marker = '*'	marker = '*'
表データ <A> の重複している行数を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> の元のインデックスをリセットする	<A> . reset_index ( drop = True )	X = <A> . reset_index ( drop = True )
<B> というエクセルを読んで、 <A> とする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
<A> をインデックスで並び替えて、 <A> にする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
表 <A> の欠損値の数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> 内の NaN を含む行を落とす	<A> . dropna ( )	<A> . dropna ( )
エクセルファイル <B> の全部のシートをデータフレームとして読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
データフレーム <A> の <B> コラムと <C> を大から小へとソートする	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False )
df の表属性 <A> のデータを繰り返す	for name in data [ <A> ] :	name in for name in data [ <A> ] :
一番左の列をインデックスと設定して、 <A> を表に格納する	pd . read_csv ( <A> , index_col = 0 )	markeredgecolor = pd . read_csv ( <A> , index_col = 0 )
同じ軸で <A> 表の <B> と <C> 表属性と <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) の <B> カラムをダミー変数化する	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
<B> の <C> を位置、 <D> を表属性としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	<A> = <B> . pivot_table ( columns = <C> , values = <D> )
表データ <A> を表属性 <B> の値を元にソート	<A> . sort_values ( <B> )	df . sort_values ( <A> [ <B> ] , ascending = False )
表 <A> の中の <B> コラムに重複はあるかどうかチェックを見る	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> の <B> 表属性と <C> と <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を <B> から <C> のヒストグラムにする	plt . hist ( <A> , range = ( <B> , <C> ) )	plt . hist ( <A> , range = ( <B> , <C> ) )
そこで、 <A> をマーカーの形状の輪郭線とする	markeredgewidth = <A>	alpha = <A>
<A> 表属性を小さい順にソート	df . sort_values ( <A> )	ascending = df . sort_values ( <A> )
<A> の中のカテゴリ変数を数値データにする	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
表データ <A> の行の名前を <B> から <C> に変更して、インプレースする	<A> . rename ( index = { <B> : <C> } , inplace = True )	<A> . rename ( index = { <B> : <C> } , inplace = True )
表 <A> において、列 <B> の箱ひげ図を描画する	plt . boxplot ( <A> [ <B> ] )	boxplot plt . boxplot ( <A> [ <B> ] )
表データ <A> 中の重複している行を削除	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
BOM 付きで <B> にデータフレーム <A> を保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	to_csv <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
ピボット操作で表データ <A> の列を行に変更する	<A> . stack ( )	sklearn . stack ( <A> )
そこで、区間は <A> にする	bins = <A>	bins = <A>
表データ <A> の <B> を one - hot 表現に変換し、 <A> とする	<A> = pd . get_dummies ( <A> [ <B> ] )	= pd . get_dummies ( <A> [ <B> ] )
<B> ファイルパスをカンマ区切りで表データとして読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表データ <A> の <B> と <C> を値が大きい順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> をインデックスを軸にソートを <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
そこで、線は点と線とする	linestyle = 'dashbot'	'dashbot' = 'dashbot'
<A> の <B> を未入力の値に置換し、未入力の値がある行をドロップする	<A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> . replace ( <B> , np . nan ) . dropna ( )
そこで、エンコーディングは、 <A> を使う	encoding = <A>	end = <A>
データフレーム <A> の <B> の欠損を <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<A> 中の index が <B> の行	<A> . loc [ <B> ]	<A> . loc [ <B> ]
x 軸を <A> とした <B> の縦棒グラフを作画する	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
表 <A> 内の欠損値を <B> とし、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表データ <A> 中の列 <B> に重複はあるかどうか表示する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
データフレーム <A> 全体をインデックスでソート	<A> . sort_index ( )	<A> . sort_index ( )
同じ x 軸と y 軸で表データ <A> の <B> 列と <C> と <D> 列を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、色は青を用いる	color = 'blue'	sns = 'blue'
そこで、マーカーのエッジ色は紺色を用いる	markeredgecolor = 'navy'	end = 'navy'
<B> を <C> をコラム名として表データに変換して、 <A> とする	<A> = pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
そこで、目印の色は黄緑色である	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
そこで、プロットマーカーの透過度を <A> と設定する	alpha = <A>	alpha = <A>
データフレーム <A> の欠損を <B> に置き換える	<A> . fillna ( <B> )	X . fillna ( <A> [ <B> ] )
表 <A> の <B> と <A> 表データの表属性 <C> と <A> の <D> 表属性の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、 <A> をエラー処理ポリシーとする	errors = <A>	alpha = <A>
同じグラフ内で <A> の <B> と <C> と <D> コラムを箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、打点をバツ印とする	marker = 'x'	marker = 'x'
表 <A> を <B> を元に昇順でソート	<A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表 <B> と <C> を縦方向で結合し、 <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<A> の <B> についての最頻値	<A> [ <B> ] . mode ( )	plt . mode ( <A> [ <B> ] )
データフレーム <A> の中の <B> を未入力の値に置換し、未入力の値がある行を落とし、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> 中の <B> と <C> に重複はあるかどうか表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> のカラム <B> と <C> を削除を <A> に代入する	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<B> <A> = <A> . drop ( [ <C> , axis = 1 )
<A> のカラムそれぞれにある <B> の個数を表示する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
x 座標を <A> とした <B> の縦棒グラフを作画する	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
<B> 区切りで表を <A> ファイルから読む	pd . read_csv ( <A> , sep = <B> )	to_csv pd . read_csv ( <A> , sep = <B> )
表 <B> の <C> を未記入の値に置換し、未記入の値がある行を落とし、 <A> にする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と表 <B> をマージする	pd . merge ( <A> , <B> , how = 'outer' )	merge pd . merge ( <A> , <B> , how = 'outer' )
表データ <B> の <C> をインデックス、 <D> を列としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> )
<A> の <B> を欠損に置換し、欠損がある行を削除	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
そこで、マーカーの色はシアンを使う	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
表データ <A> のコラム <B> をインデックスとして、置き換える	<A> . set_index ( <B> , inplace = True )	<A> . set_index ( <B> , inplace = True )
データフレーム <A> の NaN を消す	<A> . dropna ( )	<A> . dropna ( )
描いたプロットを <A> というファイルにして保存する	plt . savefig ( <A> )	plt . savefig ( <A> )
軸を <A> として、 <B> の横向きの棒グラフを描写する	plt . barh ( <A> , <B> , align = 'center' )	plt . bar ( df [ <A> , <B> ] , ascending = False )
データフレーム <A> の <B> と <C> 列に重複はあるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> 中の未記入の値がある行をドロップし、置き換える	<A> . dropna ( inplace = True )	df . dropna ( inplace = True )
同じグラフ内で <A> の表属性 <B> と <C> と <D> 表属性を箱髭図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グラフとして度数分布図を使う	kind = 'hist'	color = 'cyan'
データフレーム <A> の行数や列数を表示する	<A> . shape	df1 . shape
同じグラフ内で <A> 表の表属性 <B> と表 <A> の <C> と <A> の表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> に重複は存在するのかチェックを確認する	df . duplicated ( subset = <A> )	sklearn . duplicated ( subset = <A> )
インデックスと <D> コラムを項目名としてデータフレーム <B> と <C> データフレームを一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<B> <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表 <A> を <B> で並べ直す	<A> . sort_values ( by = <B> )	sort_values <A> . sort_values ( by = <B> )
同じ軸のセットで <A> <B> と表データ <A> <C> と <A> <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> のカラム <B> と <C> と <D> について関係性を一気に作画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	linestyle = [ <A> [ <B> , <C> , <D> ] ] )
グリッドをグラフに描く	plt . grid ( True )	kind = plt . grid ( True )
表 <A> を <B> 列を元に昇順で並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	linestyle = <A> . sort_values ( <B> )
データフレーム <B> 全体を <C> に沿ってソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
<B> から <C> の範囲で <A> のヒストグラムを描画する	plt . hist ( <A> , range = ( <B> , <C> ) )	plt . hist ( <A> , range = ( <B> , <C> ) )
データフレーム <A> の中の NaN を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	markeredgewidth = <A> . fillna ( <B> )
表 <A> 内の欠損値がある行を削除する	<A> . dropna ( )	<A> . dropna ( )
表データ <A> の <B> 位置の名前を <C> にリネームし、 <A> とする	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
分割数を <D> 、ビンの名前を 0 始まりの連番として、 <B> データフレームの列 <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	range = pd . cut ( <B> [ <C> ] , <D> , label = False )
データフレーム <A> 内の <B> 列と <C> に重複があるかどうか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
インデックスなしで <A> 表を <B> に書き出す	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
<A> 内 ] [ でものを抽出する	<A> [ <A> . duplicated ( ) ]	[ <A> ] . dt . duplicated ( ) ]
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	merge <A> = pd . merge ( <B> , <C> , how = 'outer' )
カンマ区切りでファイル名 <B> をデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
分割数を <C> 、ビンの名前をリスト <D> として、表データ <A> の <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
表データ <A> の <B> 列のユニークな要素を確認する	<A> [ <B> ] . unique ( )	plt . unique ( <A> [ <B> ] )
同じグラフ内で <A> 表の表属性 <B> と <A> の <C> 表属性と <A> の <D> 表属性を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 中の未記入の値を <B> とし、 <A> に代入する	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
表データ <A> の列の名前を <B> から <C> にリネームする	<A> . rename ( columns = { <B> : <C> } )	for <A> . rename ( columns = { <B> : <C> } )
そこで、活性化は、双曲線正接関数を用いる	activation = 'tanh'	alpha = 'tanh'
<B> というエクセルのシート全部からデータフレームを読み込んで、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> 中の NaN を <B> として、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
列 <A> と <B> に重複があるかどうか調べる	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表データ <A> の <B> コラムが <C> のデータを抽出する	<A> [ <A> [ <B> ] == <C> ]	[ <A> [ <B> ] == <C> ]
<B> の中の <C> を未入力の値に置換し、未入力の値が存在する行を消して、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
データフレーム ( <A> ) の <C> 表属性を <B> 座標、 <E> 表属性を <D> 軸として、散布図をプロットする	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )	markeredgewidth = <A> . plot ( <B> , <C> , <D> = <D> = <E> )
表データ <A> にある <B> を欠損値に置き換え、再代入する	<A> = <A> . replace ( <B> , np . nan )	= <A> . replace ( <B> , np . nan )
そこで、マーカーの形状の大きさを <A> とする	markersize = <A>	markeredgewidth = <A>
データフレーム <A> の <B> と <C> コラムと <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グラフの色を青とする	color = 'blue'	sns = 'blue'
データフレーム <A> 内の重複している値がある行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
2 次元配列 <B> から新しいデータフレームを作って、 <A> とする	<A> = pd . DataFrame ( <B> , columns = [ 'label' , 'label2' ] )	df = pd . DataFrame ( <B> , columns = [ 'label' ] )
同じ軸で <A> <B> と <A> 表データ列 <C> と <A> 表データ列 <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グラフ線を破線と点線でひく	linestyle = 'dashbot'	'dashbot' = 'dashbot'
表 <A> 内の未記入の値の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 内の <B> を欠損に置換し、欠損が存在する行を削除して、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> 内の未記入の値を <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
表データ <A> 内の未入力の値を <B> に置き換え、再代入する	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
表データ <A> 内の表属性 <B> と <C> に重複を判定する	<A> . duplicated ( subset = [ <B> , <C> ] )	if <A> . duplicated ( subset = [ <B> , <C> ] ) :
<A> の度数分布図を <B> から <C> の区間でプロットする	plt . hist ( <A> , range = ( <B> , <C> ) )	pd . hist ( <A> , range = ( <B> , <C> ) )
<A> の列の名前を <B> から <C> に、 <D> から <E> に変更して、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	markeredgewidth = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<A> の <B> の欠損値を <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
データフレーム <A> 内の <B> を欠損に置換し、欠損がある行を削除	<A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <A> の <B> をドロップを <A> にする	<A> = <A> . drop ( <B> , axis = 1 )	<A> = <A> . drop ( <B> , axis = 1 )
そこで、色は紺色を用いる	color = 'navy'	color = 'navy'
<A> の <B> カラムをインデックスとして設定し、再代入する	<A> = <A> . set_index ( <B> )	X = <A> . set_index ( <B> )
<A> 内の欠損の個数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の <B> の未記入の値をコラム <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
<A> の <B> カラムごとに <C> の平均を算出する	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	] <A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
表 <B> とデータフレーム <C> を縦結合して、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
表データ <A> の全ての列の重複する行をドロップし、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
<B> と <C> を大から小へと並び替え、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <A> の <B> と表属性 <C> を値が大きい順に並び替え、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	sns . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
表 <A> の <B> を NaN に置換し、 NaN が存在する行を落とし、 <A> に代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<B> の <C> を昇順で並び替え、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
2 次元配列 <A> をデータフレームにする	pd . DataFrame ( <A> , columns = [ 'label' , 'label2' ] )	DataFrame = pd . DataFrame ( <A> , columns = [ 'label' ] )
同じ x 軸と y 軸で <A> <B> と表 <A> <C> と表 <A> <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> を one - hot 表現にして、 <A> にする	<A> = pd . get_dummies ( <A> [ <B> ] )	<A> = pd . get_dummies ( <A> [ <B> ] )
ビン数を <D> 、ビンの名前を整数値として、 <B> の <C> を分割し、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	range = pd . cut ( <B> [ <C> ] , <D> , label = False )
表 <A> 内の <B> に重複はあるのならば	if <A> . duplicated ( subset = <B> ) :	sns . duplicated ( subset = [ <A> , <B> ] ) :
<A> ( データフレーム ) の <B> と <C> を大から小へとして、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表データ <A> 内の重複する行の数を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
そこで、目印の輪郭線は <A> にする	markeredgewidth = <A>	alpha = <A>
同じ軸で <A> 表属性 <B> と <A> <C> と <A> <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と <B> のグラフをプロットする	plt . plot ( <A> , <B> )	alpha = df . sort_values ( [ <A> , <B> ] )
データフレーム <A> 全体を表属性 <B> に基づいてソートし、 <A> にする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
そこで、グラフの色をマゼンタとする	color = 'magenta'	color = 'magenta'
重複している行をドロップして、 <A> とする	<A> = df . drop_duplicates ( )	= <A> . drop_duplicates ( )
作ったグラフを <A> という名前で保存する	plt . savefig ( <A> )	plt . savefig ( <A> )
データフレーム <A> の <B> をヒストグラムにする	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表 <A> 内の <B> を未記入の値に置換し、未記入の値がある行を削除して、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> の全ての列の重複する値がある行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
一番左の列を位置に指定して、 <B> をデータフレームに格納して、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	markeredgewidth = <A> . read_csv ( <B> , index_col = 0 )
表 <A> 内の NaN を表データ <A> の平均値で補って、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	= <A> . fillna ( <A> . mean ( ) )
ビン数を <D> 、ビンの名前をインデックスとして、 <B> データフレームの <C> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	pd . cut ( <A> [ <B> ] , <C> , <D> , label = False )
境界値を <C> として、 <A> の <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
データフレーム <A> 全体を <B> の値で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
カンマ区切りで CSV ファイル <A> ( ファイル名 ) から表データを読む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
データフレーム <B> の中の <C> を欠損値に置換し、欠損値がある行を消し、 <A> にする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )
<A> の中の欠損を削除して、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表 <B> のインデックス名を <C> から <D> にリネームし、 <A> とする	<A> = <B> . rename ( index = { <C> : <D> } )	<B> <A> = <B> . rename ( index = { <C> : <D> } )
表データ <A> 内の NaN の個数を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> 表の内容をを表示する	<A> . head ( )	pd . head ( <A> )
<A> ファイル名を表データとして <B> 区切りで読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
そこで、種類として度数分布図を使う	kind = 'hist'	kind = 'hist'
一番左の列をインデックスに設定して、ファイル名 <B> を表に格納し、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	markeredgewidth = <A> . read_csv ( <B> , index_col = 0 )
表データ <A> と表 <B> を横方向にくっつける	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
棒グラフの項目を <A> から <B> 、 <C> 、 <D> に変える	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	plt . xticks ( <A> , [ <B> , <C> , <D> ] )
同じ軸で <A> 表データ <B> カラムと表データ <A> カラム <C> と表データ <A> カラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の表属性 <B> をインデックスとして、置き換える	<A> . set_index ( <B> , inplace = True )	<A> . set_index ( <B> , inplace = True )
表データ <A> の欠損値を <B> とし、インプレースする	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
データフレーム <A> 内の <B> に重複はあるかどうか確認を表示する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
同じグラフ内で <A> データフレーム <B> コラムと <A> データフレームコラム <C> と <A> <D> をボックスチャートで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 列 <B> と <A> <C> と表データ <A> <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> <B> と表 <A> <C> 列と <A> 表 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> <B> コラムと <A> 表データコラム <C> と <A> 表データ <D> コラムのボックスチャートを一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の欠損値の個数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 中の未記入の値を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> の NaN をその平均値で穴埋めする	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
表 <A> の重複する行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
柱状図で	plt . hist ( df [ 'A' ] )	plt . hist ( df [ 'A' ] )
<C> 列を項目名として、表データ <A> と表データ <B> をマージする	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
データフレーム <A> <B> と表データ <A> <C> と <A> 表データ <D> 列の箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 中の列それぞれに存在する <B> の個数を計算する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> の <C> カラムに <D> を適用して、新しく <B> コラムにする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	<B> <A> [ <C> ] = <A> [ <D> ] . map ( <D> )
<A> ( データフレーム ) のコラム <B> をソートして、再代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表 <A> の <B> と表データ <A> の <C> 表属性と <A> の表属性 <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の未記入の値の合計を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> 全体を位置を元にソートを <A> とする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<B> を読み込んで、 <A> にする	<A> = pd . read_csv ( <B> )	range = ( <B> )
<A> 内の重複している行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
データフレーム <A> をカラム <B> の値を軸にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表データ <B> の <C> 行目を消して、 <A> にする	<A> = <B> . drop ( <C> )	<A> = <B> . drop ( <C> )
表データ <A> のオブジェクトデータの統計情報を見る	<A> . describe ( include = 'O' )	<A> . describe ( include = 'O' )
<A> 中の <B> を未入力の値に置換し、未入力の値がある行を削除して、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<B> <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
左側のデータの位置と右側のデータの <C> を項目名として、 <A> 表データと <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> を位置を軸にソートを <A> に代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <A> のコラム <B> を削除し、 <A> にする	<A> = <A> . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
<B> という名前のエクセルファイルをデータフレームとして読み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = None )	df = pd . read_excel ( <B> )
表データ <A> 中の <B> と表属性 <C> に重複はあるのか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> 内の欠損値を <B> に置換して、インプレースする	<A> . fillna ( <B> , inplace = True )	<B> <A> . fillna ( <B> , inplace = True )
<A> のコラム <B> についての標準偏差	<A> [ <B> ] . std ( )	<B> <A> [ <B> ] . std ( )
<B> 区切りで <A> を表データとして読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
そこで、マーカーの種類を五角形とする	marker = '*'	marker = '*'
<B> と表 <C> を縦向きに連結を <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<B> と表データ <C> のどちらにも存在するデータでマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
表 <A> と <B> を縦方向にくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
フォーマットを指定して、 <A> 表の <B> を datetime 型に変換する	pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )	'%Y-%m-%d' = pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )
そこで、目印は＊をする	marker = '*'	marker = '*'
分割数を <C> 、ビンのラベルを <D> として、 <A> 表データの <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	pd . cut ( <A> [ <B> ] , <C> , label = <D> )
同じ x 軸と y 軸で <A> 表の <B> と <A> の <C> と <A> の列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を y 座標、 <B> を横軸として、折れ線グラフを描画する	plt . plot ( <A> , <B> )	plot plt . plot ( <A> , <B> )
データフレーム <A> の未入力の値の数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 中の表属性 <B> に重複があるのかチェック	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表データ <A> の <B> 表属性が <C> のデータ	<A> [ <A> [ <B> ] == <C> ]	[ <A> [ <B> ] == <C> ]
そこで、活性化として双曲線正接関数を用いる	activation = 'tanh'	alpha = 'tanh'
<B> に <A> を文字化けしないように書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
データフレーム <A> 内の <B> とコラム <C> に重複はあるのかどうかチェックする	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> の <B> コラムと <C> の相関を表示する	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
分割数を <D> 、ビンのラベルをリスト <E> として、表 <B> の <C> をビン分割して、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	linestyle = pd . cut ( <B> [ <C> ] , <D> , label = <E> )
同じ軸でデータフレーム <A> のカラム <B> と <C> カラムと <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> 表 <B> と <A> カラム <C> と表 <A> <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カラム <A> を値が小さい順にソートして、置き換える	df . sort_values ( <A> , inplace = True )	inplace = df . sort_values ( <A> )
<A> 内の未記入の値を <B> に置換する	<A> . fillna ( <B> )	plt . fillna ( <A> . mean ( ) )
x 軸を <A> とした <B> の縦向き棒グラフを表示する	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
<A> ( データフレーム ) の <B> と <C> を大から小へとして、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> 内の欠損値を削除して、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
そこで、バイナリモードをする	mode = 'b'	bins = 'b'
データフレーム <A> を <B> コラムに沿ってソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表データ <A> の <B> と <A> 表データの <C> カラムと表データ <A> のカラム <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> を <B> という名前にして CSV ファイルに書き込む	<A> . to_csv ( <B> )	df . to_csv ( <A> [ <B> ] )
表データ <A> の先頭 5 行を確認する	<A> . head ( )	pd . head ( <A> )
<A> の <B> のデータ	<A> [ <B> ]	<A> [ <B> ]
<B> 区切りで <A> を読み込む	pd . read_csv ( <A> , sep = <B> )	plt . read_csv ( <A> , sep = <B> )
<B> に <A> 表データを文字化けしないように保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	'utf_8_sig' <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
<A> と <B> を大きい順にする	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
同じ軸のセットで <A> 表 <B> と <A> <C> と <A> <D> を箱髭図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) のコラム <B> を順にソートし、再代入する	<A> = <A> . sort_values ( <B> )	linestyle = <A> . sort_values ( <B> )
データフレーム <A> 全体を <B> でソートし、 <A> に代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<B> を列 <C> の値を軸にソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> 中の重複している値がある行を削除して、インプレースする	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<A> 中の NaN を <A> の平均値で埋め、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
表 <A> を <B> の値でソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> ( データフレーム ) の <B> を順番になるようにし、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
カラム <A> と <B> を降順にして、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , ascending = False , inplace = True )
リスト <B> を <C> をコラム名として表データに変換し、 <A> にする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	<A> = pd . pd . DataFrame ( <B> , columns = <C> )
データフレーム <A> の <B> と <C> と表属性 <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の数値データ以外の統計情報を確認する	<A> . describe ( include = 'O' )	pd . describe ( include = 'O' )
df のカラム <A> のデータ列を繰り返す	for name in data [ <A> ] :	name in data [ <A> ] :
表データ <A> を <B> にインデックスなしで書き出す	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
<A> ( データフレーム ) の列 <B> と列 <C> を値が大きい順にソートし、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> 中の未記入の値の合計を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の列 <B> をヒストグラムで描画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表 <A> の表属性 <B> が <C> もしくは <D> のデータを得る	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
表データ <A> 中の未入力の値が存在する行を落として、置き換える	<A> . dropna ( inplace = True )	df . dropna ( inplace = True )
左側のデータの位置と右側のデータの列 <D> をキーとして、 <B> と <C> を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
そこで、色としてマゼンタを使用する	color = 'magenta'	solver = 'magenta'
データフレーム <B> 全体を <C> の値に沿ってソートして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
エクセルファイル <B> の <C> 番目のシートを表データに格納して、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
グラフの x 軸を <A> とした <B> の棒グラフをプロットする	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
そこで、目印はひし形を用いる	marker = 'D'	marker = 'D'
<A> を y 軸、 <B> をグラフの x 軸として、グラフを描く	plt . plot ( <A> , <B> )	autopct = plt . plot ( <A> , <B> )
データフレーム <A> の <B> と <C> コラムを消す	<A> . drop ( [ <B> , <C> ] , axis = 1 )	axis = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> 内の <B> を欠損値に置換し、欠損値が存在する行を消す	<A> . replace ( <B> , np . nan ) . dropna ( )	df1 <A> . replace ( <B> , np . nan ) . dropna ( )
<A> のカラム <B> をグループ化して、値ごとのデータ件数	<A> . groupby ( <B> ) . size ( )	<A> . groupby ( <B> ) . size ( )
表データ <B> のコラム <C> と <D> を逆順にソートを <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
そこで、マーカーの形状のエッジ色は黄緑色を使う	markeredgecolor = 'greenyellow'	markeredgewidth = 'greenyellow'
表 <A> 内の重複する行を削除	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<A> の <B> と表データ <A> の <C> と <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、目印の色を黄色とする	markerfacecolor = 'yellow'	marker = 'yellow'
そこで、目印の色は青を使う	markerfacecolor = 'blue'	'blue' = 'blue'
<A> ( データフレーム ) の <B> と <C> 表属性を大きい順にして、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	sort_values <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表データ <A> を <B> ファイル名という名前で CSV ファイルに書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
データフレーム <B> を <C> を軸に並び替え、 <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、横方向の棒グラフをする	kind = 'barh'	kind = 'barh'
先頭の列を位置にして、ファイル名 <B> から読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表データ <A> の全ての列で重複している値がある行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> を <B> に保存する	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
左側のデータの位置と右側のデータの <C> を項目名として、データフレーム <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> の <B> と <A> 表のコラム <C> と <A> の <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の重複する行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<A> 軸ラベルを y 座標に加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
同じグラフ内で表データ <A> <B> と <A> <C> 表属性と <A> 表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> のコラム <C> と <D> コラムを落として、 <A> にする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
表 <A> 中の <B> を欠損に置換し、欠損が存在する行をドロップ	<A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( )
<A> に存在する <B> を NaN に置換する	<A> . replace ( <B> , np . nan )	sklearn . replace ( <A> , np . nan )
表データ <A> の欠損値を表 <A> の平均値で補って、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
<B> 内の重複している行をドロップを <A> に代入する	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
そこで、目印はバツ印とする	marker = 'x'	marker = 'x'
同じグラフ内でデータフレーム <A> <B> と <A> <C> とデータフレーム <A> <D> をボックスチャートで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) の <B> 列と <C> を大から小へとして、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	. sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
そこで、 <A> をマーカーの形状の輪郭とする	markeredgewidth = <A>	markersize = <A>
データフレーム <A> の <B> の名前を <C> に、 <D> の名前を <E> に変更して、 <A> に代入する	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	markeredgewidth = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
エンコーディングを shift_jis として、 <B> ファイル名を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )
表 <B> の <C> をインデックス、 <D> を表属性としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> )
表データ <A> を位置を元に昇順でソートを <A> とする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<B> の <E> について、表属性 <C> を位置、 <D> を表属性としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
表データ <A> の列 <B> をグループ化して、値ごとのデータ件数を算出する	<A> . groupby ( <B> ) . size ( )	df1 . groupby ( <A> [ <B> ] ) . size ( )
<A> を <B> カラムを元に昇順でソートし、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
<B> の重複している行を消し、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> と <B> をグラフで表示する	plt . plot ( <A> , <B> )	color = <A> . plot ( <B> )
<A> という名前のエクセルデータのシート全部を読み込む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表データ <B> 内の欠損を <C> として、 <A> に代入する	<A> = <B> . fillna ( <C> )	markeredgewidth = <B> . fillna ( <C> )
そこで、目印は菱形とする	marker = 'D'	marker = 'D'
左側のデータの位置と右側のデータの <C> をキーとして、 <A> と <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表 <A> の <B> と <C> コラムを大から小へと並び替え、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	autopct = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <B> の <C> と <D> をドロップを <A> とする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
<B> を <C> を表属性名としてデータフレームに変換して、 <A> とする	<A> = pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
先頭の列をインデックスと設定して、 <B> を読み、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = 0 )	pd . read_csv ( <A> , index_col = <B> )
データフレーム <A> 全体をインデックスを元に昇順でソートして、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> のカラム <B> が <C> より小さいデータを得る	<A> [ <A> [ <B> ] <  <C> ]	<A> [ <A> [ <B> ] < <C> ]
同じグラフ内で <A> の <B> と <A> の <C> と <A> の <D> 列を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の欠損を表データ <A> の平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
データフレーム <A> 全体をコラム <B> でソートして、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
表データ <A> の <B> コラムと <C> を削除し、 <A> とする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	= <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> 中の重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> 内のそれぞれのカラムに存在する <B> の個数の合計値を表示する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表データ <A> 中の <B> と表属性 <C> に重複はあるのかを確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
CSV ファイル <A> ( ファイル名 ) を表として読む	pd . read_csv ( <A> )	markeredgecolor = pd . read_csv ( <A> )
<A> から新しい表データを作る	pd . DataFrame ( <A> , columns = [ 'label' , 'label2' ] )	range pd . DataFrame ( <A> , columns = [ 'label' ] )
表 <A> 中のそれぞれのカラムにある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> 内の NaN の合計を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の出現頻度を調べる	pd . DataFrame ( { 'words' : <A> } ) . value_counts ( )	value_counts . value_counts ( )
表データ <A> 全体を <B> を元にソートする	<A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
MLP を新たに使えるようにして、 <A> にする	<A> = sklearn . neural_network . MLPClassifier ( )	encoding = <A> . MLPClassifier ( )
重複した最後の行を残して <B> ( データフレーム ) 内の重複した行を削除を <A> に代入する	<A> = <B> . drop_duplicates ( keep = False )	labels = <B> . drop_duplicates ( keep = False )
同じ軸のセットで <A> 表 <B> と <A> <C> と <A> 表 <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> というエクセルファイルの <C> を読み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表データ <A> の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
データフレーム <A> の <B> と <A> の <C> と <A> の <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の欠損の数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
列 <A> と <B> を大きい順にソートする	df . sort_values ( [ <A> , <B> ] , ascending = False )	ascending = df . sort_values ( [ <A> , <B> ] , ascending = False )
<B> カラムを値が小さい順にして、 <A> に代入する	<A> = df . sort_values ( <B> )	<A> = df . sort_values ( <B> )
表 <A> 中の未記入の値がある行を削除して、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
表 <B> 内の欠損をドロップして、 <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <B> の列名を <A> にする	<A> = <B> . columns	<A> = <B> . columns
表データ <A> 全体を <B> の値を元に昇順でソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> 中にある <B> を未記入の値とする	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
データフレーム <A> の <B> と <C> を降順に並び替え、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
同じグラフ内で表データ <A> の <B> と <A> 表データの <C> 表属性と表データ <A> の <D> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を消して、置き換える	<A> = <A> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
表 <A> の表属性 <B> ごとに <C> 表属性の個数を算出する	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
データフレーム <A> の <B> のバリューを調べる	<A> [ <B> ] . values	<A> [ <B> ] . values
<A> で重複する行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
境界値をリスト <C> として、 <A> 表の <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
表データ <A> の全ての列で重複している行をドロップし、 <A> に代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表データ <A> 中の未記入の値を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
一番左の列を位置に指定して、 <A> をデータフレームとして読む	pd . read_csv ( <A> , index_col = 0 )	markeredgecolor = pd . read_csv ( <A> , index_col = 0 )
データフレーム <A> 中の <B> とコラム <C> に重複はあるのかどうかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の未入力の値を表 <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
表データ <A> の表属性 <B> と <C> をドロップを <A> とする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<B> <A> = <A> . drop ( [ <C> , axis = 1 )
<A> を <B> の値を元にソートする	<A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> を <B> ファイルという名前で書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表 <A> の '名前' コラムを全て <B> ( 文字列 ) にする	<A> [ '性別' ] = [ <B> ] * len ( <A> )	<A> [ '性別' ] = [ <B> ] * len ( <A> )
<B> から <C> の間で <A> の柱状グラフを表示する	plt . hist ( <A> , range = ( <B> , <C> ) )	plt . hist ( <A> , range = ( <B> , <C> ) )
データフレーム <A> 中の <B> に重複はあるのか表示する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表データ <A> の末尾 5 行を確認する	<A> . tail ( )	plt . tail ( <A> )
表データ <A> の最初の <B> 行	<A> . head ( <B> )	<A> . tail ( <B> )
表 <A> の内容をチェックを調べる	<A> . head ( )	<A> . head ( )
データフレーム <B> と <C> 表を縦方向で結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
<A> <B> と表データ <A> <C> と <A> 表属性 <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の中の NaN を <B> に置き換え、インプレースする	<A> . fillna ( <B> , inplace = True )	for <A> . fillna ( <B> , inplace = True )
表データ <A> 全体を <B> で並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
<A> というエクセルデータから読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> 内に重複が存在するのかチェックする	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表 <A> のカラム <B> と <A> 表データのカラム <C> と <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> 行目を落とす	<A> . drop ( <B> )	df . drop ( <A> [ <B> ] )
<B> というエクセルのシート全てをデータフレームとして読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
データフレーム <A> の <B> 表属性と <C> と <D> 表属性の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> 中の列それぞれに存在する <B> の個数の合計を確認する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表データ <A> で重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
円グラフを真円にする	plt . axis ( 'equal' )	plt . axis ( 'equal' )
表データ <A> のコラム <B> の欠損を <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<A> をインデックスを元にソートし、置き換える	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
ビン数を <D> 、ビンの名前を整数値として、データフレーム <B> の <C> をビン分割し、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	bins = pd . cut ( <B> [ <C> ] , <D> , label = False )
<A> の <B> 列と <A> の <C> とデータフレーム <A> の <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> 全体を <C> 列を元に並び替え、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<A> ( データフレーム ) のカラム <B> を小から大へとソートし、 <A> に代入する	<A> = <A> . sort_values ( <B> )	markeredgewidth = <A> . sort_values ( <B> )
表データ <A> のコラム <B> を落とし、 <A> とする	<A> = <A> . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
表 <A> の中のそれぞれのカラムにある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> を表属性 <B> の値に沿ってソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
表 <A> の <D> について、 <B> をインデックス、 <C> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
データフレーム <A> と <B> 表データを横方向にくっつける	pd . merge ( <A> , <B> )	if <A> . sort_values ( [ <B> ] , ascending = False )
<B> を <C> をコラム名として表にして、 <A> にする	<A> = pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
データフレーム <A> の <B> ごとに <C> の個数を計算する	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
重複した最後の行を残して <A> ( データフレーム ) の中の重複した行をドロップ	<A> . drop_duplicates ( keep = False )	df1 <A> . drop_duplicates ( keep = False )
表属性 <A> を順に並び替える	df . sort_values ( <A> )	linestyle = df . sort_values ( <A> )
データフレーム <A> 全体を <B> の値を元にソートし、 <A> にする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
データフレーム <B> 内の未記入の値が存在する行をドロップを <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<B> の <E> カラムについて、 <C> をインデックス、 <D> をカラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
同じ x 軸と y 軸で <A> の <B> カラムと <A> の <C> カラムと <A> の <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 中のカラム <B> と <C> に重複は存在するのかチェックを調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
左側のデータのインデックスと右側のデータのカラム <A> をキーとして 2 つのデータを一つにまとめる	pd . merge ( df1 , df2 , left_index = True , right_on = <A> )	left_index . merge ( df1 , df2 , left_index = True , right_on = <A> )
<A> を箱ひげ図に描写する	plt . boxplot ( <A> )	'box' = plt . boxplot ( <A> )
そこで、打点のを青色とする	markerfacecolor = 'blue'	'blue' = 'blue'
<A> の列 <B> と <A> の <C> と <A> 表の列 <D> についてのボックスチャートを表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の欠損をドロップする	<A> . dropna ( )	<A> . dropna ( )
<B> の行名を <C> から <D> に変更し、 <A> とする	<A> = <B> . rename ( index = { <C> : <D> } )	<A> = <B> . rename ( index = { <C> : <D> } )
表データ <A> 全体を <B> の値を元に昇順でソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
表データ <A> を位置で並び替えて、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
表 <A> と <B> データフレームを横にマージする	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
表 <A> を <B> の値を元に昇順で並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	linestyle = <A> . sort_values ( <B> )
データフレーム <A> のカテゴリ変数を数値データにして、 <A> とする	<A> = pd . get_dummies ( <A> )	fontsize = pd . get_dummies ( <A> )
そこで、マーカーの輪郭幅は <A> をする	markeredgewidth = <A>	bins = <A>
そこで、ランダムステートは <A> とする	random_state = <A>	bins = <A>
データフレーム <A> 中の欠損を含む行を落として、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
そこで、色は黄色で表示する	color = 'yellow'	color = 'yellow'
そこで、ビックエンディアンをバイトオーダーとする	byteorder = 'big'	start = 'big'
表 <A> 内の欠損値を <B> に置換し、 <A> にする	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
<A> のカラム <B> の名前を <C> に変更し、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> } )	= <A> . rename ( columns = { <B> : <C> } )
左側のデータのインデックスと右側のデータのコラム <D> をキーとして、 <B> 表データと <C> をマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
<B> を小さい順にし、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = df . sort_values ( <B> )
データフレーム <B> 中の重複している行を削除を <A> とする	<A> = <B> . drop_duplicates ( )	= <B> . drop_duplicates ( )
カンマ区切りで <B> を読み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
一番左の列を位置に指定して、 <B> をデータフレームとして読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<A> の <B> インデックスの名前を <C> に変更する	<A> . rename ( index = { <B> : <C> } )	index = <A> . rename ( index = { <B> : <C> } )
表 <B> にある <C> を欠損値に置換し、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	, <A> = <B> . replace ( <C> , np . nan )
<A> の <B> を軸にソートする	<A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> 内の欠損値を含む行を削除して、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
表 <A> を位置でソートする	<A> . sort_index ( )	<A> . sort_index ( )
表 <B> 中の未記入の値を表 <B> の平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
そこで、活性化関数は relu である	activation = 'relu'	activation = 'relu'
データフレーム <A> をファイルパス <B> という名前にして CSV ファイルに書き込む	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
表 <A> 全体をインデックスに沿ってソートして、再代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
重複している最後の行を残して <A> ( データフレーム ) 内の重複している行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
表データ <A> の <B> 列と <C> を値が大きい順に並び替える	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> の <B> と <C> と列 <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
そこで、マーカーの形状としてアスタリスクを用いる	marker = '*'	marker = '*'
パーセプトロンを準備する	sklearn . neural_network . MLPClassifier ( )	color = sklearn . neural_network . MLPClassifier ( )
表 <A> の中の <B> と <C> 表属性に重複があるのかどうか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <B> の全ての列の重複する行をドロップし、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<C> 区切りで CSV ファイル <B> を読み、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表 <A> の重複要素がある行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <B> を位置でソートし、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
列番号 <C> を位置に、 <B> をデータフレームに格納し、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	] = <A> . read_csv ( <B> , index_col = <C> )
表データ <A> 全体をインデックスを元に昇順で並び替えて、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
ビン数を <D> として、 <B> 表の <C> をビン分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> )	<A> = pd . cut ( <B> [ <C> ] , <D> )
表 <A> にある <B> を欠損値に置換し、置き換える	<A> = <A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan , inplace = True )
表データ <A> の表属性 <B> を昇順にソートして、再代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
同じグラフ内で表データ <A> カラム <B> と表データ <A> カラム <C> と表データ <A> カラム <D> をボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> を <B> に保存する	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
表属性 <B> を順に並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = df . sort_values ( <B> )
列 <A> に重複がある行を drop	df . drop_duplicates ( subset = <A> )	sklearn . drop_duplicates ( subset = <A> )
表 <A> の <C> の曜日を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name
重複した最後の行を残して <A> ( データフレーム ) 内の重複した行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
フォーマットを指定して、 <A> の <B> を年月日の形式に変換する	pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )	markeredgecolor = pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )
表 <A> の <B> カラムを確認する	<A> [ <B> ]	markeredgewidth <A> [ <B> ]
ファイル <B> に BOM 付きで <A> を保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	to_csv <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
<B> という列をドロップして、 <A> にする	<A> = df . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
そこで、活性化は、ランプ関数を使う	activation = 'relu'	activation = 'relu'
<B> の重複している行を削除を <A> に代入する	<A> = <B> . drop_duplicates ( )	X = <B> . drop_duplicates ( )
表 <A> 内の <B> に重複がある行を削除し、インプレースする	<A> . drop_duplicates ( subset = <B> , inplace = True )	sns . drop_duplicates ( subset = <A> , inplace = True )
<B> を <C> を元にソートを <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> 内の <B> に重複が存在するのか表示してみる	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
左側のデータの位置と右側のデータの <C> を項目名として、 <A> と <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <B> 中の重複している値がある行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	= <B> . drop_duplicates ( )
表 <A> の <B> をインデックス、 <C> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> )	index = <A> . pivot_table ( index = <B> , columns = <C> )
表 <A> をインデックスを元に並び替え、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
両方の列を使って <A> ( データフレーム ) と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	merge pd . merge ( <A> , <B> , how = 'outer' )
<A> 内の <B> コラムに重複がある行を消し、再代入する	<A> = <A> . drop_duplicates ( subset = <B> )	= <A> . drop_duplicates ( subset = <B> )
<B> ( データフレーム ) の <C> と <D> を値が大きい順にし、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> の列 <B> と表データ <A> の <C> 列と <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> と <A> 表の <C> と <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の重複しているデータ	<A> [ <A> . duplicated ( ) ]	[ <A> . duplicated ( ) ]
表データ <A> を <B> コラムに基づいてソートし、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
今までのプロットを <A> として保存する	plt . savefig ( <A> )	to_csv plt . savefig ( <A> )
表データ <A> 中のカテゴリ変数を one - hot 表現にする	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
表データ <A> にある <B> を欠損値に置き換えて、置き換える	<A> . replace ( <B> , np . nan , inplace = True )	<A> . replace ( <B> , np . nan , inplace = True )
重複した最後の行を残して <A> ( データフレーム ) の中の重複している行を削除	<A> . drop_duplicates ( keep = False )	<B> <A> . drop_duplicates ( keep = False )
重複した最後の行を残して <A> ( データフレーム ) の中の重複した行を落とし、再代入する	<A> = <A> . drop_duplicates ( keep = False )	fontsize = <A> . drop_duplicates ( keep = False )
表データ <A> の最初から <B> 行目まで	<A> [ : <B> ]	<A> [ : <B> ]
そこで、種類は面グラフをする	kind = 'area'	kind = 'area'
柱状グラフを用いて	plt . hist ( df [ 'A' ] )	plt . hist ( df [ 'A' ] )
<B> 番目の列をインデックスと設定して、ファイル <A> を読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
同じグラフ内で <A> のコラム <B> と <A> の <C> と <A> データフレームの <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グレーをマーカーの形の色とする	markerfacecolor = 'gray'	markerfacecolor = 'gray'
表データ <B> と <C> データフレームを縦方向に連結を <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
データフレーム <A> 中の重複を	<A> . duplicated ( )	df [ <A> ] . duplicated ( ) ]
表データ <B> を <C> に沿ってソートして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
データフレーム <A> の重複している値がある行を取り除いて、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <B> を表属性 <C> の値に沿ってソートし、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
表データ <A> 全体をインデックスを元に昇順でソートを <A> に代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<A> という名前のエクセルファイルの全部のシートを読む	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> , sheet_name = None )
<D> をキーとして、 <B> と表 <C> をマージし、 <A> に代入する	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
位置と <D> を項目名として表データ <B> と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<B> <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <B> と表 <C> に対して、 <D> をキーとしてデータを内部結合し、 <A> に代入する	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
<A> という軸ラベルを y 座標に加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
そこで、活性化関数として relu を使用する	activation = 'relu'	activation = 'relu'
<A> というラベルを x 軸につける	plt . xlabel ( <A> )	plt . xlabel ( <A> )
表データ <A> の <B> の名前を <C> にリネームし、インプレースする	<A> . rename ( index = { <B> : <C> } , inplace = True )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
そこで、線は転戦	linestyle = 'dotted'	color = 'dotted'
分割数を <D> 、ビンの名前を整数値として、表データ <B> の <C> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	linestyle = pd . cut ( <B> [ <C> ] , <D> , label = False )
そこで、マーカーのエッジ色は黄色をする	markeredgecolor = 'yellow'	activation = 'yellow'
表 <B> の <C> を未入力の値に置換し、未入力の値が存在する行を消し、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
データフレーム <B> の表属性 <C> を四分位数ごとで分割して、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , 4 )	] = pd . qcut ( <B> [ <C> ] , 4 )
<A> の <B> と <C> 表属性を降順にソートし、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	X . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
データフレーム <A> 内のそれぞれのカラムにある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> 全体を <B> の値を軸にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
そこで、マーカーの色として赤を使う	markerfacecolor = 'red'	markersize = 'red'
<A> ( データフレーム ) の <B> と <C> を降順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<B> というエクセルファイルの <C> のシートからデータフレームを読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
<A> ( データフレーム ) の <B> を値が小さい順にする	<A> . sort_values ( <B> )	markeredgewidth = <A> . sort_values ( <B> )
そこで、色は青色で表示する	color = 'blue'	color = 'blue'
<B> というエクセルの <C> シート名をデータフレームに格納して、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	] = pd . read_excel ( <B> , sheet_name = <C> )
<A> という列を削除	df . drop ( <A> , axis = 1 )	df . drop ( <A> , axis = 1 )
重複した最後の行を残して <B> ( データフレーム ) の重複した行を消して、 <A> とする	<A> = <B> . drop_duplicates ( keep = False )	fontsize = <B> . drop_duplicates ( keep = False )
<C> 番目の列を位置に設定して、ファイルパス <B> を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> の <B> と <C> の相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
表 <A> の振り直して、元の位置を削除する	<A> . reset_index ( drop = True )	reset_index = <A> . reset_index ( drop = True )
同じグラフ内で <A> の <B> と <A> の <C> と <A> の <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カンマ区切りで表として <B> を読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
グラフの大きさを <A> x6 にセットする	plt . figure ( figsize = ( <A> , 6 ) )	plt . figure ( figsize = ( <A> , 6 ) )
表 <A> の欠損が存在する行を消して、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
<A> の <B> 表属性が <C> 以下データ	<A> [ <A> [ <B> ] <= <C> ]	<= <A> [ <B> ] <= <C> ]
そこで、目印の色は水色にする	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
<A> というエクセル <A> のシート全てをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
データフレーム <A> 内の NaN を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
ビン数を <C> として、 <A> 表データの <B> を要素数が等しくなるように分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
<A> ( データフレーム ) の <B> と表属性 <C> を大きい順にソートし、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	color = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <B> の中の重複している行を削除を <A> とする	<A> = <B> . drop_duplicates ( )	X = <B> . drop_duplicates ( )
同じグラフ内で <A> の <B> と <A> 表の <C> と表 <A> のコラム <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 全体をインデックスに基づいてソートし、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
同じ軸で表 <A> の <B> コラムと表 <A> の <C> と <A> のコラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> 全体を位置に沿ってソートして、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
先頭の列を位置に指定して、 <B> を読み込み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<A> <B> とデータフレーム <A> <C> カラムとデータフレーム <A> <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の未入力の値を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表 <A> に存在する <B> を欠損として、 <A> にする	<A> = <A> . replace ( <B> , np . nan )	<A> = <A> . replace ( <B> , np . nan )
横軸を <A> とした <B> の縦向き棒グラフを表示する	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
<A> の <B> の名前を <C> に変更する	<A> . rename ( index = { <B> : <C> } )	'words' <A> . rename ( columns = { <B> : <C> } )
表データ df の <A> のデータ列をひとつずつ繰り返す	for name in data [ <A> ] :	name in for name in data [ <A> ] :
<A> の <B> と <C> と <D> について関係性を一度に作図する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> 全体を位置を軸にソートして、 <A> とする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<A> の行数や列数を調べる	<A> . shape	bins = <A> . shape
ファイル <B> を <C> 区切りでデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	] = pd . read_csv ( <B> , sep = <C> )
先頭の列をインデックスに指定して、 <A> ファイルパスからデータフレームとを読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
同じグラフ内で表データ <A> <B> と <A> <C> 列と <A> 表データ <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> のバリューを調べる	<A> [ <B> ] . values	<A> [ <B> ] . values
左側のデータのインデックスと右側のデータの <C> をキーとして、 <A> 表データと <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <B> の <C> の名前を <D> に、 <E> の名前を <F> に変更し、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	markeredgewidth = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
そこで、グラフ種類はヒストグラムを使う	kind = 'hist'	kind = 'hist'
<A> の欠損値を削除を <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <A> の <B> 表属性と <C> を値が大きい順にソートして、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
同じ軸のセットで表 <A> <B> と <A> <C> と <A> <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の <B> と <C> に重複があるならば	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	duplicated : <A> . duplicated ( subset = [ <B> , <C> ] ) :
一番左の列をインデックスに指定して、ファイル名 <B> から読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
そこで、色は紫	color = 'purple'	color = 'purple'
<C> を項目名として、 <A> 表と表 <B> を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
データフレーム <A> の <B> が <C> より大きいデータを得る	<A> [ <A> [ <B> ] >  <C> ]	<A> [ <A> [ <B> ] > <C> ]
表 <A> 内の重複する行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> の元のインデックスを振り直し、置き換える	<A> = <A> . reset_index ( drop = True )	reset_index = <A> . reset_index ( drop = True )
同じグラフ内で <A> 表の <B> カラムとカラム <C> とカラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <C> 列の曜日の数値型を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek	dt [ <A> [ <B> ] = <A> [ <C> ] . dayofweek
<A> を縦軸、 <B> を横軸として、折れ線グラフをプロットする	plt . plot ( <A> , <B> )	plot plt . plot ( <A> , <B> )
そこで、線として破線と点線を用いる	linestyle = 'dashbot'	'dashbot' = 'dashbot'
<A> 内のそれぞれのカラムにある <B> の個数の合計値を調べる	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> の列 <B> をインデックスに設定する	<A> . set_index ( <B> )	<A> . set_index ( <B> )
そこで、マーカーの色は赤色を使う	markerfacecolor = 'red'	markerfacecolor = 'red'
<A> の NaN を <B> に置換し、 <A> とする	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
ビン数を <D> として、 <B> の <C> を分割し、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<A> = pd . cut ( <B> [ <C> ] , <D> )
そこで、グラフ線を一点鎖線で描く	linestyle = 'dashbot'	bins = 'dashbot'
表 <A> の中の <B> コラムと <C> コラムに重複はあるのかどうか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
x 座標に <A> という軸ラベルを付ける	plt . xlabel ( <A> )	plt . xlabel ( <A> )
表 <A> をファイルパス <B> という名前で CSV ファイルに書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表 <A> を <B> という名前にして書き込む	<A> . to_csv ( <B> )	df . to_csv ( <A> [ <B> ] )
<A> をインデックスに基づいてソートして、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
表データ <B> 中の <C> を欠損に置換し、欠損がある行を落として、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )
重複している最後の行を残して <A> ( データフレーム ) 中の重複している行をドロップし、 <A> にする	<A> = <A> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
表 <A> で重複した行の数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
同じ軸で表 <A> の <B> と <A> の <C> と表 <A> の <D> を箱髭図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> が <C> のデータ	<A> [ <A> [ <B> ] == <C> ]	[ <A> [ <B> ] == <C> ]
データフレーム <A> 中のそれぞれの列にある <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <B> 全体を <C> 表属性で並び替え、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
そこで、隠れ層は <A> 層をする	hidden_layer_sizes = ( <A> , )	byteorder = ( <A> , )
<A> の <B> の欠損を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	[ <A> [ <B> ] . fillna ( <C> )
データフレーム <A> 内の NaN を <B> とし、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
分割数を <C> 、ビンの名前を 0 始まりの連番として、表データ <A> の <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
そこで、ビンの数は <A> にする	bins = <A>	bins = <A>
データフレーム <A> の NaN がある行をドロップし、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表データ <A> 内の未入力の値の数を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
一番左の列をインデックスと設定して、 <B> を表に格納し、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	] = pd . read_csv ( <A> , index_col = <B> )
データフレーム <A> の <B> を欠損値に置換し、欠損値がある行を落とし、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
左側のデータのインデックスと右側のデータの列 <C> を項目名として、 <A> 表と <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表 <A> のコラム <B> の月を調べる	<A> [ <B> ] . dt . month	plt . hist ( <A> [ <B> ] )
<A> のヒストグラムを表示する	plt . hist ( <A> )	plt . hist ( <A> )
<A> の <B> 列の値を昇順でソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	bins = <A> . sort_values ( <B> )
描画したグラフを <A> として保存する	plt . savefig ( <A> )	plt . savefig ( <A> )
そこで、マーカーは★とする	marker = '*'	marker = '*'
左側のデータのインデックスと右側のデータの <D> を項目名として、表データ <B> と <C> 表データを一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <A> <B> と <A> 表 <C> と表 <A> <D> カラムについての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 中の重複した行を削除し、 <A> にする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
重複している最後の行を残して <B> ( データフレーム ) 内の重複している行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
そこで、色は赤紫を用いる	color = 'magenta'	color = 'magenta'
同じ軸のセットで <A> 表データ <B> と <A> <C> と表データ <A> <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> と <A> の <C> と <A> 表データの <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の中のそれぞれのカラムにある <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
同じグラフ内で <A> 表データ <B> と <A> <C> と <A> <D> 表属性を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
エクセル <A> をデータフレームとして読む	pd . read_excel ( <A> )	sheet_name = pd . read_excel ( <A> )
表 <A> をインデックスに沿ってソートし、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
データフレーム <A> 全体を <B> 列を元に並び替え、再代入する	<A> = <A> . sort_values ( <B> )	linestyle = <A> . sort_values ( <B> )
表 <A> をエクセルファイル <B> という名前で書き込む	<A> . to_excel ( <B> )	read_excel <A> . to_excel ( <B> )
表 <A> の要約統計量を見る	<A> . describe ( )	<A> . describe ( )
データフレーム <A> の要素を確認する	<A> . values	<A> . values
データフレーム ( <A> ) のコラム <B> を横軸、コラム <C> を縦軸として、散布図をプロットする	<A> . plot ( kind = 'scatter' , x = <B> , y = <C> )	x <A> . plot ( kind = 'scatter' , <B> = <C> )
<A> の中に重複は存在するのか確認する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表 <A> 中の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
そこで、ラインスタイルを点線とする	linestyle = 'dotted'	sort_values = 'dotted'
左側のデータの位置と右側のデータの <C> コラムをキーとして、 <A> と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表 <B> 中の未入力の値を <C> に置き換え、 <A> とする	<A> = <B> . fillna ( <C> )	markeredgewidth = <B> . fillna ( <C> )
<A> を y 座標、 <B> をグラフの x 軸として、散布図を描画する	plt . scatter ( <A> , <B> )	plot plt . scatter ( <A> , <B> )
ビン数を <C> 、ビンの名前をインデックスとして、表データ <A> の <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
表データ <B> の <C> カラムの名前を <D> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
棒グラフの項目名を <A> から <B> 、 <C> 、 <D> に変える	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	plt . xticks ( <A> , [ <B> , <C> , <D> ] )
表データ <A> 全体を <B> の値を軸に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> という名前のエクセルデータのシート名 <B> をデータフレームとして読み込む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
表データ <A> の <B> 列をヒストグラムで作図する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
<B> を <C> を列名としてデータフレームにして、 <A> にする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
左側のデータの位置と右側のデータの <A> を項目名として 2 つのデータを一つにまとめる	pd . merge ( df1 , df2 , left_index = True , right_on = <A> )	left_index . merge ( df1 , df2 , left_index = True , right_on = <A> )
データフレーム <A> の <B> と <C> ごとに <D> の値の和	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> において、全ての要素が <C> の表属性を作り、 <B> とする	<A> [ <B> ] = [ <C> ] * len ( <A> )	<A> [ <B> ] = [ <C> ] * len ( <A> )
データフレーム <A> の <B> が <C> 以下データ	<A> [ <A> [ <B> ] <= <C> ]	<= <A> [ <B> ] <= <C> ]
データフレーム <A> から重複する行を取り除いて、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<A> のそれぞれのカラムに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> 中の重複している値がある行を削除して、再代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表データ <A> の <B> の欠損を <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
表 <B> の <C> に重複がある行を消して、 <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
x 座標を <A> とした <B> の縦棒グラフを作画する	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
表データ <A> を位置で並び替え、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
そこで、棒グラフを使う	kind = 'bar'	kind = 'bar'
表 <B> 中の重複している行をドロップを <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
データフレーム <A> の <B> の <C> 行目を抽出する	<A> [ <B> ] [ <C> ]	[ <A> [ <B> ] [ <C> ]
エクセル <A> をデータフレームに読み込む	pd . read_excel ( <A> )	sheet_name = pd . read_excel ( <A> )
<A> 全体を位置でソートする	<A> . sort_index ( )	<A> . sort_index ( )
表 <A> 中で重複した行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
エクセルの <B> を読み、 <A> にする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
表データ <A> 内の <B> と <C> に重複があるのか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> のコラム <B> と <C> を逆順にソートを <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
表データ <B> と <C> 表を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> )	sep = <B> , <C> )
そこで、文字コードはシフト JIS	encoding = 'shift_jis'	end = 'shift_jis'
表 <A> の重複している行を削除	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
同じグラフ内で表 <A> の <B> 表属性と <C> 表属性と表属性 <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> の値を軸に昇順で並び替え、再代入する	<A> = <A> . sort_values ( <B> )	bins = <A> . sort_values ( <B> )
表属性 <A> と <B> 表属性に重複があるかチェックを調べる	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
境界値を <D> として、 <B> の表属性 <C> をビン分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> )	] = <A> . cut ( <B> [ <C> ] , <D> )
データフレーム <B> のカラム名を <C> から <D> に、 <E> から <F> に変更し、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	markeredgewidth = <B> : <C> , <D> , <E> : <F> } )
表 <A> 列 <B> と <A> データフレーム <C> と <A> データフレーム列 <D> のボックスチャートを一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と表 <B> を横にくっつける	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
同じグラフ内で <A> <B> と <A> <C> と <A> 列 <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> と <B> 表を縦に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <A> の位置をリセットし、 <A> とする	<A> = <A> . reset_index ( )	= <A> . reset_index ( )
<A> から箱ひげ図を作図する	plt . boxplot ( <A> )	plt . boxplot ( <A> )
データフレーム <A> の列 <B> の欠損を <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<B> をダミー変数化して、 <A> とする	<A> = pd . get_dummies ( <A> [ <B> ] )	<A> = pd . get_dummies ( <A> [ <B> ] )
<B> にインデックスなしで <A> 表データを保存する	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
表 <B> のカラム <E> について、 <C> を位置、 <D> カラムをカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
表データ <B> の中の未入力の値を <B> の平均値で埋めて、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
<A> という名前のエクセルファイルの <B> をデータフレームとして読む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<A> を <B> を元にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表データ <A> の相関係数	<A> . corr ( )	<A> . corr ( )
<A> の <B> を昇順で並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表 <A> の <B> をグループ化して、値ごとのデータ件数を算出する	<A> . groupby ( <B> ) . size ( )	df1 . groupby ( <B> ) . size ( )
<A> の元のインデックスをリセットし、置き換える	<A> = <A> . reset_index ( drop = True )	<A> = <A> . reset_index ( drop = True )
表 <A> 内の列それぞれにある <B> の個数の合計を見る	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> 内の <B> に重複はあるかどうかチェックを表示する	<A> . duplicated ( subset = <B> )	df . subset ( subset = <B> )
全結合で表 <B> と <C> 表を一つにまとめて、 <A> に代入する	<A> = pd . merge ( <B> , <C> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
表データ <A> を位置に沿ってソートする	<A> . sort_index ( )	<A> . sort_index ( )
そこで、ビンは <A> を用いる	bins = <A>	start = <A>
表データ <B> の未入力の値を落とし、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
そこで、グラフ線を破線で描く	linestyle = 'dashed'	stacked = 'dashed'
表 <A> 内の重複する行を落とし、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> 全体を <B> を元に並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表データ <A> 全体を <B> の値を軸にソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表データ <A> の <B> 表属性を並び替え、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
そこで、菱形をマーカーの種類にする	marker = 'D'	marker = 'D'
データフレーム ( <A> ) の <C> をグラフの <B> 軸、 <E> をグラフの <D> 軸として、散布図を作成する	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )
リスト <A> を <B> を列名としてデータフレームにする	pd . pd . DataFrame ( <A> , columns = <B> )	<A> pd . pd . DataFrame ( <B> , columns = [ 'label' ] )
表データ <A> の <B> 列を消して、インプレースする	<A> . drop ( <B> , axis = 1 , inplace = True )	sns . dropna ( <A> , inplace = True )
<D> カラムを項目名として、 <B> と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
<A> 内の列に存在する <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> という名前のエクセルファイルからデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
重複する行を落として、インプレースする	df . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
表データ <A> 内の <B> と <C> コラムに重複はあるのか調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> というエクセルのシート名 <B> からデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = <A> . read_excel ( <B> )
表データ <A> 内の未入力の値が存在する行を削除を <A> にする	<A> = <A> . dropna ( )	= <A> . dropna ( )
<A> の <D> について、表属性 <B> をインデックス、 <C> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<B> <A> . pivot_table ( index = <C> , columns = <D> , values = <E> )
<A> の表属性 <B> をグループ化して、値ごとのデータ数	<A> . groupby ( <B> ) . size ( )	<B> . groupby ( <A> [ <B> ] ) . size ( )
そこで、マーカーの種類は×とする	marker = 'x'	marker = 'x'
データフレーム ( <A> ) をグループ毎に繰り返し	for i , df in enumerate ( <A> . groupby ( 'label' ) ) :	for i , df in enumerate ( <A> . groupby ( 'label' ) ) :
エクセルファイル <A> のシート全てをデータフレームとして読む	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> , sheet_name = None )
データフレーム <A> の欠損を <A> 表データの平均値で埋めて、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> . fillna ( <A> . mean ( ) , inplace = True )
データフレーム <A> の NaN を表 <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	sklearn <A> . fillna ( <A> . mean ( ) )
重複した最後の行を残して <A> ( データフレーム ) 内の重複した行を削除する	<A> . drop_duplicates ( keep = False )	df1 <A> . drop_duplicates ( keep = False )
データフレーム <A> の <B> が <C> か <D> のデータを抽出する	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	[ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
表 <A> の <B> のユニークな要素の個数を調べる	<A> [ <B> ] . nunique ( )	<A> [ <B> ] . nunique ( )
表データ <A> の <B> 列の NaN を <C> で穴埋めする	<A> [ <B> ] . fillna ( <C> )	plt <A> [ <B> ] . fillna ( <C> )
データフレーム <A> の <B> の欠損を <C> で穴埋めする	<A> [ <B> ] . fillna ( <C> )	[ <A> <B> ] . fillna ( <C> )
同じ軸で <A> 表データの <B> と <A> の <C> と表データ <A> の <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> と表 <A> の <C> と <A> 表の <D> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> というエクセルファイルの全部のシートから読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> の欠損の個数を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
同じ軸でデータフレーム <A> の <B> と <C> カラムと <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
グラフの y 軸の軸ラベルを <A> と指定する	plt . ylabel ( <A> )	plt . ylabel ( <A> )
表 <A> 中の未入力の値を <B> で埋める	<A> . fillna ( <B> )	plt . fillna ( <A> [ <B> ] )
データフレーム <A> の中の NaN を <B> に置き換えて、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
分割数を <C> 、ビンのラベルをインデックスとして、 <A> 表データの列 <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> の <C> の日にちを  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . day	dt <A> [ <B> ] = <A> [ <C> ] . day
データフレーム <B> 全体をインデックスを軸にソートし、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
グラフを <A> という名前で保存する	plt . savefig ( <A> )	plt . savefig ( <A> )
そこで、四角形のマーカーの種類を使用する	marker = 's'	marker = 's'
表データを <A> から読み込む	pd . read_csv ( <A> )	marker = pd . read_csv ( <A> )
<A> の <B> 行目から末尾まで	<A> [ <B> : ]	: <B> ]
表 <B> と <C> 表データを横に一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
データフレーム <A> の <B> と <C> を降順に並び替え、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、隠れ層は <A> 層を用いる	hidden_layer_sizes = ( <A> , )	hidden_layer_sizes = ( <A> , )
そこで、菱形を目印とする	marker = 'D'	marker = 'D'
<A> の <B> カラム	<A> [ <B> ]	<A> [ <B> ]
データフレーム <A> の <B> カラムと <C> と <D> カラムについて関係性を一気に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> の列 <B> 中の前後の行の差分を算出する	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<A> の行名を <B> から <C> に変更する	<A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
同じ x 軸と y 軸で表データ <A> <B> カラムと表データ <A> <C> と <A> 表データ <D> を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ <B> , <C> , <D> ] ] )
データフレーム <A> 全体を <B> を元にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表データ <A> を one - hot 表現に変換して、 <A> とする	<A> = pd . get_dummies ( <A> )	<A> = pd . get_dummies ( <A> )
同じ x 軸と y 軸で表データ <A> <B> 表属性と表データ <A> <C> と <A> 表データ <D> 表属性を箱髭図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内に重複があるのかチェックする	<A> . duplicated ( )	df . duplicated ( subset = <A> )
<A> の位置を軸にソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
データフレーム <B> のインデックス名を <C> から <D> に変更し、 <A> とする	<A> = <B> . rename ( index = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
<B> 全体を <C> の値に沿ってソートして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
表データ <A> をインデックスを元に昇順で並び替えて、再代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
データフレーム <B> 中の欠損を <B> の平均値で補って、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
表データ <A> の <B> と表 <A> の <C> 列と表 <A> の <D> についてのボックスチャートを描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <C> を位置として、 <B> ファイルを読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<B> というエクセルの <C> から読み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> 内の重複している行を落として、再代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> から箱髭図をプロットする	plt . boxplot ( <A> )	pd . plt ( <A> )
表データ <A> 内に存在する <B> を未記入の値とし、置き換える	<A> . replace ( <B> , np . nan , inplace = True )	<A> . replace ( <B> , np . nan , inplace = True )
表 <A> 内で重複している行数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> 全体をインデックスに沿ってソートして、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
表 <A> 全体をインデックスを軸に並び替えて、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> の <B> の未入力の値を <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<B> の中の <C> に重複がある行をドロップして、 <A> に代入する	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
左側のデータのインデックスと右側のデータのコラム <D> をキーとして、表 <B> と <C> 表を一つにまとめ、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> 内の重複する値がある行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<C> を項目名として、 <A> と表データ <B> をマージする	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表 <A> 内のそれぞれのカラムに存在する <B> の個数の合計値を算出する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> の列 <B> を昇順に並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
データフレーム <B> 中の重複する行をドロップを <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> の <B> と <C> コラムごとにコラム <D> の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
そこで、目印の輪郭色として青色を使用する	markeredgecolor = 'blue'	activation = 'blue'
表 <A> のコラム <B> と <C> ごとにコラム <D> の値の合計値を計算する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	linestyle = <A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
左側のデータの位置と右側のデータの <B> を項目名として 2 つのデータをマージして、 <A> とする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	= pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
データフレーム <A> 内のそれぞれのカラムにある <B> の個数の合計値を求める	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
左側のデータのインデックスと右側のデータの <D> 表属性をキーとして、 <B> と <C> 表データを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> を <B> で並べ直して、 <A> とする	<A> = <A> . sort_values ( by = <B> )	= <A> . sort_values ( by = <B> )
表データ <A> の <B> と表属性 <C> を値が大きい順にソートして、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
<B> というエクセルデータの <C> を表データに格納して、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
そこで、×をマーカーにする	marker = 'x'	marker = 'x'
同じ軸のセットで <A> カラム <B> とデータフレーム <A> <C> とデータフレーム <A> <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の欠損値を <A> データフレームの平均値で埋め、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
<A> の度数分布図をビンを <B> として描写する	plt . hist ( <A> , bins = <B> )	plt . hist ( df [ <A> , <B> ] )
表データ <A> の列の名前を <B> から <C> にリネームし、 <A> に代入する	<A> = <A> . rename ( columns = { <B> : <C> } )	= <A> . rename ( columns = { <B> : <C> } )
データフレーム <A> の <D> について、 <B> カラムをインデックス、 <C> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<B> <A> . pivot_table ( index = <C> , columns = <D> , values = <E> )
表 <A> 内の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表データ <B> を <C> の値を元に昇順で並び替え、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表データ <A> <B> とデータフレーム <A> <C> と <A> データフレーム列 <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> カラムと <C> と <D> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	alpha = <A> [ <B> , <C> , <D> ] ] )
表 <A> 内の NaN を表データ <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
<B> を <C> をカラム名として表にし、 <A> にする	<A> = pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
列番号 <C> をインデックスとして、パス <B> から読んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> の <B> コラムの未記入の値をコラム <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
分割数を <C> として、 <A> データフレームの <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
<A> の <D> コラムについて、 <B> を位置、 <C> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<B> <A> . pivot_table ( index = <C> , columns = <D> , values = <E> )
表 <A> の <B> と <C> ごとに <D> の値の和を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
グラフ幅を <C> として、 <A> 軸を <A> とした <B> の棒グラフをプロットする	plt . bar ( <A> , <B> , width = <C> )	plt . barh ( <A> , <B> , width = <C> )
列番号 <C> をインデックスに指定して、 <B> からデータフレームとを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> の <B> 行目	<A> . iloc [ <B> ]	<A> . iloc [ <B> ] [ <C> ]
データフレーム <A> 中の列 <B> と <C> 列に重複を判定する	<A> . duplicated ( subset = [ <B> , <C> ] )	if <A> . duplicated ( subset = [ <B> , <C> ] ) :
表 <A> を <B> の値を元に昇順で並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
文字コードを shift_jis として、 <A> を読む	pd . read_csv ( <A> , encoding = 'shift_jis' )	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )
表 <A> に存在する <B> を欠損として、再代入する	<A> = <A> . replace ( <B> , np . nan )	<A> = <A> . replace ( <B> , np . nan )
表 <A> のコラム <B> と <C> を値が大きい順に並び替えて、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	. sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
<A> の <B> を軸にソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表データ <A> 内のカラムそれぞれにある <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<C> 番目の列を位置にして、 <B> を表データに格納して、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表 <A> の <B> と <C> 列を大から小へとソートし、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表 <B> の中の未記入の値を含む行を落として、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
とりあえず表データ <A> の内容をチェックする	<A> . head ( )	pd . head ( <A> )
そこで、マーカーの形の透過度を <A> と設定する	alpha = <A>	markeredgecolor = <A> )
表 <A> のカラム <B> と <C> を逆順に並び替え、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
データフレーム <A> の <B> と <C> と <D> コラムの箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> 内の未入力の値が存在する行をドロップする	<A> . dropna ( )	<A> . dropna ( )
<B> 全体をインデックスを軸に並び替え、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレーム <B> から重複している値がある行を取り除いて、 <A> に代入する	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <A> の <B> についての箱ひげ図を描画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
<A> という名前のエクセルファイルのシート全てからデータフレームを読む	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> , sheet_name = None )
そこで、エラー処理をしない	errors = 'ignore'	encoding = 'shift_jis'
表データ <A> の欠損値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> 全体をインデックスに基づいてソートし、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
そこで、最適化手法として SDG を使用する	solver = 'sgd'	stacked = 'sgd'
<A> の内容を確認	<A> . head ( )	<A> . head ( )
そこで、目印として五角形を使用する	marker = '*'	marker = '*'
表データ <A> の重複している行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> 全体を <B> の値で並び替えて、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
多層パーセプトロンモデルを準備して、 <A> に代入する	<A> = sklearn . neural_network . MLPClassifier ( )	<A> = sklearn . neural_network . MLPClassifier ( )
そこで、マーカーの種類の輪郭色はグレーを使う	markeredgecolor = 'gray'	markeredgewidth = 'gray'
表データ <A> の列名を <B> から <C> に、 <D> から <E> に変更し、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	markeredgewidth = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<B> と表 <C> を横に一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
同じグラフ内で <A> <B> コラムと表データ <A> コラム <C> と表データ <A> <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> と <C> データフレームを横に一つにまとめて、 <A> に代入する	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
データフレーム <B> と <C> を縦方向にくっつけ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
表データ <A> の <B> ごとに表属性 <C> の平均を計算する	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	groupby <A> [ <B> ] . mean ( ) [ <C> ] . mean ( )
そこで、色は紫にする	color = 'purple'	color = 'purple'
データフレーム <A> の <B> の曜日の数値型を確認する	<A> [ <B> ] . dt . dayofweek	dayofweek [ <A> [ <B> ] . dt . dayofweek
データフレーム <B> 中の欠損がある行を削除を <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
同じグラフ内でデータフレーム <A> のコラム <B> と <A> のコラム <C> と <A> データフレームの <D> をボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> をエクセルファイル <B> というファイル名で書き出す	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
先頭の列を位置にして、ファイル <B> をデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	pd . read_csv ( <A> , index_col = <B> )
そこで、マーカーは四角形にする	marker = 's'	marker = 's'
そこで、エンコーディングとして <A> を使用する	encoding = <A>	start = <A>
<B> 表属性を並び替え、 <A> に代入する	<A> = df . sort_values ( <B> )	= <A> . sort_values ( <B> )
同じグラフ内でデータフレーム <A> の <B> と <C> カラムと <D> カラムを箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
エクセルファイル <B> のシート全てをデータフレームとして読んで、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表データ <B> 内の欠損値を直前の行の値で補い、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	markeredgewidth = <B> . fillna ( method = 'ffill' )
そこで、ビンは <A> をする	bins = <A>	bins = <A>
表データ <A> 内の <B> に重複はあるか見る	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
左側のデータのインデックスと右側のデータのコラム <D> をキーとして、 <B> と <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
表 <A> 中の欠損の個数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> 中の重複した行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表 <A> の列の名前を <B> から <C> にリネームする	<A> . rename ( columns = { <B> : <C> } )	range = <A> . rename ( columns = { <B> : <C> } )
表データ <A> を位置を元に昇順でソートして、 <A> にする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <A> 内の欠損値を <A> の平均値で埋め、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
そこで、マーカーの種類の輪郭色として黄色を用いる	markeredgecolor = 'yellow'	markersize = 'yellow'
データフレーム <A> の行数や列数	<A> . shape	df1 . shape
データフレーム <A> のインデックスを振り直し、再代入する	<A> = <A> . reset_index ( )	= <A> . reset_index ( )
インデックスと <C> カラムを項目名として <A> データフレームと <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> 内の NaN を <B> とし、インプレースする	<A> . fillna ( <B> , inplace = True )	for <A> . fillna ( <B> , inplace = True )
分割数を <C> 、ビンの名前をリスト <D> として、 <A> の列 <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
表 <A> のそれぞれの列にある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> ( データフレーム ) の <B> と <C> を値が大きい順にし、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
そこで、マーカーを円とする	marker = 'o'	marker = 'o'
データフレーム <A> の未入力の値を <B> に置換し、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
表データ <A> 中の <B> を未入力の値に置換し、未入力の値が存在する行を落として、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<B> <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表データ <A> の中の <B> を欠損値に置換し、欠損値がある行を消して、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> を <B> を軸にソート	<A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<B> というエクセルファイルの <C> 番目のシートから読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
同じ軸のセットで <A> <B> と <A> <C> と表 <A> コラム <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> と <B> データフレームを縦に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
エクセルファイル <A> の <B> のシートから読み込む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name . read_excel ( <B> , sheet_name = None )
<A> のバリュー	<A> . values	<A> . values
コラム <A> と <B> に重複は存在するのか確認する	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表データ <A> の <B> と <C> と <D> 列の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の数値データ以外の要約統計量	<A> . describe ( include = 'O' )	pd . describe ( include = 'O' )
表 <A> 内の表属性 <B> に重複がある行を削除する	<A> . drop_duplicates ( subset = <B> )	<A> . drop_duplicates ( subset = <B> )
<B> 内にある <C> を NaN として、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	nan = <B> . replace ( <C> , np . nan )
そこで、円形のマーカーの種類を表示する	marker = 'o'	marker = 'o'
<A> の欠損値を平均値で穴埋めして置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
<A> の <C> の秒を調べ、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . second	<A> [ <B> ] = <A> [ <C> ] . dt . second
<A> のカラムそれぞれにある <B> の個数の合計値を調べる	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表データ <A> 中に重複は存在するのか調べる	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表 <A> を <B> の値を元にソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
<A> の元の位置を振り直し、置き換える	<A> . reset_index ( drop = True , inplace = True )	reset_index = <A> . reset_index ( drop = True )
<A> 内のコラム <B> と <C> に重複が存在するのかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
先頭の列をインデックスに設定して、 <A> から読む	pd . read_csv ( <A> , index_col = 0 )	markeredgecolor = pd . read_csv ( <A> , index_col = 0 )
<A> を縦軸、 <B> を x 軸として、線グラフをプロットする	plt . plot ( <A> , <B> )	plt . plot ( df [ <A> , <B> ] )
同じ x 軸と y 軸でデータフレーム <A> 表属性 <B> と <A> <C> と <A> データフレーム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を表属性 <B> で並べ直す	<A> . sort_values ( by = <B> )	sort_values <A> . sort_values ( by = <B> )
<A> の表属性 <B> についての箱ひげ図を表示する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
<A> という名前のエクセルデータの <B> のシートを表に格納する	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
データフレーム <A> 中のカテゴリ変数を数値データにする	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
<A> の柱状グラフを <B> から <C> の区間で作画する	plt . hist ( <A> , range = ( <B> , <C> ) )	plt . hist ( <A> , range = ( <B> , <C> ) )
<A> をファイル名 <B> という名前で書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表 <A> を <B> コラムの値に基づいてソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
表 <A> をエクセルファイル <B> に変換する	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
表 <A> の <B> を NaN に置換し、 NaN がある行を落とし、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
そこで、目印のエッジ色は赤色をする	markeredgecolor = 'red'	markeredgewidth = 'red'
<A> の <B> と <C> 列を削除	<A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> . drop ( [ <B> , <C> ] , axis = 1 )
表 <A> 中の未入力の値がある行を落とし、インプレースする	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
<A> のコラム <B> ごとに <C> の数を計算する	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
データフレーム <A> のコラム <B> の NaN をコラム <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
表 <A> 全体を位置を元にソート	<A> . sort_index ( )	<A> . sort_index ( )
表 <A> 内の重複している行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表 <A> 全体を <B> カラムでソート	<A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> )
ピボット操作で <A> の行を列に変更する	<A> . unstack ( )	<A> . stack ( )
同じグラフ内で表 <A> <B> と <A> <C> と表 <A> <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーは点を使う	marker = '.'	marker = '.'
そこで、打点として菱形を使う	marker = 'D'	marker = 'D'
そこで、目印の色を水色とする	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
そこで、マーカーの色は青を用いる	markerfacecolor = 'blue'	'blue' = 'blue'
そこで、マーカーはバツ印とする	marker = 'x'	marker = 'x'
同じグラフ内で <A> の <B> と <C> と列 <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の欠損の数を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<C> 番目の列を位置に設定して、 <B> を表に格納して、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> の <B> の名前を <C> に変更する	<A> . rename ( columns = { <B> : <C> } )	for <A> . rename ( columns = { <B> : <C> } )
そこで、グラフの種類は垂直棒グラフである	kind = 'bar'	kind = 'bar'
そこで、目印のエッジ色として青を用いる	markeredgecolor = 'blue'	'blue' = 'blue'
データフレーム <A> 内の <B> コラムと <C> コラムに重複が存在するのかを調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> の <B> と <C> に重複が存在するのか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の <B> を抽出する	<A> [ <B> ]	<B> <A> [ <C> ]
同じグラフ内で表 <A> <B> と <A> 表属性 <C> と <A> 表 <D> 表属性を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
左側のデータのインデックスと右側のデータの <D> を項目名として、表 <B> と表 <C> を一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> の <B> と <A> の列 <C> と <A> の <D> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 列という列を消す	df . drop ( <A> , axis = 1 )	df . drop ( <A> , axis = 1 )
表データ <A> をインデックスを元に昇順で並び替える	<A> . sort_index ( )	ascending = <A> . sort_index ( )
同じグラフ内で <A> の <B> と列 <C> と <D> 列を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> <B> と <A> <C> と表 <A> 表属性 <D> をボックスチャートで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
コラム <A> と <B> を降順に並び替える	df . sort_values ( [ <A> , <B> ] , ascending = False )	sort_values df . sort_values ( [ <A> , <B> ] , ascending = False )
CSV ファイル <B> を読み、 <A> にする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
表 <A> の <B> と <C> カラムと <D> について関係性を一気に作図する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> の <B> コラムの欠損を <B> の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
表データ <A> 中にある <B> を NaN に置換し、 <A> とする	<A> = <A> . replace ( <B> , np . nan )	<B> <A> = <A> . replace ( <B> , np . nan )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行をドロップし、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	for <A> . drop_duplicates ( keep = False , inplace = True )
表データ <A> 中の <B> 列と <C> 列に重複があるとき	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	sns . duplicated ( subset = [ <A> , <B> , <C> ] ) :
ビン数を <C> 、ビンのラベルをリスト <D> として、表 <A> の <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
表 <A> <B> と <A> 表 <C> コラムと <A> <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
単語リスト <A> の出現頻度を表示する	pd . DataFrame ( { 'words' : <A> } ) . value_counts ( )	value_counts . value_counts ( )
表データ <A> で重複している行の数を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <B> のカラム <C> に重複がある行をドロップを <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
データフレーム <B> の中にある <C> を未記入の値に置換して、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	= <A> . replace ( [ <B> , <C> ] , np . nan )
データフレーム <A> の重複要素がある行を取り除く	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
データフレーム <A> の全ての列で重複している行をドロップして、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<A> において、全ての要素が <C> のカラムを作り、名前を <B> とする	<A> [ <B> ] = [ <C> ] * len ( <A> )	<B> <A> [ <C> ] = [ <D> ] * len ( <A> )
表 <A> の <B> のそれぞれのデータの出現頻度	<A> [ <B> ] . value_counts ( )	<A> [ <B> ] . value_counts ( )
そこで、アスタリスクをマーカーの形状にする	marker = '*'	marker = '*'
<A> ( データフレーム ) の <B> 列を昇順に並び替え、置き換える	<A> . sort_values ( <B> , inplace = True )	markeredgewidth = <A> . sort_values ( <B> )
CSV ファイル <A> ( ファイル名 ) から表データを読む	pd . read_csv ( <A> )	markeredgecolor = pd . read_csv ( <A> )
表 <A> 中の未入力の値がある行をドロップして、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
表データ <A> 内の欠損値を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> のカラム <B> と <C> と <D> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
コラム <A> と <B> を大きい順にソートし、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
<B> という列を削除を <A> にする	<A> = <A> . drop ( <B> , axis = 1 )	<A> = <A> . drop ( <B> , axis = 1 )
同じ軸のセットで <A> 表データ <B> と <A> 表データカラム <C> と表データ <A> <D> カラムを箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中の欠損値の数を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、マーカーは○をする	marker = 'o'	marker = 'o'
<A> の <B> と表属性 <C> を降順にソートを <A> に代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
列 <A> と <B> を大きい順にソートして、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
<B> に重複がある行を削除し、 <A> とする	<A> = df . drop_duplicates ( subset = <B> )	= <A> . drop_duplicates ( subset = <B> )
<A> についてダミー変数を生成して、 <A> とする	<A> = pd . get_dummies ( <A> )	<A> = pd . get_dummies ( <A> )
同じ軸のセットで <A> の <B> と <A> の <C> と <A> 表データの <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中の未入力の値を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
表 <B> 全体を <C> でソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> をファイル名 <B> という名前にして CSV ファイルで書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
データフレーム <A> をインデックスで並び替え、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
データフレーム <A> 中の重複を確認を確認する	<A> . duplicated ( )	df [ <A> ] . duplicated ( ) ]
表 <A> で重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> の <B> と <C> を逆順にソートして、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表 <A> 中の <B> に重複がある行を消し、 <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	= <A> . drop_duplicates ( subset = <B> )
<A> の位置 <B> の名前を <C> にリネームし、 <A> とする	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
表 <A> 内の <B> を未記入の値に置換し、未記入の値がある行を削除する	<A> . replace ( <B> , np . nan ) . dropna ( )	dropna = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> と <B> に重複はあるかチェックする	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表データ <A> のカラム <B> と <A> の <C> カラムと <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) の <B> カラムと <C> を大から小へとし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> の <C> 列の月を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . month	range = ( <A> [ <B> , <C> ] , ascending = False )
同じ軸で <A> の <B> とデータフレーム <A> の <C> 表属性と <A> の <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
インデックスと <D> 表属性を項目名として <B> とデータフレーム <C> をマージして、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> 内 ] [ で重複する行の数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> の中に重複はあるのかを表示する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
ビン数を <D> として、表データ <B> の <C> を要素数が等しくなるように分割して、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<A> = pd . qcut ( <B> [ <C> ] , <D> )
そこで、マーカーの形状のエッジ色は紺色とする	markeredgecolor = 'navy'	markeredgecolor = 'navy'
表データ <A> の <B> ごとに <C> コラムの数	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
そこで、マーカーの種類の輪郭色は紫色を用いる	markeredgecolor = 'purple'	'purple' = 'purple'
そこで、グラフの種類として六角ビニング図を使用する	kind = 'hexbin'	kind = 'hexbin'
同じグラフ内で <A> データフレームの <B> と列 <C> と列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> を <B> という名前で CSV ファイルで保存する	<A> . to_csv ( <B> )	plt . savefig ( <A> [ <B> ] )
<A> の列 <B> と <C> と <D> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
列番号 <C> をインデックスとして、 <B> ファイルから読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表データ <A> の列 <C> の曜日の数値型を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek	dt [ <A> [ <B> ] = <A> [ <C> ] . dayofweek
データフレーム <B> をインデックスを元にソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> の NaN がある行を削除を <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
同じ軸で表 <A> <B> と表 <A> 列 <C> と <A> 表 <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内のコラム <B> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
そこで、マーカーの形状の大きさとして <A> を使う	markersize = <A>	markeredgewidth = <A>
<A> の <B> の未記入の値を <B> 表属性の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
データフレーム <B> の <C> コラムと <D> を大から小へとソートして、 <A> に代入する	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> 内の欠損を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表データ <A> 内の <B> と <C> に重複はあるのか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレームとして <B> 区切りで CSV ファイル <A> ( ファイル名 ) を読む	pd . read_csv ( <A> , sep = <B> )	<A> . read_csv ( <B> , sep = ',' )
表 <A> の列 <B> と列 <C> をドロップして、インプレースする	<A> . drop ( [ <B> , <C> ] , axis = 1 , inplace = True )	X . drop ( <A> , [ <B> , <C> ] , axis = 1 , inplace = True )
表 <A> のカラム <B> を箱ひげ図に描画する	plt . boxplot ( <A> [ <B> ] )	boxplot plt . boxplot ( <A> [ <B> ] )
データフレーム <A> の <B> の月を見る	<A> [ <B> ] . dt . month	plt . hist ( <A> [ <B> ] )
<A> 中の未記入の値を <B> に置換する	<A> . fillna ( <B> )	plt . fillna ( <A> . mean ( <B> ) )
データフレーム <A> 内の欠損値がある行をドロップして、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
そこで、目印の透明度を <A> と設定する	alpha = <A>	alpha = <A>
そこで、マーカーの種類としてダイヤモンドを使う	marker = 'D'	marker = 'D'
重複した最後の行を残して <B> ( データフレーム ) 内の重複した行を削除し、 <A> にする	<A> = <B> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
そこで、カラーマップはアクセントを使う	colormap = 'Accent'	color = 'Accent'
<A> 表属性を並び替える	df . sort_values ( <A> )	df . sort_values ( <A> )
データフレーム <A> を <B> の値を軸に並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
<A> 内の欠損値を表 <A> の平均値で補い、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> . fillna ( <A> . mean ( ) , inplace = True )
データフレーム <B> 内の NaN を <B> の平均値で埋めて、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
<A> ファイルパスをカンマ区切りでデータフレームとして読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
左外部結合でデータフレーム <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> , how = 'left' )	<A> = pd . merge ( <B> , how = 'left' )
データフレーム <B> 中の未入力の値を表 <B> の平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
グラフを描画する	plt . show ( )	plt . grid ( True )
データフレーム <A> の列名を <B> から <C> に、 <D> から <E> に変更する	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<A> 中の NaN を削除し、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<A> の <B> の欠損値を列 <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<A> 次元に圧縮する PCA モデルを準備する	sklearn . decomposition . PCA ( ( n_components = <A> )	decomposition . PCA ( n_components = <A> )
そこで、カーネル密度推定図を用いる	kind = 'kde'	kind = 'kde'
<B> ファイル名に BOM 付きで <A> を書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	to_csv <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
<A> 中の欠損値を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
<B> のコラム <C> の値を軸に並び替え、 <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <B> と <C> に対して、コラム <D> をキーとしてデータを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
データフレーム <A> 中のカテゴリ変数を数値データで置き換える	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
表を CSV ファイル <A> ( ファイル名 ) からカンマ区切りで読み込む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
データフレーム <A> を <B> 表属性を軸に並び替える	<A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> )
表 <A> の <B> と <C> 表属性を逆順にソートを <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
そこで、＊のマーカーの種類を表示する	marker = '*'	marker = '*'
位置と <D> を項目名として <B> と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<B> <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> 中の <B> を未入力の値に置換し、未入力の値がある行を削除する	<A> . replace ( <B> , np . nan ) . dropna ( )	dropna = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <B> に存在する <C> を欠損として、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	= <A> . replace ( [ <B> , <C> ] , np . nan )
表データ <A> の <D> について、コラム <B> をインデックス、 <C> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<B> <A> . pivot_table ( index = <C> , columns = <D> , values = <E> )
表データ <A> とデータフレーム <B> に対して、 <C> を項目名としてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> と <B> 表データを縦に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<B> の <C> と <D> 列を削除を <A> にする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
カンマ区切りで表を <B> ファイルから読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
そこで、文字コードはシフト JIS をする	encoding = 'shift_jis'	end = 'shift_jis'
<B> に表データ <A> を保存する	<A> . to_csv ( <B> )	plt . savefig ( <A> [ <B> ] )
同じ軸のセットで <A> の <B> と <C> とコラム <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のコラム <B> を表示する	<A> [ <B> ]	sns <A> [ <B> ]
そこで、ビンの数は <A>	bins = <A>	bins = <A>
カンマ区切りで <A> を表として読み込む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
データフレーム <A> 中の未記入の値を <B> とし、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
そこで、色は赤を使う	color = 'red'	encoding = 'red'
<A> という列を消し、インプレースする	df . drop ( <A> , axis = 1 , inplace = True )	df . drop ( <A> , axis = 1 , inplace = True )
<A> という名前のエクセルデータからデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> )
データフレーム <A> 中のコラム <B> に重複はあるのかどうか調べる	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
データフレーム <A> の <B> 列に重複があるのかどうかチェック	<A> . duplicated ( subset = <B> )	df . duplicated ( subset = [ <A> , <B> ] )
そこで、マーカーの形は五角形とする	marker = '*'	marker = '*'
そこで、ラインスタイルは一点鎖線をする	linestyle = 'dashbot'	bins = 'dashbot'
表 <A> のカテゴリ変数をダミー変数に変換して、 <A> に代入する	<A> = pd . get_dummies ( <A> )	= pd . get_dummies ( <A> )
<B> にインデックスなしで <A> 表を保存する	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
グラフの大きさを横 <A> 縦 <B> にする	plt . figure ( figsize = ( <A> , <B> ) )	plt . figure ( figsize = ( <A> , <B> ) )
表データ <A> の <B> と <C> の相関係数を見る	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
データフレーム <A> の <B> コラムと <C> と <D> コラムについて関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	alpha = <A> [ <B> , <C> , <D> ] ] )
表データ <A> についてダミー変数をつくって、 <A> とする	<A> = pd . get_dummies ( <A> )	<A> = pd . get_dummies ( <A> )
データフレーム <A> 中の重複している値がある行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<A> 中の NaN の数を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> の <B> の出現回数を調べる	<A> [ <B> ] . value_counts ( )	'words' <A> [ <B> ] . value_counts ( )
エクセルファイル <A> を読み込む	pd . read_excel ( <A> )	pd . read_excel ( <A> , sheet_name = None )
<A> の <D> について、 <B> を位置、 <C> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
<A> をインデックスを軸に並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
<A> の行名	<A> . index	<A> . index
データフレーム <A> の <B> 表属性の曜日の数値型を確認する	<A> [ <B> ] . dt . dayofweek	dayofweek [ <A> [ <B> ] . dt . dayofweek
<A> の中の未入力の値の数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
分割数を <C> 、ビンの名前をリスト <D> として、 <A> 表の <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
同じ軸のセットでデータフレーム <A> の <B> と <C> と表属性 <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> のバリュー	<A> [ <B> ] . values	<A> [ <B> ] . values
<A> を <B> という名前で保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
データフレーム <A> の列に存在する <B> の個数を見る	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
そこで、隠れ層として <A> , <B> 層を使う	hidden_layer_sizes = ( <A> , <B> )	hidden_layer_sizes = ( <A> , <B> )
そこで、色はネイビーを用いる	color = 'navy'	color = 'navy'
列番号 <B> をインデックスに指定して、 <A> からデータフレームとを読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
そこで、隠れ層は <A> , <B> 層を用いる	hidden_layer_sizes = ( <A> , <B> )	hidden_layer_sizes = ( <A> , <B> )
重複した最後の行を残して <A> ( データフレーム ) の重複している行を削除して、 <A> に代入する	<A> = <A> . drop_duplicates ( keep = False )	fontsize = <A> . drop_duplicates ( keep = False )
<A> 内の未記入の値の個数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 中の NaN を直前の行の値で埋め、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
コラム <A> を項目名としてデータを内部結合する	pd . merge ( df1 , df2 , on = <A> )	pd . merge ( df1 , df2 , on = <A> )
<A> 列についてダミー変数を生成する	pd . get_dummies ( df [ <A> ] )	pd . get_dummies ( df [ <A> ] )
最適な位置に凡例を付ける	plt . legend ( loc = 'best' )	legend = plt . legend ( loc = 'best' )
グラフのフォントを日本語にセットする。	sns . set ( font = 'IPAexGothic' , style = 'white' )	style = sns . set ( font = 'IPAexGothic' , style = 'white' )
表 <B> の重複要素がある行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<B> というエクセルファイルをデータフレームとして読み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	df = pd . read_excel ( <B> )
表データ <A> の欠損値を <A> の平均値で埋めて、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
そこで、マーカーの輪郭色は赤色をする	markeredgecolor = 'red'	markeredgewidth = 'red'
データフレーム <A> のデータ型を調べる	<A> . dtypes	<A> . dtypes
表 <A> 中の欠損を削除を <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <A> 全体を位置を軸に並び替える	<A> . sort_index ( )	<A> . sort_index ( )
データフレーム <A> の <B> と <A> データフレームの列 <C> と <A> の <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中にある <B> を欠損に置き換え、 <A> に代入する	<A> = <A> . replace ( <B> , np . nan )	<B> <A> = <A> . replace ( <B> , np . nan )
表データ <A> 中の列にある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> 内のカラムそれぞれに存在する <B> の個数の合計値を計算する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
そこで、打点のエッジ色は青を用いる	markeredgecolor = 'blue'	activation = 'blue'
そこで、グラフの種類として積み上げを用いる	stacked = True	alpha = True
そこで、グラフの種類として六角ビニングを用いる	kind = 'hexbin'	kind = 'hexbin'
表 <A> の <B> カラムと <C> ごとに <D> の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表データ <A> 中にある <B> を欠損に置換し、置き換える	<A> = <A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan , inplace = True )
左側のデータのインデックスと右側のデータの <C> を項目名として、データフレーム <A> と <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> 内に重複はあるのか調べる	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表データ <A> の <B> と <C> と <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <C> に <D> を適用して、 <B> にする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	<B> <A> [ <C> ] = <A> [ <D> ] . map ( <D> )
同じ軸で <A> 表データ <B> 表属性と <A> 表データ <C> と <A> 表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> 全体を位置を軸にソートを <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> の未入力の値を消す	<A> . dropna ( )	<A> . dropna ( )
<A> と列 <B> を逆順に並び替える	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
表 <A> の全ての列で重複している行を取り除く	<A> . drop_duplicates ( )	markerfacecolor = <A> . drop_duplicates ( )
<A> の中の欠損値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、グラフの種類は六角ビニングを用いる	kind = 'hexbin'	kind = 'hexbin'
<A> の列の名前を <B> から <C> に、 <D> から <E> に変更する	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	sns . rename ( columns = { <B> : <C> , <D> : <E> } )
先頭の列を位置にして、 <A> から読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> ファイルからカンマ区切りで表データを読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
表データ <A> の <B> の未入力の値を <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<A> の <B> コラムの秒	<A> [ <B> ] . dt . second	<B> <A> [ <B> ] . dt . second
<B> から重複している行を取り除いて、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
データフレームとして <B> を <C> 区切りで読み込んで、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> の <B> 行目をドロップし、 <A> に代入する	<A> = <A> . drop ( <B> )	X = <A> . drop ( <B> )
<A> 中のそれぞれの列に存在する <B> の個数を確認する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> を <B> で並べ直し、 <A> にする	<A> = <A> . sort_values ( by = <B> )	= <A> . sort_values ( by = <B> )
<B> のカラム名を <C> から <D> にリネームし、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> } )	range = <B> , columns = <C> , <D> : <E> } )
CSV ファイル <B> ( ファイル名 ) を <C> 区切りでデータフレームとして読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
データフレーム <A> の <B> カラムを箱髭図にプロットする	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
表データ <A> 全体を <B> の値を元に並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
同じ軸のセットで <A> の <B> と <A> の <C> と <A> の <D> コラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中のコラム <B> と <C> に重複があるかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
とりあえず <A> データフレームの内容を確認	<A> . head ( )	pd . head ( <A> )
データフレーム <A> 全体を <B> を元に並び替える	<A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> )
表データ <A> の <B> の時間	<A> [ <B> ] . dt . hour	[ <A> [ <B> ] . dt . hour
<B> という名前のエクセルのシート名 <C> をデータフレームとして読み、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
<A> の <B> を位置に設定する	<A> . set_index ( <B> )	<A> . set_index ( <B> )
データフレーム <A> の <B> カラムの曜日の数値型	<A> [ <B> ] . dt . dayofweek	[ <A> [ <B> ] . dt . dayofweek
ビン数を <D> として、表データ <B> の <C> をビンに含まれる個数が等しくなるようにビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
リスト <B> を <A> 、リスト <D> を <C> コラムとして、新しいデータフレームを作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	range = pd . DataFrame ( { <A> : <B> , <C> : <D> } )
データフレーム <A> のコラム <B> が <C> のデータ	<A> [ <A> [ <B> ] == <C> ]	[ <A> [ <B> ] == <C> ]
表データ <A> の <B> と <A> のカラム <C> と表データ <A> の <D> カラムの箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> をインデックスで並び替えて、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> 中の <B> と <C> に重複があるならば	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle = <A> . duplicated ( subset = [ <B> , <C> ] ) :
<B> 列という列を消して、 <A> とする	<A> = df . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
データフレーム <A> の中に重複があるかどうか表示してみる	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表データ <B> と <C> 表を横方向に結合し、 <A> とする	<A> = pd . merge ( <B> , <C> )	= pd . merge ( <A> , <B> , on = <C> )
同じグラフ内でデータフレーム <A> <B> とデータフレーム <A> <C> と <A> 列 <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の欠損の数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> の <B> を並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
そこで、紺色をマーカーの形状の色にする	markerfacecolor = 'navy'	markerfacecolor = 'navy'
<A> のそれぞれの列に存在する <B> の個数の合計を表示する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
同じグラフ内で表データ <A> カラム <B> と <A> <C> と <A> <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の <C> と <D> を削除を <A> とする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
そこで、ラインスタイルは破線	linestyle = 'dashed'	stacked = 'dashed'
表データ <A> 中の未入力の値を表 <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	df1 <A> . fillna ( <A> . mean ( ) )
<A> 中の重複している行をドロップを <A> にする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
重複している最後の行を残して <A> ( データフレーム ) 中の重複している行を消す	<A> . drop_duplicates ( keep = False )	df1 . drop_duplicates ( keep = False )
左側のデータのインデックスと右側のデータの <C> をキーとして、 <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> という名前のエクセルデータの全てのシートを読む	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> , sheet_name = None )
表データとしてカンマ区切りで <A> を読む	pd . read_csv ( <A> , sep = ',' )	',' = pd . read_csv ( <A> , sep = ',' )
表データ <B> 内の <C> を未記入の値に置換し、未記入の値がある行を消し、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
表 <A> の <B> 表属性と <A> データフレームの <C> と <A> の <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> と表属性 <C> と <D> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <B> を <C> に沿ってソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
データフレーム <A> の列に存在する <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> と表 <B> に対して、 <C> をキーとしてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<B> 番目の列を位置に指定して、 <A> を表に格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
そこで、色はグレーを用いる	color = 'gray'	markerfacecolor = 'gray'
表 <A> の <B> と <A> 表の <C> と <A> 表の <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ファイル名からデータフレームをカンマ区切りで読む	pd . read_csv ( <A> , sep = ',' )	read_csv pd . read_csv ( <A> , sep = ',' )
<A> の <B> の値を軸に昇順で並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
表データ <A> の未入力の値を <B> として、 <A> とする	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
<A> の <B> が <C> 以上のデータを得る	<A> [ <A> [ <B> ] >= <C> ]	[ <A> [ <B> ] >= <C> ]
表 <A> の <B> と列 <C> を大から小へとソートを <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
ビン数を <D> として、表データ <B> の <C> 表属性を要素数が等しくなるようにビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<A> = pd . qcut ( <B> [ <C> ] , <D> )
データフレーム <B> の欠損を <B> 表データの平均値で埋め、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
<A> をダミー変数化する	pd . get_dummies ( df [ <A> ] )	pd . get_dummies ( df [ <A> ] )
表 <A> 中の重複を見る	<A> . duplicated ( )	df [ <A> ] . duplicated ( ) ]
表データ <A> <B> カラムと表データ <A> <C> カラムと <A> <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、ラインスタイルは一点鎖線を使う	linestyle = 'dashbot'	bins = 'dashbot'
データフレーム <B> の <C> を欠損値に置換し、欠損値がある行を落として、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )
データフレーム <A> 中の欠損を <A> の平均値で補って、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> . fillna ( <A> . mean ( ) , inplace = True )
<A> の内容をチェック	<A> . head ( )	<A> . head ( )
表 <A> 内の欠損をドロップして、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表データ <A> 中の未入力の値を表 <A> の平均値で補って、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
表 <A> 内の欠損が存在する行をドロップ	<A> . dropna ( )	<A> . dropna ( )
表データ <A> 内のカラムにある <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> をインデックスを軸にソートし、再代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
左外部結合で <B> データフレームと <C> データフレームをマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	<A> = pd . merge ( <B> , <C> , how = 'left' )
データフレーム <A> <B> カラムと <A> カラム <C> と <A> 表 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内のカラムにある <B> の個数の合計を求める	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> の中の重複している行を削除	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<A> <B> と <A> 表データ <C> と <A> 列 <D> の箱髭図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> 中の <B> を欠損値に置換し、欠損値が存在する行を削除し、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> についてダミー変数を生成する	pd . get_dummies ( <A> )	pd . get_dummies ( df [ <A> ] )
表 <A> の <B> 列と <C> に重複はあるかどうか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
カンマ区切りでデータフレームを <B> から読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表 <A> 中の NaN を <B> に置き換え、インプレースする	<A> . fillna ( <B> , inplace = True )	df . fillna ( <A> [ <B> ] , inplace = True )
同じグラフ内で表データ <A> <B> と <A> <C> と <A> <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のコラム <B> と <A> の <C> コラムと表 <A> の <D> の箱髭図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
分割数を <C> として、 <A> 表データの <B> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	qcut pd . qcut ( <A> [ <B> ] , <C> )
<A> 内の未記入の値を <B> に置換し、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表データ <B> の表属性 <C> と <D> をドロップを <A> にする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
表 <A> 内の欠損値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> ( データフレーム ) の <B> と <C> を大きい順にソートを <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
<A> 中の未記入の値の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> 全体を位置でソートして、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
表 <B> の重複している行を落として、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
同じ軸で <A> の <B> と <A> の <C> と <A> の <D> をボックスチャートで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の統計情報	<A> . describe ( )	<A> . describe ( )
<A> と <B> に重複があるかどうかチェックを表示する	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表 <A> の中の NaN を落とし、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
データフレーム <A> の <C> の曜日を見て、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name
表 <A> の列 <B> 中の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<B> という名前のエクセルのシート全てをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表データ <B> の欠損値を <B> の平均値で埋めて、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
表 <A> の <B> コラムと <C> の相関	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
表 <A> の先頭 5 行	<A> . head ( )	pd . head ( <A> )
表 <A> のカラム <B> の曜日	<A> [ <B> ] . dt . weekday_name	<B> <A> [ <B> ] . dt . weekday_name
表 <A> 全体を <B> 表属性で並び替える	<A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> )
データフレーム <A> <B> 列と <A> <C> と <A> <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の未入力の値を平均値で穴埋めして置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
表データ <A> 全体を列 <B> の値を元に昇順でソートを <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表データ <A> の重複している行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
そこで、マーカーの輪郭色は赤色である	markeredgecolor = 'red'	markeredgewidth = 'red'
データフレーム <A> に重複がある場合	if <A> . duplicated ( ) :	sns . duplicated ( subset = <A> ) :
そこで、円グラフを使う	kind = 'pie'	kind = 'pie'
<A> 全体を <B> の値を元にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレームをカンマ区切りで CSV ファイル <A> ( ファイル名 ) から読み込む	pd . read_csv ( <A> , sep = ',' )	read_csv sep = ',' )
データフレーム <B> 全体を <C> の値で並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
データフレーム <A> の <B> についての箱ひげ図を描く	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
表データ <B> 内の <C> に重複がある行を消して、 <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
<A> ( データフレーム ) の <B> と <C> カラムを大から小へとソートを <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
一番左の列を位置にして、 <A> をデータフレームとして読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
同じグラフ内でデータフレーム <A> の <B> と <A> の <C> と <A> の <D> カラムをボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
一番左の列を位置に設定して、 <B> ファイルを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	] = <A> . read_csv ( <B> , index_col = 0 )
そこで、種類としてカーネル密度推定を用いる	kind = 'kde'	kind = 'kde'
表データ <A> のオブジェクトデータの要約統計量	<A> . describe ( include = 'O' )	'O' <A> . describe ( include = 'O' )
そこで、マーカーの色は紫	markerfacecolor = 'purple'	markerfacecolor = 'purple'
データフレーム <A> において、 <B> と <C> と <D> の関係性を一気に作画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	linestyle = [ <A> [ <B> , <C> , <D> ] ] )
そこで、マーカーの輪郭色はグレーを用いる	markeredgecolor = 'gray'	markersize = 'gray'
同じグラフ内でデータフレーム <A> <B> コラムと <A> <C> とデータフレーム <A> <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の全ての列の重複する行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> ( データフレーム ) の列 <B> と <C> を値が大きい順にソートして、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	. sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
同じグラフ内で表 <A> <B> 列と表 <A> <C> 列と表 <A> <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの種類の色は紫色をする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
<A> の <B> と <A> の <C> とデータフレーム <A> の <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> 行目を抽出する	<A> . iloc [ <B> ]	<A> . iloc [ <B> ] [ <C> ]
リスト <A> から新しいデータフレームを作る	pd . pd . DataFrame ( <A> , columns = [ 'label' ] )	pd . pd . DataFrame ( <A> , columns = [ 'label' ] )
インプレースによって <A> ( データフレーム ) の未記入の値を平均値で補完する	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
表 <A> 中の NaN を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	sklearn <A> . fillna ( <A> . mean ( ) )
一番左の列を位置に指定して、ファイルパス <A> を読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
エクセルファイル <A> のシート全てをデータフレームとして読み込む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> と <B> を箱ひげ図に描く	plt . boxplot ( [ <A> , <B> ] )	kind = plt . boxplot ( [ <A> , <B> ] )
表データ <A> を表属性 <B> の値に基づいてソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
表データ <A> の中の <B> に重複があるか	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
横軸のラベルを <A> に指定する	plt . xlabel ( <A> )	plt . xlabel ( <A> )
そこで、マーカーの種類として四角形を使用する	marker = 's'	marker = 's'
<A> の <B> カラムと <C> と <D> について関係性を一気に描く	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> という名前のエクセル <A> をデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	sheet_name = <A> . read_excel ( None )
そこで、マーカーの大きさを <A> とする	markersize = <A>	markersize = <A>
軸を <A> として、 <B> の横向きの棒グラフを描画する	plt . barh ( <A> , <B> , align = 'center' )	barh . barh ( <A> , <B> , align = 'center' )
<B> という名前のエクセルの <C> を読んで、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
カラム <A> とカラム <B> を降順にソートし、置き換える	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
<A> 中の <B> に重複はあるか	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<B> というエクセルファイルの全部のシートをデータフレームとして読み、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> 全体を <B> を元に昇順で並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	linestyle = <A> . sort_values ( <B> )
表 <B> の中にある <C> を未記入の値に置換して、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	= <A> . replace ( [ <B> , <C> ] , np . nan )
同じグラフ内で <A> の <B> と <C> と <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> から <C> の範囲で <A> の度数分布図を描く	plt . hist ( <A> , range = ( <B> , <C> ) )	hist = range ( <A> , range = ( <B> , <C> ) )
表 <A> の <B> カラムのデータ列	<A> [ <B> ]	<A> [ <B> ]
表 <B> 全体をインデックスでソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> の <B> と表データ <A> の <C> と <A> の <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 全体を位置を元に並び替える	<A> . sort_index ( )	<A> . sort_index ( )
分割数を <D> 、ビンの名前を 0 始まりの連番として、 <B> の <C> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	linestyle = pd . cut ( <B> [ <C> ] , <D> , label = False )
<A> の <B> についての標準偏差	<A> [ <B> ] . std ( )	<B> <A> [ <B> ] . std ( )
<A> の <B> のデータを抽出する	<A> [ <B> ]	X [ <B> ]
重複した最後の行を残して <A> ( データフレーム ) の重複している行をドロップして、 <A> にする	<A> = <A> . drop_duplicates ( keep = False )	fontsize = <A> . drop_duplicates ( keep = False )
表 <B> を列 <C> の値でソートを <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
そこで、グラフ種類は密度推定図をする	kind = 'density'	kind = 'density'
カンマ区切りでデータフレームとして CSV ファイル <B> ( ファイル名 ) を読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
列 <A> に重複があるのかどうか確認	df . duplicated ( subset = <A> )	sklearn . duplicated ( subset = <A> )
表示するグラフのサイズを <A> x6 と指定する	plt . figure ( figsize = ( <A> , 6 ) )	plt . figure ( figsize = ( <A> , 6 ) )
データフレーム <A> <B> と <A> データフレーム <C> と <A> <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の <B> と <C> カラムに重複はあるか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> の中にある <B> を未記入の値に置換し、 <A> とする	<A> = <A> . replace ( <B> , np . nan )	<B> <A> = <A> . replace ( <B> , np . nan )
カラム <B> とカラム <C> を降順にソートし、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と <B> 表データを結合する	pd . merge ( <A> , <B> , how = 'outer' )	<A> = pd . merge ( <B> , how = 'outer' )
そこで、エンコーディングは、 <A> を用いる	encoding = <A>	end = <A>
表 <B> の欠損を <C> に置換し、 <A> にする	<A> = <B> . fillna ( <C> )	markeredgewidth = <B> . fillna ( <C> )
<A> の <B> 行目を落とし、 <A> にする	<A> = <A> . drop ( <B> )	X = <A> . drop ( <B> )
データフレーム <A> の <B> と <A> 表データの <C> 列と <A> の <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> <B> コラムと表データ <A> <C> と表データ <A> <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、打点の色は黄色である	markerfacecolor = 'yellow'	marker = 'yellow'
表 <B> 内の NaN を削除を <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
最大反復は <A> にする	max_iter = <A>	alpha = <A>
<A> の全ての列で重複している値がある行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	markerfacecolor = <A> . drop_duplicates ( )
<A> の中の <B> 表属性に重複があるならば	if <A> . duplicated ( subset = <B> ) :	sns . duplicated ( subset = [ <A> , <B> ] ) :
表 <A> の <B> を抽出する	<A> [ <B> ]	X [ <B> ]
データフレーム <B> 中の未記入の値が存在する行をドロップを <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
そこで、線のスタイルを点と線とする	linestyle = 'dashbot'	markeredgewidth = 'dashbot'
<A> <B> と表 <A> <C> コラムと <A> コラム <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中の <B> を欠損に置換し、欠損が存在する行を削除し、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> というラベルを縦軸に付ける	plt . ylabel ( <A> )	plt . ylabel ( <A> )
表データ <A> をインデックスを元に昇順でソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> の <B> と列 <C> を逆順に並び替え、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <B> の <C> コラムを昇順に並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> にある <B> を欠損に置き換えて、置き換える	<A> = <A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan , inplace = True )
<A> と <B> の線グラフを <C> とラベル付けして描写する	plt . plot ( <A> , <B> , label = <C> )	sns . plot ( <A> , <B> , label = <C> )
データフレーム <A> の <B> ごとにカラム <C> の個数	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
表データ <A> の <B> のユニークな要素数を調べる	<A> [ <B> ] . nunique ( )	<B> <A> [ <B> ] . nunique ( )
表 <B> と <C> 表を縦向きに連結を <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
そこで、マーカーとして正方形を使う	marker = 's'	marker = 's'
カラム <A> と <B> を大から小へとソートし、再代入する	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	color = df . sort_values ( [ <A> , <B> ] , ascending = False )
エクセルファイル <A> を表に格納する	pd . read_excel ( <A> )	pd . read_excel ( <A> , sheet_name = None )
同じグラフ内でデータフレーム <A> の <B> とカラム <C> と <D> を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> と <C> 表データを結合して、 <A> にする	<A> = pd . merge ( <B> , <C> )	<B> <A> = pd . merge ( <C> )
分割数を <D> 、ビンの名前をリスト <E> として、表データ <B> の <C> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	fontsize = <A> . cut ( <B> [ <C> ] , <D> , label = <E> )
データフレーム <A> 内の <B> 列と <C> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<B> ( データフレーム ) の <C> を順番になるようにし、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
表データ <A> の <B> の時間を調べる	<A> [ <B> ] . dt . hour	[ <A> [ <B> ] . dt . hour
データフレーム <A> の中のそれぞれのカラムにある <B> の個数の合計値を求める	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表データ <A> の重複している行をドロップを <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> を <B> を列名としてデータフレームにする	pd . pd . DataFrame ( <A> , columns = <B> )	<A> . pd . DataFrame ( <B> , columns = [ 'label' ] )
表データ <A> の中の <B> を欠損値に置換し、欠損値がある行を消して、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	markerfacecolor = <A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <B> の <C> コラムをインデックス、コラム <D> をコラムとしたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	<B> <A> = <B> . pivot_table ( index = <C> , columns = <D> )
CSV ファイル <B> ( ファイル名 ) をカンマ区切りでデータフレームとして読み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
そこで、位置は出力しない	index = False	encoding = 'shift_jis'
同じグラフ内で表 <A> の <B> と <A> の <C> と <A> の <D> をボックスチャートで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの形として点を使用する	marker = '.'	marker = '.'
表 <A> 内で重複する行数の合計を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> の <B> と <A> データフレームの <C> と <A> の列 <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの形のエッジ色として黄緑色を使用する	markeredgecolor = 'greenyellow'	'greenyellow' = 'greenyellow'
表 <A> の <B> を欠損値に置換し、欠損値がある行を削除し、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<B> とデータフレーム <C> を縦方向に連結を <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<A> という列を消し、置き換える	df = df . drop ( <A> , axis = 1 )	axis = <A> . drop ( <A> , axis = 1 )
<A> の <C> 内の前後の行の差分を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<B> <A> [ <C> ] = <A> [ <D> ] . diff ( periods = 1 )
そこで、マーカーをアスタリスクとする	marker = '*'	marker = '*'
表 <A> 中の未入力の値が存在する行を落とし、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
<A> 中の重複する行を削除を <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> の index が <B> の行を抽出する	<A> . loc [ <B> ]	<A> . loc [ <B> ]
そこで、マーカーの形状のエッジ色は紺色を用いる	markeredgecolor = 'navy'	markeredgewidth = 'navy'
データフレーム <B> の <C> と <D> を降順にソートし、 <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> 中の <B> , <C> , <D> 行目の <E> , <C> 列目を取得する	<A> . iloc [ [ <B> , <C> , <D> ] , [ <E> , <C> ] ]	iloc [ <A> , [ <B> , <C> , <D> ] , [ <E> , <C> ]
<A> の <B> 内の前後の行の差分を求める	<A> [ <B> ] . diff ( periods = 1 )	diff [ <B> ] . diff ( periods = 1 )
<A> 内にある <B> を欠損値に置換し、置き換える	<A> . replace ( <B> , np . nan , inplace = True )	<A> . replace ( <B> , np . nan , inplace = True )
表 <A> 中の未記入の値がある行を落として、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
そこで、マーカーは円形を使う	marker = 'o'	marker = 'o'
データフレーム <A> を位置でソートし、再代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <A> の NaN を <B> とし、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
データフレーム <A> のカラム名を <B> から <C> にリネームし、置き換える	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
表データ <A> を <B> でグループ化し、 <C> と <D> で集約し、 <D> で並べ直す	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , <D> : sum } ) . sort_values ( by = <D> )	<A> . groupby ( <B> ) . agg ( { <C> : <D> } ) . sort_values ( by = <D> )
<A> の <B> と <A> 表のコラム <C> と <A> の <D> コラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> の <B> と <A> 表の <C> と <A> 表の <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の中の <B> に重複があるのかどうか確認を見る	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表データ <A> をインデックスに基づいてソートする	<A> . sort_index ( )	<A> . sort_index ( )
データフレーム <A> のオブジェクトデータの要約統計量を調べる	<A> . describe ( include = 'O' )	describe include = 'O' )
同じ軸のセットで表データ <A> <B> と表データ <A> <C> と表データ <A> <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
左側のデータの位置と右側のデータの <B> をキーとして 2 つのデータを結合し、 <A> とする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	df2 = pd . merge ( df1 , left_index = True , right_on = <B> )
ヘッダーなしで <A> を読み込む	pd . read_csv ( <A> , header = None )	pd . read_csv ( <A> , header = None )
そこで、文字コードとして <A> を使用する	encoding = <A>	end = <A>
表 <A> を <B> という名前にして CSV ファイルに書き込む	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
<A> CSV ファイルを文字化けしないように読む	pd . read_csv ( <A> , encoding = 's-jis' )	pd . read_csv ( <A> , encoding = 'shift_jis' )
左外部結合で <B> 表と <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	<A> = pd . merge ( <B> , <C> , how = 'left' )
そこで、マーカーの輪郭色として紺色を用いる	markeredgecolor = 'navy'	markeredgewidth = 'navy'
表データ <A> 内のコラム <B> に重複があるのかどうか確認を確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表 <A> の <B> 行目の <C> 列を取得する	<A> . iloc [ <B> ] [ <C> ]	X [ <A> ] [ <B> ] [ <C> ]
<B> と <C> を大から小へと並び替えて、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )
<A> 内の <B> を NaN に置換し、 NaN が存在する行を削除し、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
インデックスなしで <A> 表データを <B> ファイルパスに保存する	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
表 <A> のカラム <B> とカラム <C> を削除して、再代入する	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	sns = <A> . drop ( [ <B> , <C> ] , axis = 1 )
データフレーム <A> の <B> と列 <C> と <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの輪郭色は黄色を用いる	markeredgecolor = 'yellow'	markersize = 'yellow'
コラム <A> と <B> を大きい順にソートし、置き換える	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
表データ <A> <B> と <A> 列 <C> と <A> <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の NaN をカウントする	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、種類として六角ビニングを用いる	kind = 'hexbin'	kind = 'hexbin'
表 <B> 中の重複要素がある行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> を項目名としてデータを内部結合する	pd . merge ( df1 , df2 , on = <A> )	pd . merge ( df1 , df2 , on = <A> )
データフレーム <B> に存在する <C> を未入力の値に置換して、 <A> にする	<A> = <B> . replace ( <C> , np . nan )	<A> = <B> . replace ( <C> , np . nan )
表データ <A> の <B> と <C> と <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の NaN を含む行をドロップ	<A> . dropna ( )	<A> . dropna ( )
左側のデータのインデックスと右側のデータの <D> を項目名として、 <B> と <C> 表データを一つにまとめ、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
そこで、種類として垂直棒グラフを使用する	kind = 'bar'	kind = 'bar'
データフレーム <A> 内の <B> に重複があるのかチェックを確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
棒グラフの位置を中心に設定して、 <A> と <B> の棒グラフを作画する	plt . bar ( <A> , <B> , align = 'center' )	plt . barh ( <A> , <B> , align = 'center' )
そこで、目印の色はネイビー	markerfacecolor = 'navy'	markerfacecolor = 'navy'
目盛り線をグラフに付ける	plt . grid ( True )	plt . grid ( True )
表 <A> 内の欠損値がある行を削除し、 <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行を落とし、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	markeredgewidth = <A> . drop_duplicates ( keep = False )
表 <A> 中の列に存在する <B> の個数の合計を算出する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
文字コードを shift_jis として、ファイルパス <A> を読み込む	pd . read_csv ( <A> , encoding = 'shift_jis' )	pd . read_csv ( <A> , encoding = 'shift_jis' )
そこで、マーカーの輪郭色はマゼンタとする	markeredgecolor = 'magenta'	markeredgewidth = 'magenta'
表データ <A> の <B> コラムと <C> の相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
データフレーム <A> 内の <B> に重複があるのかチェック	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<B> の <E> について、 <C> をインデックス、表属性 <D> を表属性としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
グラフの y 軸のラベルを <A> にセットする	plt . ylabel ( <A> )	plt . ylabel ( <A> )
表データ <A> 中の欠損を <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
<C> 番目の列をインデックスに、 <B> から読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> ( データフレーム ) のコラム <B> をソートして、置き換える	<A> . sort_values ( <B> , inplace = True )	sort_values <A> . sort_values ( <B> , inplace = True )
同じ軸でデータフレーム <A> の <B> と <C> と <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> ( データフレーム ) の <C> を小から大へとソートを <A> に代入する	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <B> 中の重複する行を落とし、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<B> の <C> 列の値を昇順でソートを <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表 <A> のコラム <B> を箱ひげ図にプロットする	plt . boxplot ( <A> [ <B> ] )	boxplot plt . boxplot ( <A> [ <B> ] )
そこで、グラフは面グラフを用いる	kind = 'area'	kind = 'area'
先頭の列をインデックスに指定して、ファイル名 <B> を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	] = pd . read_csv ( <A> , index_col = <B> )
表 <B> 内の欠損を <C> で埋め、 <A> に代入する	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
同じ軸のセットで表 <A> 表属性 <B> と表 <A> <C> 表属性と <A> <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中の重複した行を消し、 <A> に代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<B> にインデックスなしで <A> を保存する	<A> . to_csv ( <B> , index = False )	to_csv <A> = <B> . to_csv ( index = False )
箱髭図を用いて	plt . boxplot ( X )	plt . boxplot ( [ X , Y ] )
データフレーム <A> の <B> カラムのデータの種類を見る	<A> [ <B> ] . unique ( )	<B> <A> [ <B> ] . unique ( )
表 <A> とデータフレーム <B> を横に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
左側のデータの位置と右側のデータの <D> をキーとして、 <B> 表データと <C> 表データをマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	df1 <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
そこで、マーカーの輪郭色は紺色を使う	markeredgecolor = 'navy'	markeredgewidth = 'navy'
<A> という名前のエクセル <A> のシート全部をデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> , sheet_name = None )
インデックスと <C> を項目名としてデータフレーム <A> と <B> データフレームを一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
エクセルファイル <B> からデータフレームを読み込んで、 <A> に代入する	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
<A> を <B> という名前にして書き出す	<A> . to_csv ( <B> )	'utf_8_sig' <A> . to_csv ( <B> )
表 <B> を <C> でソートを <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<B> を <C> をカラム名としてデータフレームに変換し、 <A> とする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
データフレーム <A> 内の欠損を直前の行の値で埋めて、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<A> . fillna ( method = 'ffill' , inplace = True )
表データ <A> の <B> のデータ列	<A> [ <B> ]	alpha <A> [ <B> ]
コラム <B> と <C> を降順に並び替えて、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> を <B> を元に昇順で並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	pd . sort_values ( <A> , <B> , inplace = True )
表 <A> 中の欠損値を削除	<A> . dropna ( )	<A> . dropna ( )
表 <A> 内のそれぞれのカラムに存在する <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
軸を <A> として、 <B> の横向きの棒グラフを作図する	plt . barh ( <A> , <B> , align = 'center' )	plt . bar ( df [ <A> , <B> ] , ascending = False )
そこで、線の形状を一点鎖線とする	linestyle = 'dashbot'	alpha = 'dashbot'
データフレーム <A> の <B> の未記入の値を <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
同じグラフ内で <A> 表の <B> と <A> の <C> と表 <A> のカラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> という名前のエクセルファイルの全部のシートからデータフレームを読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
カンマ区切りで表として <A> ファイル名を読み込む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
表 <A> に重複はあるのかどうか確認を調べる	<A> . duplicated ( )	df . duplicated ( subset = <A> )
左外部結合で <B> 表と <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	<A> = pd . merge ( <B> , <C> , how = 'left' )
<A> の <B> の名前を <C> にリネームし、再代入する	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
データフレーム <A> を <B> で並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
<A> 内の <B> とコラム <C> に重複があるのかどうか確認を表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレームを <B> からタブ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = '\t' )	<A> = pd . read_csv ( <B> , sep = '\t' )
表 <A> カラム <B> と表 <A> カラム <C> と <A> 表 <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> を <B> で並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
表 <A> のカラム <B> のデータ列を得る	<A> [ <B> ]	<A> [ <B> ]
データフレーム <A> の <B> と <A> 表データの <C> と <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> のコラム <B> の秒を確認する	<A> [ <B> ] . dt . second	<B> <A> [ <B> ] . dt . second
一番左の列をインデックスに設定して、 <B> を読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	] = <A> . read_csv ( <B> , index_col = 0 )
ピボット操作で <A> 表データの行を列に変更する	<A> . unstack ( )	df1 . unstack ( <A> )
表 <A> の欠損を <B> で埋める	<A> . fillna ( <B> )	fillna <A> [ <B> ] . fillna ( ) )
表データ <A> の中の欠損を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
グラフの y 軸のラベルを <A> にする	plt . ylabel ( <A> )	plt . ylabel ( <A> )
<A> とカラム <B> に重複は存在するのか調べる	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
分割数を <D> 、ビンの名前を <E> として、 <B> の <C> コラムを分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	fontsize = <A> . cut ( <B> [ <C> ] , <D> , label = <E> )
位置と <D> をキーとして <B> と表 <C> を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<B> <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> の <B> をインデックス、 <C> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> )	markeredgewidth = <A> . pivot_table ( index = <B> , columns = <C> )
<A> 内の欠損の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> に重複はあるかどうか確認を表示する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
エクセルファイル <B> の <C> のシートをデータフレームに格納し、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表データ <B> 全体を位置を元に並び替え、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
同じ x 軸と y 軸で <A> <B> 列と <A> 表列 <C> と表 <A> 列 <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> を <B> という名前にしてエクセル形式に書き込む	<A> . to_excel ( <B> )	read_excel <A> . to_excel ( <B> )
表データ <A> の <B> と表属性 <C> と <D> 表属性についてのボックスチャートを作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ビン数を <D> として、 <B> 表データの <C> をビンに含まれる個数が等しくなるように分割し、 <A> に代入する	<A> = pd . qcut ( <B> [ <C> ] , <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
データフレーム <A> 内の欠損値を <B> として、再代入する	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
表データ <A> の <B> と <C> と <D> について関係性を一気に作図する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> 中の <B> と <C> に重複があるかチェックする	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> の欠損値を <A> 表の平均値で埋めて、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
<A> の度数分布図をビン数を <B> として描画する	plt . hist ( <A> , bins = <B> )	bins = <A> . sort_values ( <B> )
データフレーム <A> 内の <B> と <C> に重複があるのかどうか表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> 中の欠損を含む行を落とし、 <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <B> の <E> について、列 <C> を位置、列 <D> を列としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
表データ <A> の中の未入力の値を <A> の平均値で埋め、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> . fillna ( <A> . mean ( ) , inplace = True )
データフレーム <B> の中の重複した行をドロップし、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
分割数を <C> 、ビンのラベルをインデックスとして、 <A> の <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
同じ x 軸と y 軸で <A> の <B> とデータフレーム <A> の <C> 表属性と <A> データフレームの <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と <B> 表データを結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
そこで、目印のエッジ色は青色を使う	markeredgecolor = 'blue'	activation = 'blue'
表データ <A> の <B> を日付型に変換する	pd . to_datetime ( <A> [ <B> ] )	pd . to_datetime ( <A> [ <B> ] )
データフレームとして CSV ファイル <B> ( ファイル名 ) を <C> 区切りで読み込み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
列番号 <B> をインデックスとして、 <A> ファイルから読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表データ <A> の重複している値がある行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
データフレーム <A> のインデックス名を <B> から <C> に変更して、置き換える	<A> . rename ( index = { <B> : <C> } , inplace = True )	<A> . rename ( index = { <B> : <C> } , inplace = True )
棒の位置を中心に設定して、横向きの棒グラフを設定する	plt . barh ( y , x , align = 'center' )	plt . barh ( <A> , align = 'center' )
同じグラフ内でデータフレーム <A> <B> カラムと <A> データフレーム <C> カラムと <A> カラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> と <B> データフレームを縦方向でマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <A> の未入力の値を <B> とする	<A> . fillna ( <B> )	<B> <A> . fillna ( method = 'ffill' )
データフレーム <A> <B> と <A> <C> と表データ <A> <D> カラムの箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カンマ区切りで表としてファイルパス <B> を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
作ったグラフを <A> という名前で書き出す	plt . savefig ( <A> )	plt . savefig ( <A> )
<B> の <C> を軸にソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
そこで、マーカーの形状の色をグレーとする	markerfacecolor = 'gray'	markerfacecolor = 'gray'
同じグラフ内で <A> 表データ <B> と表データ <A> カラム <C> と表データ <A> <D> カラムを箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> 内の未入力の値を <C> として、 <A> とする	<A> = <B> . fillna ( <C> )	markeredgewidth = <B> . fillna ( <C> )
表 <A> の <B> コラムの各要素の出現回数	<A> [ <B> ] . value_counts ( )	<B> <A> [ <B> ] . value_counts ( )
表 <A> の <B> 表属性とデータフレーム <A> の <C> と <A> データフレームの <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の重複している行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
同じ軸で表データ <A> <B> と表データ <A> <C> と <A> <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
インデックスとコラム <C> を項目名として <A> データフレームと <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	df1 . merge ( <A> , <B> , left_index = True , right_on = <C> )
<B> の <C> カラムと <D> カラムを逆順に並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> 全体を <B> の値に沿ってソートして、置き換える	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<B> 全体を <C> を軸に並び替え、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<A> と <B> を横方向に連結する	pd . concat ( [ <A> , <B> ] , axis = 1 )	. pd . concat ( [ <A> , <B> ] , axis = 1 )
そこで、目印のエッジ色は黄緑色を使う	markeredgecolor = 'greenyellow'	end = 'greenyellow'
表データ <A> を <B> の値を元に昇順で並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
そこで、最適化手法は確率的勾配降下法を用いる	solver = 'sgd'	solver = 'sgd'
そこで、マーカーの色を黄緑色とする	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
パーセプトロンを用意して、 <A> にする	<A> = sklearn . neural_network . MLPClassifier ( )	<A> = sklearn . neural_network . MLPClassifier ( )
表 <A> をパス <B> に BOM 付きで保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	encoding = <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
左側のデータのインデックスと右側のデータの <D> を項目名として、表 <B> と <C> 表をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
棒と棒の隙間を <C> として、 <A> 軸を <A> とした <B> の縦向きの棒グラフを描く	plt . bar ( <A> , <B> , width = <C> )	plt . barh ( <A> , <B> , width = <C> )
表 <A> <B> と <A> <C> と <A> データフレーム <D> についてのボックスチャートを描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> 全体をインデックスを元に並び替えて、 <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレーム <A> 内の欠損値を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 全体を <B> で並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
表データ <A> 内 ] [ で重複する行数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> 内の <B> に重複はあるかチェック	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表データ <B> のカラム <C> の名前を <D> にリネームし、 <A> に代入する	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
<A> 全体を <B> を元に昇順で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> <B> と <A> 表 <C> と <A> <D> 列の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> 全体を <B> の値を元にソートする	<A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> 中の NaN がある行を削除を <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <A> の <B> を昇順にソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表データ <A> 中の <B> とカラム <C> に重複があるのかどうかチェックする	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> 中の未記入の値を <B> に置換し、 <A> に代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表データ <A> <B> と <A> 表属性 <C> とデータフレーム <A> <D> についてのボックスチャートをプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> をグラフの y 軸、 <B> を x 軸として、散布図を作画する	plt . scatter ( <A> , <B> )	plot plt . scatter ( <A> , <B> )
列 <A> と <B> に重複があるのか確認を確認する	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
データフレーム <A> とデータフレーム <B> に対して、 <C> を項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表データ <A> の <B> の欠損値を <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
データフレーム <A> 内の <B> を未入力の値に置換し、未入力の値が存在する行をドロップして、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表データ <A> <B> カラムと <A> <C> と <A> 表データカラム <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ビン数を <C> 、ビンの名前を 0 始まりの連番として、 <A> の <B> 列をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	bins = <A> [ <B> , <C> ] , label = False )
<A> という名前のエクセルファイルの <B> 番目のシートからデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<C> 番目の列をインデックスとして、 <B> からデータフレームとを読み込み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> ( データフレーム ) の <B> 表属性と <C> 表属性を逆順に並び替え、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> の表属性 <B> と <A> データフレームの <C> と <A> の表属性 <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中の欠損値を削除し、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> <B> と <A> <C> と表データ <A> <D> カラムについての箱髭図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> 表属性を四分位数ごとでビン分割する	pd . qcut ( <A> [ <B> ] , 4 )	pd . qcut ( <A> [ <B> ] , 4 )
<A> 表の内容を	<A> . head ( )	pd . head ( <A> )
データフレーム <A> のそれぞれの列にある <B> の個数を調べる	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> をインデックスなしでファイルパス <B> に書き出す	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
表 <A> 表属性 <B> と <A> <C> とデータフレーム <A> 表属性 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの形の色を紫色とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
<A> の <B> と表 <A> のカラム <C> と表 <A> の <D> カラムの箱髭図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) の列 <B> と列 <C> を逆順にし、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	for <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
同じ軸のセットで <A> 列 <B> と表 <A> <C> と <A> 列 <D> を箱髭図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、円グラフ上に小数点 2 位まで構成割合をパーセントを付けて表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
表データ <A> の <B> と <C> カラムを大から小へとソートし、 <A> に代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> をコラム <B> を元にソート	<A> . sort_values ( <B> )	df . sort_values ( <A> [ <B> ] , ascending = False )
表 <A> の <B> と <C> をドロップして、 <A> にする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> のコラム <B> の値を軸に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> のカラム <C> の曜日を表示し、  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name
<A> の <B> を欠損値に置換し、欠損値が存在する行を削除して、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
データフレーム <A> 中で重複した行の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
同じグラフ内で <A> の <B> 列と <A> 表の <C> と表 <A> の列 <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> をグループ化して、値ごとのデータ数	<A> . groupby ( <B> ) . size ( )	<A> . groupby ( <B> ) . size ( )
リスト <B> を <C> を列名としてデータフレームにして、 <A> とする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	] = pd . pd . DataFrame ( <B> , columns = <C> )
表データ <B> を位置を軸にソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表 <A> 内の重複をチェック	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表データ <A> の <B> の中の前後の行の差分を計算する	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
表 <A> の中の <B> と <C> に重複があるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<B> 区切りで CSV ファイル <A> ( ファイル名 ) を表データとして読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
先頭の列を位置と設定して、ファイル名 <B> から読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	pd . read_csv ( <A> , index_col = <B> )
先頭の列を位置として、 <A> をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = 0 )	index_col = pd . read_csv ( <A> )
データフレーム <A> <B> と表 <A> <C> と <A> <D> についての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カラム <A> とカラム <B> を降順にソートする	df . sort_values ( [ <A> , <B> ] , ascending = False )	ascending = df . sort_values ( [ <A> , <B> ] , ascending = False )
カラム <C> を項目名として、 <A> 表と <B> を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> のカラム名を見る	<A> . columns	<A> . columns
<A> の列 <B> を昇順でソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
そこで、マーカーの形状の色を赤とする	markerfacecolor = 'red'	markersize = 'red'
表データ <A> において、 <B> と <C> と <D> の関係性を一気に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> を <B> の値を元に昇順で並び替え、 <A> に代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
そこで、ビンの数として <A> を使う	bins = <A>	bins = <A>
表 <A> 表属性 <B> と <A> <C> と表データ <A> <D> 表属性についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の重複している値がある行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<A> の欠損値がある行を削除する	<A> . dropna ( )	<A> . dropna ( )
データフレーム <B> を <C> 列の値でソートを <A> に代入する	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表 <A> 中の <B> 列に重複がある行をドロップして、置き換える	<A> . drop_duplicates ( subset = <B> , inplace = True )	markerfacecolor = <A> . drop_duplicates ( subset = <B> )
表データ <A> の <B> と <A> 表の <C> カラムと <A> のカラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中の NaN の合計を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
同じ軸で <A> の <B> と <C> と <D> 列を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の <C> を NaN に置換し、 NaN がある行を落として、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )
<A> の <B> と <A> のコラム <C> と <A> のコラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の列 <B> と <A> の <C> と表 <A> の <D> 列の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、目印のエッジ色は黄緑	markeredgecolor = 'greenyellow'	markeredgewidth = 'greenyellow'
データフレーム <A> 中で重複した行の合計を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> <B> と <A> データフレーム <C> と <A> データフレーム <D> 表属性の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> 表属性と表属性 <C> を値が大きい順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
表 <A> <B> と <A> <C> 表属性と <A> 表データ <D> 表属性についての箱髭図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
棒グラフの項目名を <A> から <B> 、 <C> 、 <D> へ変更する	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
グラフの x 軸を <A> として、 <B> の棒グラフをプロットする	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
データフレーム <A> の未入力の値を <B> に置換し、 <A> とする	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
ビン数を <C> 、ビンのラベルを <D> として、 <A> 表の <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> コラムという列を削除し、インプレースする	df . drop ( <A> , axis = 1 , inplace = True )	df . drop ( <A> , axis = 1 , inplace = True )
<A> のコラム <B> を四分位数ごとで分割する	pd . qcut ( <A> [ <B> ] , 4 )	4 . qcut ( <A> [ <B> ] , 4 )
データフレーム <A> 全体を <B> の値を元にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> を縦軸、 <B> を横軸として、グラフを描写する	plt . plot ( <A> , <B> )	plt . plot ( <A> , <B> )
表データ <A> と <B> を縦方向にマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> <B> と <A> 表 <C> と <A> <D> カラムの箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
ビン数を <B> として <A> の柱状グラフを描写する	plt . hist ( <A> , bins = <B> )	pd . cut ( df [ <A> ] , <B> ] )
データフレーム <A> 中で重複している行数の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> と <B> を縦方向に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> の <B> 行目を落とす	<A> . drop ( <B> )	df [ <A> ] . drop ( <B> )
データフレームとして <B> 区切りで <A> を読み込む	pd . read_csv ( <A> , sep = <B> )	for read_csv sep = <B> )
<A> <B> と <A> 表 <C> と表 <A> カラム <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> とコラム <C> を値が大きい順にソートを <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
そこで、棒グラフをする	kind = 'bar'	kind = 'bar'
エクセルの <B> を表に格納して、 <A> とする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
<A> の中の <B> を欠損値に置換し、欠損値がある行を削除する	<A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> . replace ( <B> , np . nan ) . dropna ( )
そこで、正方形を目印とする	marker = 's'	marker = 's'
分割数を <C> として、表 <A> の <B> を分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
表属性 <B> に重複がある行を drop して、 <A> にする	<A> = df . drop_duplicates ( subset = <B> )	= <A> . drop_duplicates ( subset = <B> )
<A> 内のカラム <B> に重複があるか	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<B> ( データフレーム ) の列 <C> を小さい順にして、 <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
リスト <A> を表に変換する	pd . pd . DataFrame ( <A> , columns = [ 'label' ] )	. pd . DataFrame ( <A> , columns = [ 'label' ] )
左側のデータのインデックスと右側のデータのカラム <C> をキーとして、 <A> 表データと <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データをパス <B> からタブ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = '\t' )	<A> = pd . read_csv ( <B> , sep = '\t' )
表 <A> の <B> と <C> 列を逆順に並び替え、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <B> とデータフレーム <C> を縦方向でマージし、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
<B> という名前のエクセルデータの <C> を読んで、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
同じ x 軸と y 軸でデータフレーム <A> の列 <B> と <A> の <C> と <A> の <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の重複している行を取り除き、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
横軸を <A> とした <B> の鉛直棒グラフを表示する	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
そこで、グラフは六角ビニング図をする	kind = 'hexbin'	kind = 'hexbin'
データフレーム <A> 内の <B> と <C> に重複があるかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> データフレームの内容を	<A> . head ( )	pd . head ( <A> )
そこで、十字のマーカーを表示する	marker = 'x'	marker = 'x'
重複している最後の行を残して <A> ( データフレーム ) 内の重複している行を落として、再代入する	<A> = <A> . drop_duplicates ( keep = False )	fontsize = <A> . drop_duplicates ( keep = False )
<A> ( データフレーム ) の <B> を順にソートを <A> とする	<A> = <A> . sort_values ( <B> )	df = <A> . sort_values ( <B> )
表データ <A> 中の重複する行を削除を <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
同じグラフ内で <A> 表データの <B> と <A> の <C> と表データ <A> の <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> を並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
<A> 表属性をソートする	df . sort_values ( <A> )	df . sort_values ( <A> )
表データ <B> の元のインデックスを振り直して、 <A> にする	<A> = <B> . reset_index ( drop = True )	<A> = <B> . reset_index ( drop = True )
<A> と <B> 表データを縦方向で一つにまとめる	pd . concat ( [ <A> , <B> ] )	for pd . concat ( [ <A> , <B> ] )
データフレーム <A> の <B> についての中央値を抽出する	<A> [ <B> ] . median ( )	if <A> [ <B> ] . median ( ) )
表データ <A> の列 <B> と列 <C> と <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、ラインスタイルは破線を用いる	linestyle = 'dashed'	stacked = 'dashed'
データフレーム <A> の中にある <B> を未記入の値に置換し、置き換える	<A> = <A> . replace ( <B> , np . nan )	<B> <A> . replace ( <B> , np . nan , inplace = True )
データフレーム <A> の <B> と <A> 表のコラム <C> と <A> 表の <D> の箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、赤をマーカーのエッジ色にする	markeredgecolor = 'red'	end = 'red'
<A> 軸のラベルを <A> から <B> 、 <C> 、 <D> へ変更する	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
表 <A> と <B> データフレームを横にくっつける	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
表 <B> の <C> コラムと <D> を値が大きい順に並び替え、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
同じ軸で <A> の <B> カラムと <A> の <C> と表データ <A> の <D> を箱髭図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の列 <B> と <A> 表の <C> 列と表 <A> の <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> を位置を元に並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
表 <A> の <B> のデータ	<A> [ <B> ]	[ <A> <B> ]
表データ <A> <B> と <A> <C> と <A> 表データ <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの形の輪郭色はグレーを用いる	markeredgecolor = 'gray'	markeredgewidth = 'gray'
そこで、グラフはグレーで表示する	color = 'gray'	color = 'gray'
そこで、打点の輪郭色はネイビーをする	markeredgecolor = 'navy'	end = 'navy'
データフレーム <A> の重複要素がある行を取り除き、置き換える	<A> . drop_duplicates ( inplace = True )	= <A> . drop_duplicates ( )
<A> 内の <B> を NaN に置換し、 NaN がある行を落とす	<A> . replace ( <B> , np . nan ) . dropna ( )	X . replace ( <A> , <B> , np . nan ) . dropna ( )
表データ <A> を表属性 <B> でソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表 <A> 中の <B> を欠損に置換し、欠損が存在する行をドロップを <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
そこで、目印として○を用いる	marker = 'o'	marker = 'o'
<A> の重複している行の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> 内の欠損の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> の振り直して、元のインデックスを削除して、 <A> に代入する	<A> = <B> . reset_index ( drop = True )	sns = <A> . reset_index ( drop = True )
モデル <A> で <B> を変換する	<A> . transform ( <B> )	df . transform ( subset = [ <A> , <B> ] )
同じグラフ内で <A> データフレームの <B> と <C> と <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の欠損を平均値で穴埋めして置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
表 <A> と <B> データフレームを横に一つにまとめる	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
表データ <A> の中の <B> を欠損値に置換し、欠損値がある行を消して、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	markerfacecolor = <A> . replace ( <B> , np . nan ) . dropna ( )
エクセルファイル <A> のシート名 <B> から読む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
データフレーム <B> 内の欠損値がある行をドロップし、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <B> と表データ <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> )	sep = <B> , <C> )
表 <A> から重複している値がある行を取り除いて、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表 <A> <B> と <A> <C> とデータフレーム <A> <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、半分、透過させる	alpha = 0.5	color = 'red'
表 <A> 内の <B> と <C> に重複はあるかチェックを調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> 内の未記入の値を削除を <A> とする	<A> = <A> . dropna ( )	= <A> . dropna ( )
そこで、色はシアンとする	color = 'cyan'	'cyan' = 'cyan'
<A> の最初の <B> 行	<A> . head ( <B> )	df [ <A> ] . head ( <B> )
表 <A> 中の欠損値を削除を <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
インデックスなしで <A> をファイルパス <B> に書き出す	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
表 <A> の表属性 <B> を中央値で分割する	pd . qcut ( <A> [ <B> ] , 2 )	pd . qcut ( <A> [ <B> ] , 4 )
表 <A> のカラム名を <B> から <C> に、 <D> から <E> にリネームする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<A> 内の未入力の値を <B> に置き換え、再代入する	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
両方の列を使って <B> ( データフレーム ) と <C> 表をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	merge <A> = pd . merge ( <B> , <C> , how = 'outer' )
エクセルファイル <A> の <B> 番目のシートを読む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
表データ <A> の中のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
表 <A> のカラム <B> が <C> 以下データ	<A> [ <A> [ <B> ] <= <C> ]	<= <A> [ <B> ] <= <C> ]
表 <A> の列の名前を表示する	<A> . columns	<A> . columns
そこで、マーカーの形のエッジ色として黄緑を使用する	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
同じグラフ内で <A> 表データの表属性 <B> と表属性 <C> と <D> 表属性を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> というエクセルファイルの <B> のシートを表に格納する	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
表データ <B> と <C> を縦方向にくっつけ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
表をファイル <B> から読み込み、 <A> とする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
<A> を <B> という名前にして CSV ファイルに書き込む	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
両方の列を使って <B> ( データフレーム ) と <C> 表データを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	merge <A> = pd . merge ( <B> , <C> , how = 'outer' )
<A> 内の未入力の値を直前の行の値で補い、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表 <A> の全ての列で重複している行を取り除いて、再代入する	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表データ <A> の <B> の名前を <C> にリネームして、 <A> に代入する	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
表データ <A> 内のそれぞれのカラムに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
左側のデータのインデックスと右側のデータの表属性 <C> を項目名として、 <A> データフレームとデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
グラフにグリッドを表示する	plt . grid ( True )	plt . grid ( True )
表属性 <D> をキーとして、 <B> と <C> 表データを一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
<A> のインデックスを昇順でソートし、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
<A> という名前のエクセルの <B> のシートから読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<B> カラムをキーとしてデータを内部結合し、 <A> にする	<A> = pd . merge ( df1 , df2 , on = <B> )	= pd . merge ( df1 , df2 , on = <B> )
表 <A> の中にある <B> を未記入の値に置換し、 <A> とする	<A> = <A> . replace ( <B> , np . nan )	<B> <A> = <A> . replace ( <B> , np . nan )
表データ <A> 中の <B> を欠損に置換し、欠損が存在する行をドロップ	<A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( )
そこで、マーカーの形の輪郭線は <A> を使う	markeredgewidth = <A>	markersize = <A>
表 <A> の末尾 5 行	<A> . tail ( )	plt . tail ( <A> )
表データ <A> の元の位置をリセットする	<A> . reset_index ( drop = True )	X = <A> . reset_index ( drop = True )
表データ <B> 全体をインデックスを元に昇順で並び替えて、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <B> のインデックス <C> の名前を <D> にリネームして、 <A> にする	<A> = <B> . rename ( index = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
データフレーム <A> <B> と <A> データフレームカラム <C> と <A> データフレームカラム <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> 内 ] [ で重複した行数の合計を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<B> というエクセルデータのシート名 <C> を読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
データフレーム <A> 内の重複した行をドロップし、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<A> の <B> と <A> 表の <C> 列と <A> の <D> 列についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> 全体を <C> コラムを軸にソートし、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
<C> カラムを項目名として、 <A> データフレームと <B> データフレームをマージする	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表データ <A> の <B> コラムとコラム <C> を大から小へとソートを <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
<A> の <B> とカラム <C> ごとに <D> の値の合計を計算する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表データ <A> 内の欠損を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 中のカラムそれぞれに存在する <B> の個数を調べる	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
そこで、出力先として <A> を使う	file = <A>	start = <A>
<A> の <B> に重複は存在するのか確認を調べる	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
データフレーム <A> についてダミー変数を作成し、 <A> とする	<A> = pd . get_dummies ( <A> )	<A> = pd . get_dummies ( <A> )
<A> の中の NaN の数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 中の <B> カラムに重複があるかチェックする	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表データ <B> の <C> をインデックスとして、 <A> とする	<A> = <B> . set_index ( <C> )	<A> = <B> . set_index ( <C> )
表 <B> の中の欠損値がある行を削除を <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
ファイル <B> から表データをカンマ区切りで読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表 <A> 全体を <B> を元にソートを <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> 内の欠損を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
<A> を <B> の値を元に昇順で並び替える	<A> . sort_values ( <B> )	plt . sort_values ( <A> , <B> )
表データ <A> の先頭 5 行	<A> . head ( )	pd . head ( <A> )
繰り返しは <A> までにする	max_iter = <A>	if <A> . duplicated ( ) :
表データ <A> のデータの性質を確認する	<A> . info ( )	<A> . info ( )
表 <A> を <B> ファイル名というファイル名で保存する	<A> . to_csv ( <B> )	'utf_8_sig' <A> . to_csv ( <B> )
エクセルファイル <A> のシート全てを読み込む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表 <A> の中の欠損値の合計を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<C> 番目の列を位置にして、 <B> ファイルを読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	] = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> 中の欠損したセル数を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
ヒストグラムとして	plt . hist ( X )	kind = 'hist'
データフレーム <B> と <C> を横にくっつけて、 <A> とする	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
そこで、マーカーのエッジ色としてシアンを使う	markeredgecolor = 'cyan'	end = 'cyan'
表 <A> の先頭から <B> 行までを表示する	<A> [ : <B> ]	<A> [ : <B> ]
表 <A> をファイルパス <B> に書き込む	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表データ <A> 中の <B> に重複があるのかどうか確認	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
グラフの x 軸を <A> として、 <B> の縦向き棒グラフを作図する	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
表 <A> 中の未入力の値を落として、 <A> にする	<A> = <A> . dropna ( )	= <A> . dropna ( )
表 <A> のデータの詳細	<A> . info ( )	<A> . info ( )
<A> 中の重複している行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> ( データフレーム ) の列 <B> と列 <C> を降順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、グレーで表示する	color = 'gray'	markerfacecolor = 'gray'
データフレーム <A> 内のコラム <B> に重複があるか確認	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表データ <A> の NaN を <A> の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	= <A> . fillna ( <A> . mean ( ) )
エクセル <B> を読んで、 <A> とする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
一番左の列を位置に指定して、 <B> からデータフレームとを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	linestyle = pd . read_csv ( <B> , index_col = 0 )
<B> の <C> の値をソートを <A> に代入する	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表データ <A> の欠損値を <B> に置換し、 <A> にする	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表データ <A> <B> と <A> データフレーム <C> と <A> <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> と表データ <B> を縦方向でマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
列番号 <B> を位置として、パス <A> を読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
全結合で表 <A> と <B> 表を結合する	pd . merge ( <A> , <B> , how = 'outer' )	how = pd . merge ( <A> , <B> , how = 'outer' )
表データ <A> のカラム名を <B> から <C> に変更し、置き換える	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
x 軸を <A> として、 <B> の縦向き棒グラフを描く	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
エクセルファイル <A> の <B> 番目のシートをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
データフレーム <A> 内の重複した行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> 内の欠損値を <B> で埋め、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表データ <B> 中にある <C> を欠損に置換し、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	nan <A> = <B> . replace ( <C> , np . nan )
表データ <A> の振り直して、元のインデックスを削除して、置き換える	<A> = <A> . reset_index ( drop = True )	dropna = <A> . reset_index ( drop = True )
表 <A> の <B> と <C> と <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> と <A> のコラム <C> と <A> 表の <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の NaN を消して、置き換える	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
表 <A> の <B> のユニーク値を表示する	<A> [ <B> ] . unique ( )	<B> <A> [ <B> ] . unique ( )
表 <A> の <B> と <C> と <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> の名前を <C> にリネームして、 <A> にする	<A> = <A> . rename ( index = { <B> : <C> } )	'words' = <A> . rename ( columns = { <B> : <C> } )
<B> をキーとしてデータを結合して、 <A> に代入する	<A> = pd . merge ( df1 , df2 , on = <B> )	pd . merge ( df1 , df2 , on = <B> )
<C> 番目の列をインデックスとして、ファイル <B> を表に格納して、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	] = <A> . read_csv ( <B> , index_col = <C> )
<A> からデータフレームをカンマ区切りで読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
<A> の <B> の値を昇順でソートし、 <A> に代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表 <A> 中の未記入の値を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
データフレーム <A> の <B> をドロップ	<A> . drop ( <B> , axis = 1 )	<A> . drop ( <B> , axis = 1 )
表 <A> の欠損	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、色を紫色とする	color = 'purple'	stacked = 'purple'
そこで、マーカーの形状の輪郭線は <A> である	markeredgewidth = <A>	alpha = <A>
<B> のバリューを <A> にする	<A> = <B> . values	<B> <A> = values
表データ <A> の <B> をドロップし、 <A> とする	<A> = <A> . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
表 <A> 中の <B> に重複はあるか表示する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
表 <A> を <B> を軸に並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表 <A> の <B> の NaN をカラム <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
データフレーム <A> の <B> の名前を <C> に変更し、インプレースする	<A> . rename ( columns = { <B> : <C> } , inplace = True )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
表データ <A> 内の未入力の値を直前の行の値で補い、再代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> ( データフレーム ) の列 <B> と列 <C> を降順に並び替える	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	sort_values <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> の相関係数を表示する	<A> . corr ( )	<A> . corr ( )
<A> の列 <B> の NaN を <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
表データ <B> 全体をインデックスでソートして、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
左側のデータのインデックスと右側のデータの <A> をキーとして 2 つのデータを一つにまとめる	pd . merge ( df1 , df2 , left_index = True , right_on = <A> )	left_index . merge ( df1 , df2 , left_index = True , right_on = <A> )
表 <A> 内の重複する行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
エクセルファイル <A> からデータフレームに読み込む	pd . read_excel ( <A> )	read_excel sheet_name = <A> )
<B> の未入力の値を <C> として、 <A> とする	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
<A> ( データフレーム ) の <B> を小から大へとソート	<A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> の <B> の値を昇順で並び替え、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
重複する行を削除	df . drop_duplicates ( )	kind = df . drop_duplicates ( )
データフレーム <A> の欠損を <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	<A> . fillna ( <A> . mean ( ) )
そこで、マーカーの形のエッジ色はグレーを使う	markeredgecolor = 'gray'	activation = 'gray'
表 <A> の重複している行をドロップして、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
そこで、グラフとして円グラフを用いる	kind = 'pie'	kind = 'pie'
分割数を <C> 、ビンのラベルをインデックスとして、データフレーム <A> の <B> コラムをビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> 内の重複を確認	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表データ <B> を位置で並び替えて、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
同じ x 軸と y 軸で <A> <B> と表データ <A> <C> と <A> <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーのエッジ色はシアンを使う	markeredgecolor = 'cyan'	end = 'cyan'
データフレーム <A> 内の重複要素がある行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> ( データフレーム ) の <B> カラムを小から大へと並び替えて、 <A> にする	<A> = <A> . sort_values ( <B> )	markeredgewidth = <A> . sort_values ( <B> )
表データ <A> の <C> の時間を調べて、  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . hour	range = ( <A> [ <B> , <C> ] )
凡例をグラフ要素に表示する	plt . legend ( )	plt . legend ( )
<A> 全体を位置を元にソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> 内の重複している行を落として、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表データ <A> 内の未記入の値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム ( <A> ) のカラム <C> をグラフの <B> 軸、 <E> を <D> 軸として、散布図をプロットする	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )	markeredgewidth = <A> . plot ( <B> , <C> , <D> = <E> )
表 <A> 内の表属性 <B> に重複があるかどうか調べる	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> 番目まで列が表示できるように変更する	pd . set_option ( 'display.max_columns' , <A> )	pd . set_option ( 'display.max_columns' , <A> )
<A> を <B> という名前で書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
データフレーム <A> の未入力の値を直前の行の値で補って、置き換える	<A> = <A> . fillna ( method = 'ffill' )	<A> . fillna ( method = 'ffill' , inplace = True )
<C> を項目名として、 <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表データ <A> の <B> カラムの名前を <C> に変更して、置き換える	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
表データ <A> カラム <B> と <A> <C> と <A> カラム <D> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <B> と表データ <C> を縦方向に一つにまとめ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<B> <A> = pd . concat ( [ <C> ] )
データフレーム <A> の <B> と <C> を落とし、再代入する	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
データフレーム <A> の <B> をダミー変数化して、 <A> とする	<A> = pd . get_dummies ( <A> [ <B> ] )	= pd . get_dummies ( <A> [ <B> ] )
表データ <A> のカラム <B> と <C> の相関係数を見る	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
<A> をインデックスでソートして、 <A> にする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
<A> 中の未記入の値を <B> に置換し、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
一番左の列をインデックスとして、 <A> から読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
表データ <A> 中の未入力の値がある行を消して、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
データフレーム <B> 中の未入力の値を含む行をドロップを <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
リスト <B> を <A> 、 <D> を <C> 表属性として、新しいデータフレームを作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	range = pd . DataFrame ( { <A> : <B> , <C> : <D> } )
そこで、グラフの種類は密度推定図を使う	kind = 'density'	kind = 'density'
<A> から重複している行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表データ <A> の欠損値がある行を削除を <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <A> <B> コラムと <A> <C> と <A> <D> のボックスチャートを一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> 中の重複する行を落として、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
そこで、マーカーの色を紫色とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
表 <A> の <B> 行目の <C> カラムを得る	<A> . iloc [ <B> ] [ <C> ]	X [ <A> ] [ <B> ] [ <C> ]
そこで、六角形のマーカーの形状を用いる	marker = 'h'	marker = 'h'
<B> 表属性を順番になるようにソートを <A> にする	<A> = df . sort_values ( <B> )	= <A> . sort_values ( <B> )
データフレーム <A> の <B> 行から末尾まで	<A> [ <B> : ]	<A> [ <B> : ]
重複した最後の行を残して <A> ( データフレーム ) 中の重複した行をドロップし、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	markeredgewidth = <A> . drop_duplicates ( keep = False )
データフレーム ( <A> ) の <B> を横軸、 <D> を <C> 座標として、散布図をプロットする	<A> . plot ( kind = 'scatter' , x = <B> , <C> = <D> )	<A> . plot ( kind = 'scatter' , x = <B> , <C> = <D> )
<B> 列と <C> 列を大きい順にソートを <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<B> ( データフレーム ) のカラム <C> とカラム <D> を大から小へと並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> 全体を <B> で並び替える	<A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> )
表 <A> 内の <B> に重複がある行を消して、置き換える	<A> . drop_duplicates ( subset = <B> , inplace = True )	sns = <A> . drop_duplicates ( subset = <B> )
データフレーム <A> 中の欠損値を <B> で埋め、 <A> に代入する	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
そこで、目印の色として黄緑色を使用する	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
<A> 列に重複はあるのか表示してみる	df . duplicated ( subset = <A> )	sklearn . duplicated ( subset = <A> )
表 <A> を位置に基づいてソートする	<A> . sort_index ( )	<A> . sort_index ( )
表データ <A> <B> と <A> <C> と <A> <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> の <B> コラムとデータフレーム <A> の <C> コラムとデータフレーム <A> の <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の欠損を含む行を消して、 <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <B> の列の名前を <C> から <D> に、 <E> から <F> に変更して、 <A> に代入する	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	markeredgewidth = <B> : <C> , <D> : <E> , <E> } )
<A> の中の欠損を削除する	<A> . dropna ( )	<A> . dropna ( )
データフレーム <B> から重複する行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> 全体を <B> の値に沿ってソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表 <A> の中の未記入の値が存在する行を削除し、 <A> にする	<A> = <A> . dropna ( )	= <A> . dropna ( )
表 <A> <B> と <A> 表属性 <C> とデータフレーム <A> <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> を表属性 <B> の値を元に並び替え、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
そこで、目印はアスタリスク	marker = '*'	marker = '*'
データフレーム <B> と <C> を横方向に連結して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] , axis = 1 )	<A> = pd . merge ( <B> , <C> )
データフレーム <A> を位置でソートして、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> の <B> の年	<A> [ <B> ] . dt . year	year <A> [ <B> ] . dt . year
表データ <A> の <B> コラムを昇順に並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
表データ <A> の <B> の欠損値を <B> コラムの最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
表データ <B> にある <C> を欠損値に置き換え、 <A> にする	<A> = <B> . replace ( <C> , np . nan )	= <A> . replace ( <B> , <C> , np . nan )
データフレームを <C> 区切りで <B> ファイル名から読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表 <A> の未入力の値を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	markeredgewidth = <A> . fillna ( <B> )
表データ <A> の <B> の名前を <C> にリネームして、再代入する	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
<A> の <B> と <A> 表の <C> と表 <A> の <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グラフ種類としてカーネル密度推定を使う	kind = 'kde'	kind = 'kde'
CSV ファイル <A> ( ファイル名 ) をデータフレームに格納する	pd . read_csv ( <A> )	. pd . read_csv ( <A> )
<B> 区切りで表として CSV ファイル <A> ( ファイル名 ) を読む	pd . read_csv ( <A> , sep = <B> )	<A> . pd . read_csv ( <B> , sep = ',' )
同じ軸で表データ <A> の <B> と <A> の <C> カラムと <A> 表データの <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> を軸に昇順でソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
コラム <A> を項目名としてデータを結合する	pd . merge ( df1 , df2 , on = <A> )	pd . merge ( df1 , df2 , on = <A> )
同じ軸のセットで <A> の <B> と <C> と <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> という列を削除し、再代入する	df = df . drop ( <A> , axis = 1 )	= df . drop ( <A> , axis = 1 )
表データ <A> 全体を位置を軸に並び替え、再代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <A> の未記入の値を <B> に置き換え、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
そこで、マーカーの形として丸を使う	marker = 'o'	marker = 'o'
表 <A> 中の表属性 <B> と <C> に重複はあるのかどうか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> 中の <B> と <C> コラムに重複は存在するのか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> と表データ <B> を縦にくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
同じグラフ内で <A> <B> と <A> <C> とデータフレーム <A> <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表属性 <A> と <B> に重複はあるのかどうか調べる	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
同じ軸のセットで表データ <A> の <B> と <C> と <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、打点の色は水色を使う	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
<A> <B> と <A> データフレーム <C> とデータフレーム <A> 列 <D> の箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> を昇順にし、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表 <B> の <C> 表属性と <D> を値が大きい順にソートして、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> の未記入の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、文字コードは shift - jis とする	encoding = 'shift_jis'	end = 'shift_jis'
データフレーム <B> の欠損を <B> の平均値で埋め、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
表データ <A> 内の欠損を <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	<A> . fillna ( <A> . mean ( ) )
そこで、目印の輪郭色はグレーを用いる	markeredgecolor = 'gray'	markeredgewidth = 'gray'
そこで、色はシアンで表示する	color = 'cyan'	orientation = 'cyan'
同じ x 軸と y 軸で <A> の <B> と <A> の <C> と <A> データフレームの <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレームとして <C> 区切りで <B> ファイルパスを読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
データフレーム <B> 全体を <C> コラムでソートを <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、打点のエッジ色はマゼンタを用いる	markeredgecolor = 'magenta'	activation = 'magenta'
区間を <B> として <A> の度数分布図を描画する	plt . hist ( <A> , bins = <B> )	kind = 'hist'
表データ <A> のカラム名を <B> から <C> に、 <D> から <E> にリネームし、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	markeredgewidth = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<B> をソートを <A> とする	<A> = df . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> の表属性 <B> と <A> 表の <C> 表属性と <A> の <D> 表属性の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の欠損の個数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
インデックスと <C> を項目名としてデータフレーム <A> と <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表 <A> 内の未記入の値を <B> に置換して、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
表データ <A> と <B> を横方向に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
そこで、線は破線と点線とする	linestyle = 'dashbot'	start = 'dashbot'
<A> ( データフレーム ) の <B> と <C> を降順にソートを <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表属性 <A> に重複がある行を drop して、置き換える	df . drop_duplicates ( subset = <A> , inplace = True )	color = df . drop_duplicates ( subset = <A> )
同じ軸で <A> データフレーム <B> と <A> データフレーム <C> と <A> データフレーム <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の未入力の値を <B> として、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表データ <A> <B> と <A> <C> カラムと <A> カラム <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の重複している行を消す	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
そこで、円の目印を使用する	marker = 'o'	marker = 'o'
今までの図を <A> というファイルに出力する	plt . savefig ( <A> )	plt . savefig ( <A> )
<B> のコラム <E> について、 <C> をインデックス、コラム <D> をコラムとしたピボットテーブルを作成し、 <A> に代入する	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
表 <A> において、 <B> からボックスチャートを描画する	plt . boxplot ( <A> [ <B> ] )	boxplot plt . boxplot ( <A> [ <B> ] )
データフレーム <A> の <B> のデータ列	<A> [ <B> ]	alpha <A> [ <B> ]
表データ <A> のコラム <B> を箱髭図に描画する	plt . boxplot ( <A> [ <B> ] )	pd . plt ( <A> [ <B> ] )
表データ <A> のカラム <B> と表データ <A> の <C> と <A> 表データの <D> カラムの箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムをヒストグラムにする	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
データフレーム <B> と <C> データフレームをマージして、 <A> に代入する	<A> = pd . merge ( <B> , <C> )	sep = <B> , <C> )
そこで、面グラフをグラフの種類にする	kind = 'area'	kind = 'area'
データフレーム <A> 内に存在する <B> を欠損値に置換して、置き換える	<A> = <A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan , inplace = True )
<A> の中の <B> 列と <C> に重複があるのかどうか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> のインデックスをソートを <A> にする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表データ <A> 内の未入力の値の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 中の <B> と <C> に重複があるのかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の <B> カラムをグループ化して、値ごとのデータ件数	<A> . groupby ( <B> ) . size ( )	df1 . groupby ( <A> [ <B> ] ) . size ( )
<A> 全体を <B> の値でソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> のカラム <B> ごとに <C> の平均値を計算する	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<B> <A> . groupby ( [ <C> ] ) [ <D> ] . mean ( )
同じグラフ内で <A> 表データの <B> と <C> と <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の列それぞれに存在する <B> の個数の合計を求める	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表データ <B> の全ての列で重複している行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	X = <B> . drop_duplicates ( )
そこで、黄緑色を目印のエッジ色にする	markeredgecolor = 'greenyellow'	'greenyellow' = 'greenyellow'
表データ <B> を位置を元に昇順でソートを <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <A> 中のカラム <B> と <C> カラムに重複があるかどうか表示してみる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
境界値を <C> リストとして、 <A> 表データの <B> を分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
表データを <A> から読む	pd . read_csv ( <A> )	markeredgecolor = pd . read_csv ( <A> )
そこで、目印のエッジ色は黄緑色を用いる	markeredgecolor = 'greenyellow'	end = 'greenyellow'
データフレーム <A> の <B> コラムをソートを <A> とする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
フォーマットを指定して、 <A> のコラム <B> を年月日の形式に変換する	pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )	markeredgecolor = pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )
<B> というエクセルの全てのシートをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
そこで、マーカーの種類は＊にする	marker = '*'	marker = '*'
<B> の表属性 <C> を四分位数ごとでビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , 4 )	] = pd . qcut ( <B> [ <C> ] , 4 )
データフレーム <A> 中の未入力の値の数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 内の NaN の数を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> の行名を <B> から <C> に変更する	<A> . rename ( index = { <B> : <C> } )	<B> <A> . rename ( columns = { <C> : <D> } )
<B> ファイルに <A> を保存する	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
表データ <A> と <B> データフレームを縦方向に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
最大繰り返しは <A> にする	max_iter = <A>	max_iter = <A>
表データ <A> の <B> を柱状グラフでプロットする	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
そこで、密度推定を種類にする	kind = 'density'	kind = 'density'
<A> の <B> カラムと <C> の相関を確認する	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
同じ軸で <A> の <B> とデータフレーム <A> のカラム <C> と <A> の <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> と表属性 <C> を削除する	<A> . drop ( [ <B> , <C> ] , axis = 1 )	axis = <A> . drop ( [ <B> , <C> ] , axis = 1 )
表データ <A> の表属性 <B> の曜日の数値型を表示する	<A> [ <B> ] . dt . dayofweek	<A> [ <B> ] . dt . dayofweek
<A> の表属性 <B> についての箱ひげ図を作図する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
<A> の <B> 列と列 <C> を逆順に並び替え、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	, <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
同じ軸で <A> のカラム <B> と <A> 表データの <C> カラムと <A> 表データのカラム <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
分割数を <C> として、 <A> のコラム <B> を要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
表 <A> と <B> を縦に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
エクセル <A> を読み込む	pd . read_excel ( <A> )	pd . read_excel ( <A> )
先頭の列をインデックスに設定して、ファイル <A> を読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
そこで、グラフ種類は六角ビニングを使う	kind = 'hexbin'	kind = 'hexbin'
そこで、マーカーの形の大きさとして <A> を用いる	markersize = <A>	markeredgewidth = <A>
データフレーム <A> の表属性 <B> と <C> を大きい順にソートを <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
データフレーム <A> の <B> と <C> に重複があるのかどうか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 全体を <B> 列の値に基づいてソートし、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<B> 番目の列を位置に設定して、ファイル名 <A> からデータフレームとを読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
データフレーム <A> と <B> 表データを横にくっつける	pd . merge ( <A> , <B> )	if <A> . sort_values ( [ <B> ] , ascending = False )
データフレーム <B> の欠損値を含む行を削除を <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
そこで、マーカーの色として赤を用いる	markerfacecolor = 'red'	markersize = 'red'
同じ x 軸と y 軸で表データ <A> の <B> 表属性と <A> の <C> と <A> 表データの <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムと <A> 表の <C> と <A> 表の <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ファイル名 <A> を表として読む	pd . read_csv ( <A> )	pd . read_csv ( <A> )
<A> と <B> 表属性に重複はあるのかどうか見る	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表データ <A> の <B> についてのヒストグラムを描画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
そこで、文字コードはシフト JIS を使う	encoding = 'shift_jis'	end = 'shift_jis'
データフレーム <A> の <B> を昇順に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
そこで、種類はカーネル密度推定にする	kind = 'kde'	kind = 'kde'
<A> の <B> と <C> と <D> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーを菱形とする	marker = 'D'	marker = 'D'
表 <A> 中のそれぞれのカラムにある <B> の個数の合計値を表示する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> というエクセルデータのシート名 <B> を表データに格納する	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
重複している行を落として、 <A> にする	<A> = df . drop_duplicates ( )	= <A> . drop_duplicates ( )
エクセル <A> からデータフレームに読み込む	pd . read_excel ( <A> )	sheet_name = pd . read_excel ( <A> )
列番号 <B> を位置として、 <A> をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表 <B> の重複する行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <A> の中の <B> に重複が存在するのかを確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
そこで、ビンは <A> とする	bins = <A>	start = <A>
表データ <A> の全ての列の重複する値がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表データ <A> の <B> 内の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
表データ <A> 中の <B> に重複がある行をドロップする	<A> . drop_duplicates ( subset = <B> )	<A> . drop_duplicates ( subset = <B> )
<A> の <B> コラムを昇順に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> と表属性 <B> を降順にソート	df . sort_values ( [ <A> , <B> ] , ascending = False )	<A> . sort_values ( [ <B> , ascending = False )
そこで、文字コードは shift - jis	encoding = 'shift_jis'	end = 'shift_jis'
データフレーム <A> を <B> として CSV に書き出す	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
同じグラフ内で <A> 表の <B> 列と <C> と <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の中に重複があるかどうか見る	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表データ <A> の中の未入力の値の合計を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> 中の欠損値を <B> に置換して、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
<A> 列と <B> を値が大きい順にソートする	df . sort_values ( [ <A> , <B> ] , ascending = False )	ascending = df . sort_values ( [ <A> , <B> ] , ascending = False )
同じグラフ内で表データ <A> の <B> と <A> の <C> と <A> の <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の NaN を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
同じグラフ内で <A> 表データの <B> と <C> コラムとコラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> から <B> という名前でエクセルファイルにする	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
<B> 内の <C> コラムに重複がある行を消し、 <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
データフレーム <A> の列 <B> と <C> を降順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> 内の欠損をドロップし、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
重複している最後の行を残して <A> ( データフレーム ) の中の重複している行を落とし、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	<B> <A> . drop_duplicates ( keep = False , inplace = True )
<B> を <A> 、 <D> リストを <C> 表属性として、新しい表データを作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	range = pd . DataFrame ( { <A> : <B> , <C> : <D> } )
表データ <A> の列 <C> に <D> を適用して、 <B> にする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	<B> <A> [ <C> ] = <A> [ <D> ] . map ( <D> )
表 <A> の <B> と <C> コラムとコラム <D> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	linestyle = <A> [ <B> , <C> , <D> ] ] )
データフレーム <A> 中の表属性 <B> に重複があるのかチェックを確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
そこで、目印の輪郭色として黄緑色を使用する	markeredgecolor = 'greenyellow'	'greenyellow' = 'greenyellow'
表データ <A> の位置をリセットする	<A> . reset_index ( )	<A> . reset_index ( )
コラム <B> と <C> を降順に並び替えて、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> の <B> カラムのデータ列を得る	<A> [ <B> ]	<A> [ <B> ]
データフレーム <A> を <B> の値に沿ってソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
表データ <A> の元の位置を振り直す	<A> . reset_index ( drop = True )	X = <A> . reset_index ( drop = True )
x 軸を <A> とした <B> の縦向き棒グラフを描く	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
表データ <A> の列の名前を <B> から <C> にリネームして、再代入する	<A> = <A> . rename ( columns = { <B> : <C> } )	<B> <A> = <A> . rename ( columns = { <C> : <D> } )
<A> 中の NaN を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
データフレーム df の列 <A> のデータ列を繰り返す	for name in data [ <A> ] :	if <A> . duplicated ( ) :
表 <A> 全体を位置に沿ってソートする	<A> . sort_index ( )	<A> . sort_index ( )
そこで、四角形の目印を表示する	marker = 's'	marker = 's'
表データ <B> を位置に基づいてソートし、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> 全体をインデックスを軸に並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
そこで、目印の色を紫とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
表データ <A> 内 ] [ で重複した行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
同じ軸のセットで <A> の <B> とデータフレーム <A> の <C> 列と <A> の <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> 中の欠損値を消して、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <A> と表 <B> を縦向きにくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
データフレーム <A> 中の列に存在する <B> の個数の合計を求める	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
左側のデータの位置と右側のデータの <D> をキーとして、 <B> と表 <C> を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
表データ <A> から重複している値がある行を削除し、インプレースする	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
表データ <A> のカテゴリ変数を one - hot 表現にする	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
<B> の <C> カラムの名前を <D> に変更し、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
そこで、マーカーの形の色として青を用いる	markerfacecolor = 'blue'	'blue' = 'blue'
表 <A> の <B> と <A> の <C> と <A> 表データの <D> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と <B> を逆順に並び替えて、インプレースする	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
データフレーム <A> の未記入の値の合計を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
ビン数を <C> 、ビンの名前をリスト <D> として、 <A> の <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	<A> = pd . cut ( <B> [ <C> ] , <D> )
カンマ区切りでファイル名 <A> をデータフレームとして読み込む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
<A> の <B> 列を軸に並び替えて、 <A> に代入する	<A> = <A> . sort_values ( <B> )	bins = <A> . sort_values ( <B> )
データフレーム <A> の欠損値を平均値で穴埋めして置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
データフレーム <A> 内の <B> と <C> に重複があるのかどうか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> ( データフレーム ) の <B> コラムと <C> を降順にし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、グラフは面グラフにする	kind = 'area'	kind = 'area'
<A> 内の未入力の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> を表属性 <B> で並べ直し、 <A> にする	<A> = <A> . sort_values ( by = <B> )	= <A> . sort_values ( by = <B> )
表データ <A> の先頭の 5 行	<A> . head ( )	<A> . head ( )
データフレーム <B> と表 <C> を横方向にくっつけ、 <A> とする	<A> = pd . merge ( <B> , <C> )	= pd . merge ( <A> , <B> , on = <C> )
表 <A> のカラム <B> と <A> の <C> と <A> の <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の中の <B> と <C> に重複はあるのか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <B> の NaN を含む行をドロップを <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
重複した最後の行を残して <B> ( データフレーム ) の重複している行をドロップを <A> に代入する	<A> = <B> . drop_duplicates ( keep = False )	fontsize = <B> . drop_duplicates ( keep = False )
データフレーム <A> のコラム <B> と <A> の <C> コラムと <A> 表の <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
横軸の名称を <A> から <B> 、 <C> 、 <D> に変える	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	sns = plt . pairplot ( <A> [ <B> , <C> , <D> ] )
表 <B> 中の重複している行を落として、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<B> の <C> と表属性 <D> を降順にソートを <A> に代入する	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表データ <A> をエクセルファイル <B> という名前で書き出す	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
ピボット操作で表データ <A> の行を列に変更する	<A> . unstack ( )	df1 . unstack ( <A> )
データフレーム <A> 内の <B> を未記入の値に置換し、未記入の値が存在する行を落とす	<A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> 中の未記入の値を <B> に置き換える	<A> . fillna ( <B> )	X . fillna ( <A> [ <B> ] )
表データ <B> を位置を元に昇順でソートし、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
一番左の列を位置に、 <B> を読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	] = <A> . read_csv ( <B> , index_col = 0 )
表データ <A> 内の重複する行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> の <B> カラムのデータ列	<A> [ <B> ]	alpha <A> [ <B> ]
<A> 内の <B> に重複は存在するのか確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> についての箱ひげ図を作画する	plt . boxplot ( <A> )	plt . boxplot ( <A> )
<A> という名前のエクセルの <B> を読み込む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = <A> . read_excel ( <B> )
そこで、マーカーの形の輪郭色として赤を使用する	markeredgecolor = 'red'	markeredgewidth = 'red'
そこで、円グラフ上に小数点以下 2 桁までのパーセント表記で構成割合を出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
<A> をインデックスを元に昇順で並び替え、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
そこで、目印の色を黄緑色とする	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
<A> の <B> をグループ化して、値ごとのデータ数	<A> . groupby ( <B> ) . size ( )	<A> . groupby ( <B> ) . size ( )
データフレーム <A> 内 ] [ で重複する行の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> 全体を位置に沿ってソートし、 <A> にする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<A> 中のカラム <B> に重複は存在するのか	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> 中の NaN を削除し、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
<A> 中の NaN がある行を落として、インプレースする	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
データフレーム <A> から <B> という名前でエクセルファイルにする	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
表 <A> の <B> 列ごとに <C> 列の平均	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
左側のデータの位置と右側のデータの表属性 <C> をキーとして、 <A> 表データと表データ <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
左側のデータの位置と右側のデータの表属性 <D> をキーとして、表 <B> と表 <C> を一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <A> 全体をインデックスを元に昇順でソートする	<A> . sort_index ( )	ascending = <A> . sort_index ( )
データフレーム <A> をファイル名 <B> という名前にして CSV ファイルに書き出す	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
表 <A> 中の未記入の値を <B> に置き換えて、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
データフレーム <A> 全体を表属性 <B> に基づいてソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
表データ <A> の <B> と表属性 <C> を値が大きい順にソートし、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<C> 番目の列をインデックスと設定して、ファイル <B> を読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
左外部結合で <A> と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , how = 'left' )	'left' = <A> . merge ( <B> , how = 'left' )
表データ <A> の <C> の中の前後の行の差分を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<B> <A> [ <C> ] = <A> [ <D> ] . diff ( periods = 1 )
重複している最後の行を残して <A> ( データフレーム ) の中の重複している行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	markeredgewidth = <A> . drop_duplicates ( keep = False )
表 <A> の末尾 5 行を見る	<A> . tail ( )	plt . tail ( <A> )
表データ <A> の未入力の値を含む行を削除する	<A> . dropna ( )	<A> . dropna ( )
データフレーム <A> 内の <B> コラムと <C> コラムに重複はあるかどうか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> <B> と <A> <C> と <A> 表データ <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> のカラム <B> の未記入の値を <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
データフレーム <A> を <B> に文字化けしないように保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	'utf_8_sig' <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
表データ <A> の <B> の名前を <C> に、 <D> の名前を <E> に変更する	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	sns . rename ( columns = { <B> : <C> , <D> : <E> } )
ビン数を <D> として、 <B> の <C> コラムを分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<A> = pd . cut ( <B> [ <C> ] , <D> )
そこで、箱ひげ図を使う	kind = 'box'	marker = 'D'
<A> を順にする	df . sort_values ( <A> )	sort_values df = df . sort_values ( <A> )
同じグラフ内で <A> の <B> とデータフレーム <A> の <C> と <A> データフレームの <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> 位置の名前を <C> に変更し、 <A> にする	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
表 <A> の <B> 位置の名前を <C> に変更する	<A> . rename ( index = { <B> : <C> } )	df1 <A> . rename ( columns = { <B> : <C> } )
<A> ( データフレーム ) の <B> と <C> を大から小へと並び替え、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> の <B> の名前を <C> に、 <D> の名前を <E> に変更し、再代入する	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<B> <A> = <A> . rename ( columns = { <C> : <D> , <E> : <E> } )
表データ <A> の <B> に重複があるのか確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
データフレーム <A> 中の列それぞれにある <B> の個数の合計値を算出する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> の中の <B> に重複はあるかチェックする	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> ファイルパスから表データをカンマ区切りで読む	pd . read_csv ( <A> , sep = ',' )	read_csv pd . read_csv ( <A> , sep = ',' )
データフレーム <A> 全体を位置を軸にソートして、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> を位置で並び替え、再代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
そこで、色は黄緑を用いる	color = 'greenyellow'	color = 'greenyellow'
表 <A> 中の列に存在する <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> の <B> を度数分布図にする	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
データフレーム <A> 全体をインデックスを軸にソートし、置き換える	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<A> ( データフレーム ) の <B> 列をダミー変数に変換する	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
表データ <A> 内の欠損値を <B> に置き換え、インプレースする	<A> . fillna ( <B> , inplace = True )	<B> <A> . fillna ( <B> , inplace = True )
表データ <A> の未入力の値を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	markeredgewidth = <A> . fillna ( <B> )
表 <A> の <B> と <C> に重複はあるかどうかチェックする	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の列 <B> と表 <A> の <C> 列と <A> 表の <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の全ての列で重複している行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<A> をヒストグラムで描く	plt . hist ( <A> )	plt . hist ( <A> )
表データ <B> の重複している値がある行を取り除いて、 <A> とする	<A> = <B> . drop_duplicates ( )	= <B> . drop_duplicates ( )
エクセルファイル <B> の <C> から読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
x 座標を <A> として、 <B> の鉛直棒グラフをプロットする	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
表を <B> から <C> 区切りで読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	= pd . read_csv ( <B> , sep = <C> )
表 <B> 内の欠損値を <B> 表の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
同じグラフ内で <A> の <B> と <C> カラムと <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の NaN の数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の <B> に重複があるか	<A> . duplicated ( subset = <B> )	sklearn . duplicated ( subset = <B> )
そこで、○のマーカーの形を用いる	marker = 'o'	marker = 'o'
<A> の表属性 <B> と <C> と <D> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> を one - hot 表現にし、 <A> にする	<A> = pd . get_dummies ( <A> )	<A> = pd . get_dummies ( <A> )
そこで、種類はヒストグラムを使う	kind = 'hist'	kind = 'hist'
表 <A> の <B> の名前を <C> に変更する	<A> . rename ( columns = { <B> : <C> } )	'words' <A> . rename ( columns = { <B> : <C> } )
同じ軸で <A> 表 <B> カラムと表 <A> <C> カラムと <A> <D> カラムをボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ軸のセットで <A> の <B> と表属性 <C> と <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> のコラム <C> を削除し、 <A> に代入する	<A> = <B> . drop ( <C> , axis = 1 )	<A> = <B> . drop ( <C> , axis = 1 )
表 <A> 内のそれぞれの列にある <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> の <B> についての最頻値を取得する	<A> [ <B> ] . mode ( )	<B> <A> [ <B> ] . mode ( ) )
そこで、打点としてひし形を使用する	marker = 'D'	marker = 'D'
データフレーム <A> の各行に重複があるかどうかを確認する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
データフレーム <A> 内の欠損値が存在する行をドロップを <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <A> の重複した ] [ データ	<A> [ <A> . duplicated ( ) ]	[ <A> . duplicated ( ) ]
同じ軸でデータフレーム <A> の <B> と <A> の <C> と <A> の <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ軸で <A> <B> と <A> 表データ <C> と表データ <A> カラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> から重複する行をドロップし、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表データ <A> の <B> のユニークな要素の個数を調べる	<A> [ <B> ] . nunique ( )	<A> [ <B> ] . nunique ( )
<A> の未記入の値がある行をドロップし、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
表 <A> のインデックス名を <B> から <C> にリネームして、置き換える	<A> . rename ( index = { <B> : <C> } , inplace = True )	<A> . rename ( index = { <B> : <C> } , inplace = True )
棒グラフの位置を真ん中として、 <A> 軸を <A> とした <B> の棒グラフをプロットする	plt . bar ( <A> , <B> , align = 'center' )	plt . barh ( <A> , <B> , align = 'center' )
表データ <A> の <B> ごとに <C> の平均	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	] <A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
<A> 中の重複した行を削除し、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> と <B> を縦向きに連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> のコラム <C> の月を調べて、  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . month	<A> [ <B> ] = <A> [ <C> ] . dt . month
全結合で <B> 表と <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	, <A> = pd . merge ( <B> , <C> , how = 'outer' )
そこで、マーカーをひし形とする	marker = 'D'	marker = 'D'
<A> のコラム <B> と <C> コラムを落として、 <A> とする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
表 <A> 内 ] [ で重複する行の合計を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> の未記入の値を直前の行の値で埋めて、置き換える	<A> = <A> . fillna ( method = 'ffill' )	linestyle . fillna ( method = 'ffill' , inplace = True )
表 <A> の中の欠損値を直前の行の値で埋め、 <A> に代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
データフレーム <A> の未記入の値の個数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 中の <B> を未入力の値に置換し、未入力の値が存在する行を削除して、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<B> <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> 中の <B> を未入力の値に置換し、未入力の値がある行を削除	<A> . replace ( <B> , np . nan ) . dropna ( )	dropna = <A> . replace ( <B> , np . nan ) . dropna ( )
<B> の NaN が存在する行を削除して、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> 中の <B> 列と <C> に重複があるのかどうか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> の <B> と表 <A> の <C> と <A> 表の <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> をインデックスを元に昇順で並び替えて、 <A> とする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表データ <A> の <B> コラムと <C> コラムと <D> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> を昇順で並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	sort_values <A> . sort_values ( <B> , inplace = True )
<A> 全体を位置を軸に並び替えて、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表データを <C> 区切りでファイル名 <B> から読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表データ <A> の中の <B> 列に重複があるかどうか確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
同じ軸のセットで <A> <B> 列と <A> <C> と表データ <A> 列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> の <C> を未入力の値に置換し、未入力の値が存在する行を落とし、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
そこで、 <A> を開始位置とする	start = <A>	range = ( <A> )
表 <A> の <B> コラムと <C> を値が大きい順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<B> と <C> カラムを降順にして、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	] = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> に重複があるかどうか確認する	df . duplicated ( subset = <A> )	sklearn . duplicated ( subset = <A> )
表 <A> を <B> の値で並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	<B> <A> . sort_values ( <B> , inplace = True )
表 <B> をコラム <C> に沿ってソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
データフレーム <A> の <B> を箱髭図に描画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
<A> と <B> データフレームに対して、 <C> をキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
先頭の列を位置に設定して、 <B> を表に格納して、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
データフレーム <A> の <B> と <C> を降順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> の欠損を <B> で埋めて、 <A> とする	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
<A> のカラム <C> に <D> を適用して、新しく <B> にする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	map = <A> [ <B> ] . map ( <C> )
<A> の <B> の NaN を <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
表 <A> の <C> の秒を  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . second	range = <A> [ <B> ] . dt <C> )
<B> ( データフレーム ) の <C> と <D> を値が大きい順にソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	= <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> の <B> と <C> と <D> 列について関係性を一度に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	pd . sns ( <A> [ [ <B> , <C> , <D> ] ] )
<A> を <B> をカラム名としてデータフレームに変換する	pd . pd . DataFrame ( <A> , columns = <B> )	<A> . pd . DataFrame ( <B> , columns = [ 'label' ] )
表 <A> の <B> カラムの NaN をカラム <B> の平均値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
表 <A> 中の列それぞれにある <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表 <A> 内の欠損を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <B> の欠損値を削除を <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表データ <A> 内の <B> に重複がある行を落とす	<A> . drop_duplicates ( subset = <B> )	sns . drop_duplicates ( subset = <A> )
データフレーム <A> <B> コラムとデータフレーム <A> <C> コラムと <A> データフレーム <D> コラムについての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> の曜日	<A> [ <B> ] . dt . weekday_name	<B> <A> [ <B> ] . dt . weekday_name
円グラフを円にする	plt . axis ( 'equal' )	plt . axis ( 'equal' )
データフレーム <B> と表 <C> を縦向きにくっつけ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
データフレーム <A> の列 <B> と <C> の相関	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
表 <A> の <C> 表属性の分を見、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . minute	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中の未記入の値の合計を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> 中にある <B> を未記入の値とし、置き換える	<A> = <A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan , inplace = True )
データフレーム <B> 中の <C> を欠損値に置換し、欠損値がある行を削除し、 <A> に代入する	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )
表データ <A> の <B> と <C> 表属性と <D> 表属性についての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> と <A> の列 <C> と表データ <A> の <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> のコラム <B> とコラム <C> と <D> について関係性を一気に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
そこで、マーカーの形の輪郭色は紺色を用いる	markeredgecolor = 'navy'	markeredgewidth = 'navy'
表 <A> の全ての列の重複する値がある行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
カンマ区切りで表を CSV ファイル <A> ( ファイル名 ) から読む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
同じ軸のセットで <A> データフレームの <B> と表属性 <C> と <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 全体を <B> の値を元に並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
データフレーム <A> の <B> の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<A> の中の重複要素がある行をドロップして、再代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<B> の重複要素がある行をドロップして、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> と <B> を降順にソートして、置き換える	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	<A> . sort_values ( [ <B> , ascending = False , inplace = True )
列番号 <C> をインデックスにして、 <B> ファイル名をデータフレームとして読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表 <A> の <B> と <C> を削除し、置き換える	<A> . drop ( [ <B> , <C> ] , axis = 1 , inplace = True )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> 内の列それぞれにある <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
そこで、マーカーの形は四角を用いる	marker = 's'	marker = 's'
表データ <B> 全体を <C> 列を軸に並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> 中で重複した行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> の <B> 列と <C> と <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 全体を <B> の値を元にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
データフレームを <B> 区切りで <A> から読み込む	pd . read_csv ( <A> , sep = <B> )	<A> . read_csv ( <B> , sep = ',' )
表データ <A> の末尾の 5 行	<A> . tail ( )	<B> <A> . tail ( )
<A> と <B> の折れ線グラフを作画する	plt . plot ( <A> , <B> )	plot plt . plot ( <A> , <B> )
データフレーム <A> から重複する行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
<A> を <B> カラムを元に昇順でソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	sort_values <A> . sort_values ( <B> , inplace = True )
表 <A> の <B> コラムの曜日の数値型を確認する	<A> [ <B> ] . dt . dayofweek	dayofweek [ <A> [ <B> ] . dt . dayofweek
<B> というエクセルデータの <C> のシートを表データに格納して、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	] = <A> . read_excel ( <B> , sheet_name = <C> )
表データ <A> 全体を表属性 <B> の値で並び替え、置き換える	<A> = <A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> , inplace = True )
データフレーム <A> において、 <B> と <C> と <D> の関係性を一気に描写する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	linestyle = [ <A> [ <B> , <C> , <D> ] ] )
表データ <A> の欠損を直前の行の値で補って、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<A> . fillna ( method = 'ffill' , inplace = True )
<A> の中の <B> と <C> に重複があるかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<B> というエクセルをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> )
そこで、打点をクロスとする	marker = 'x'	marker = 'x'
<A> ( データフレーム ) のコラム <B> を順にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	markeredgewidth = <A> . sort_values ( <B> )
<A> の <B> カラムをヒストグラムで作図する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
<B> 中の重複している行をドロップを <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<B> 区切りで表データを CSV ファイル <A> ( ファイル名 ) から読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<A> をグラフの y 軸、 <B> を x 座標として、線グラフを描画する	plt . plot ( <A> , <B> )	plot plt . plot ( <A> , <B> )
そこで、マーカーの形状はアスタリスク	marker = '*'	marker = '*'
データフレーム <A> を <B> コラムを元に並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
一番左の列をインデックスに、 <A> ファイルパスをデータフレームとして読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
そこで、ひし形の目印を表示する	marker = 'D'	marker = 'D'
そこで、ヒストグラムをグラフとする	kind = 'hist'	kind = 'hist'
<B> ( データフレーム ) の列 <C> と列 <D> を逆順にし、 <A> に代入する	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表 <A> の未記入の値がある行を削除し、置き換える	<A> . dropna ( inplace = True )	df . dropna ( inplace = True )
<A> カラムを値が小さい順にして、置き換える	df = df . sort_values ( <A> )	<A> . sort_values ( inplace = True )
<A> カラムを昇順にして、置き換える	df . sort_values ( <A> , inplace = True )	df = df . sort_values ( <A> )
同じ軸で表データ <A> の <B> と <C> と <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレームとしてカンマ区切りで CSV ファイル <A> ( ファイル名 ) を読み込む	pd . read_csv ( <A> , sep = ',' )	read_csv sep = ',' )
列番号 <C> を位置にして、 <B> ファイル名から読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<B> というエクセルファイルの <C> を表データに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> に重複はあるのかどうか確認	<A> . duplicated ( )	df . duplicated ( subset = <A> )
表データ <A> の <B> カラムと <C> カラムの相関を調べる	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
データフレーム <A> に重複はあるかどうか確認	<A> . duplicated ( )	df . duplicated ( subset = <A> )
データフレーム <A> の列名を <B> から <C> にリネームして、置き換える	<A> . rename ( columns = { <B> : <C> } , inplace = True )	markerfacecolor = <A> . rename ( columns = { <B> : <C> } )
表 <A> 内の未入力の値を <B> に置換して、再代入する	<A> = <A> . fillna ( <B> )	markeredgewidth = <A> . fillna ( <B> )
データフレーム <A> 中の列に存在する <B> の個数の合計を調べる	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> の <B> と <C> 表属性と <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> に重複があるならば	if <A> . duplicated ( subset = <B> ) :	sns . duplicated ( subset = [ <A> , <B> ] ) :
x 座標のラベルを <A> とセットする	plt . xlabel ( <A> )	plt . xlabel ( <A> )
<A> を縦軸、 <B> を x 座標として、散布図を作画する	plt . scatter ( <A> , <B> )	plt . scatter ( <A> , <B> )
表データ <A> をカラム <B> を元に昇順でソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> 列を項目名としてデータを結合する	pd . merge ( df1 , df2 , on = <A> )	pd . merge ( df1 , df2 , on = <A> )
<A> を <B> 列の値に基づいてソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表 <A> の <B> と表データ <A> の <C> と <A> 表データの列 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> <B> と <A> <C> と表データ <A> <D> カラムについての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> を <B> コラムを元に並び替え、置き換える	<A> = <A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> , inplace = True )
<A> 内の <B> に重複がある行を削除する	<A> . drop_duplicates ( subset = <B> )	<A> . drop_duplicates ( subset = <B> )
<A> ( データフレーム ) の <B> とカラム <C> を降順にし、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
<A> 表属性に重複が存在するのか表示してみる	df . duplicated ( subset = <A> )	sklearn . duplicated ( subset = <A> )
<B> 内の重複している行を削除を <A> とする	<A> = <B> . drop_duplicates ( )	= <B> . drop_duplicates ( )
表データ <A> の表属性 <B> が <C> または <D> のデータを得る	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	[ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
表データ <A> 内の <B> を NaN に置換し、 NaN が存在する行をドロップ	<A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( )
<A> を <B> という名前でエクセルファイルに書き込む	<A> . to_excel ( <B> )	sklearn . to_excel ( <B> )
<B> を <C> 区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> の各行に重複があるかどうか検出する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
そこで、黄色をマーカーの輪郭色にする	markeredgecolor = 'yellow'	markersize = 'yellow'
表 <B> とデータフレーム <C> に対して、表属性 <D> をキーとしてデータを内部結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
表 <A> 中の重複している行を消し、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
ファイル <A> をデータフレームに格納する	pd . read_csv ( <A> )	. read_csv ( <A> )
表データ <A> のコラム <B> を落とし、置き換える	<A> . drop ( <B> , axis = 1 , inplace = True )	markerfacecolor = <A> . drop ( <B> , axis = 1 )
カンマ区切りで <B> から表データを読んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
データフレーム <A> の <B> を度数分布図でプロットする	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表 <A> の <C> の年を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . year	range = <A> [ <B> ] . dt . year <C> )
<A> 軸のラベルを <A> から <B> 、 <C> 、 <D> へ変更する	plt . yticks ( <A> , [ <B> , <C> , <D> ] )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
そこで、目印の大きさは <A> をする	markersize = <A>	markersize = <A>
そこで、マーカーの形状のエッジ色はマゼンタである	markeredgecolor = 'magenta'	markeredgewidth = 'magenta'
表データ <A> 中に重複はあるかチェックする	<A> . duplicated ( )	df . duplicated ( subset = <A> )
<A> コラムを値が小さい順にして、再代入する	df = df . sort_values ( <A> )	linestyle = df . sort_values ( <A> )
位置と <D> をキーとして <B> データフレームと <C> データフレームをマージして、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<B> <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> 中の <B> と <C> カラムに重複はあるのか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> ( データフレーム ) の <B> コラムと <C> コラムを降順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> のコラム <B> の欠損値を <B> の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
データフレーム <A> の末尾 5 行を確認する	<A> . tail ( )	plt . tail ( <A> )
表 <A> 中の未入力の値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、目印のエッジ色は黄緑を使う	markeredgecolor = 'greenyellow'	markeredgewidth = 'greenyellow'
表データ <A> の <B> のユニークな要素を見る	<A> [ <B> ] . unique ( )	plt . unique ( <A> [ <B> ] )
同じ x 軸と y 軸で <A> 表データの <B> と <A> の <C> 表属性と <A> の <D> 表属性をボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の NaN の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> 区切りでデータフレームを <A> から読み込む	pd . read_csv ( <A> , sep = <B> )	<A> . pd . read_csv ( <B> , sep = ',' )
<A> と <B> についての箱ひげ図を表示する	plt . boxplot ( [ <A> , <B> ] )	plt . boxplot ( [ <A> , <B> ] )
<A> の中の重複する行の数を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> の <B> と <C> に重複があるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> を <B> の値を元に昇順でソートし、再代入する	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表データ <A> <B> と <A> <C> と <A> 表列 <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体を <B> を元にソートを <A> にする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
そこで、 <A> を改行文字にする	end = <A>	bins = <A>
表データ <A> と <B> のどちらにも存在するデータでマージする	pd . merge ( <A> , <B> , how = 'outer' )	sns . merge ( <A> , <B> , how = 'outer' )
表 <A> の中の <B> を欠損に置換し、欠損がある行を削除	<A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> の <B> ごとに表属性 <C> の平均	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	plt . groupby ( <A> [ <B> ] ) [ <C> ] . mean ( )
カンマ区切りでデータフレームとしてファイル <A> を読み込む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
エクセルの <A> をデータフレームにする	pd . read_excel ( <A> )	read_excel sheet_name = <A> )
表データ <A> を表属性 <B> を元にソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
データフレーム <A> の中のカテゴリ変数をダミー変数に変換して、 <A> とする	<A> = pd . get_dummies ( <A> )	= pd . get_dummies ( <A> )
<B> のカラム名を <C> から <D> に変更して、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
表データ <A> 全体を位置を元に並び替え、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<A> の中の未入力の値の合計を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の <B> と <C> と <D> について関係性を一度に描く	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> の未入力の値をその最頻値で穴埋めする	<A> . fillna ( <A> . mode ( ) )	<A> . fillna ( <A> . mode ( ) )
<B> というエクセルデータのシート名 <C> を表データに格納し、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
データフレーム <A> をカラム <B> の値を軸にソートし、 <A> にする	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
<A> と表 <B> を横に一つにまとめる	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
エクセルファイル <A> の <B> シート名を読む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
<A> の <B> と <C> を降順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、グラフは密度推定をする	kind = 'density'	kind = 'density'
同じグラフ内で <A> の <B> と <A> 表データのカラム <C> と <A> のカラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ df の <A> のデータ列を繰り返す	for name in data [ <A> ] :	if <A> . duplicated ( ) :
<A> を縦軸に加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
<B> と <C> を縦結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
同じ x 軸と y 軸で <A> 表の <B> 表属性と <C> と <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の全ての列で重複している行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	markerfacecolor = <A> . drop_duplicates ( )
表 <A> の <B> と列 <C> と <D> 列について関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
カラム <A> という列をドロップして、置き換える	df = df . drop ( <A> , axis = 1 )	<A> . drop ( axis = 1 , inplace = True )
表データ <A> の要約統計量を確認する	<A> . describe ( )	X . describe ( )
そこで、目印のエッジ色は赤紫色を用いる	markeredgecolor = 'magenta'	'magenta' = 'magenta'
<A> 中の <B> と <C> 表属性に重複が存在するのか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> のカラム <D> について、カラム <B> を位置、 <C> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<B> <A> . pivot_table ( index = <C> , columns = <D> , values = <E> )
<A> と <B> 表データを縦方向でマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
同じ軸のセットで表 <A> の <B> カラムとカラム <C> と <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の <B> 列と列 <C> に重複は存在するのか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
カンマ区切りで表データを CSV ファイル <A> ( ファイル名 ) から読み込む	pd . read_csv ( <A> , sep = ',' )	markeredgecolor = pd . read_csv ( <A> , sep = ',' )
<A> というエクセルファイルの全部のシートをデータフレームとして読む	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> , sheet_name = None )
<B> の <C> をソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
そこで、マーカーの輪郭色はマゼンタにする	markeredgecolor = 'magenta'	markeredgewidth = 'magenta'
<B> の NaN を <B> の平均値で埋め、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	range = <B> . fillna ( <B> . mean ( ) )
そこで、ひし形のマーカーを使用する	marker = 'D'	marker = 'D'
表 <A> の <B> を欠損に置換し、欠損がある行を消す	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <A> 内の <B> 表属性と <C> に重複はあるか	<A> . duplicated ( subset = [ <B> , <C> ] )	df . duplicated ( subset = [ <A> , <C> ] )
<A> の <B> とコラム <C> に重複があるのかどうか表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 内の列それぞれに存在する <B> の個数の合計を見る	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
そこで、マーカーの形の輪郭線は <A> とする	markeredgewidth = <A>	markersize = <A>
表 <A> 中の未記入の値がある行を削除し、置き換える	<A> . dropna ( inplace = True )	df . dropna ( inplace = True )
MLP モデルを初期化し、 <A> とする	<A> = sklearn . neural_network . MLPClassifier ( )	<A> = sklearn . neural_network . MLPClassifier ( )
そこで、○の目印を表示する	marker = 'o'	marker = 'o'
<C> カラムを項目名として、 <A> と <B> を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> 全体を位置を軸にソートし、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
CSV ファイル <A> ( ファイル名 ) から表データを <B> 区切りで読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<A> 内に重複はあるか確認	<A> . duplicated ( )	df . duplicated ( subset = <A> )
データフレーム <A> の <B> コラムをインデックス、コラム <C> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> )	markeredgewidth = <A> . pivot_table ( index = <B> , columns = <C> )
<B> 内の NaN を含む行を落とし、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <A> を <B> カラムの値を元に昇順でソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> の <B> とカラム <C> とカラム <D> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
そこで、区切り記号は <A> にする	sep = <A>	start = <A>
表データ <A> の列 <C> の月を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . month	<A> [ <B> ] = <A> [ <C> ] . dt . month
そこで、 <A> を目印の大きさとする	markersize = <A>	markersize = <A>
表 <A> の NaN を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
<A> ( データフレーム ) の <B> と <C> を降順にソートして、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
<B> というエクセル <B> のシート全てをデータフレームに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表データ <A> の <B> 列と表データ <A> の <C> 列と <A> 表データの <D> 列についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
一番左の列を位置に指定して、ファイルパス <B> を読み込み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	] = <A> . read_csv ( <B> , index_col = 0 )
そこで、マーカーのエッジ色は黄緑を用いる	markeredgecolor = 'greenyellow'	markeredgewidth = 'greenyellow'
表データ <A> の重複した ] [ データを得る	<A> [ <A> . duplicated ( ) ]	df [ <A> ] . duplicated ( ) ]
データフレーム <A> の <B> と <A> 表の <C> と <A> 表の <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> 表属性の <C> 行目	<A> [ <B> ] [ <C> ]	[ <A> [ <B> ] [ <C> ]
そこで、打点の色は黄緑色を用いる	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
横軸を <A> とした <B> の棒グラフを描く	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
表 <B> の <C> とカラム <D> を落とし、 <A> に代入する	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
左側のデータの位置と右側のデータの <D> を項目名として、 <B> と表 <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	df1 <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表 <A> 内のそれぞれの列にある <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
<A> 中の NaN を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> の <B> と <C> に重複があるかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の末尾の 5 行を表示する	<A> . tail ( )	df1 . tail ( <A> )
左側のデータのインデックスと右側のデータの <D> を項目名として、表 <B> と <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <D> )
表 <A> の <B> カラムの未入力の値をカラム <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<A> を表に格納する	pd . read_csv ( <A> )	DataFrame = pd . read_csv ( <A> )
表データ <A> の <B> に重複が存在するのかを確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
境界値を <C> リストとして、 <A> の列 <B> を分割する	pd . cut ( <A> [ <B> ] , <C> )	<A> [ pd . cut ( <B> ] , <C> )
カンマ区切りで CSV ファイル <B> ( ファイル名 ) をデータフレームとして読んで、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
度数分布図を用いて	plt . hist ( X )	plt . hist ( df [ 'A' ] )
そこで、マーカーはひし形を用いる	marker = 'D'	marker = 'D'
表データ <A> 中の未記入の値の合計を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、目印の色は黄緑を使う	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
そこで、目印をダイヤモンドとする	marker = 'D'	marker = 'D'
表データ <A> <B> と <A> コラム <C> と表 <A> <D> のボックスチャートを一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
分割数を <D> 、ビンの名前をインデックスとして、 <B> の <C> コラムを分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	linestyle = pd . cut ( <B> [ <C> ] , <D> , label = False )
<A> 中の未入力の値を表データ <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
データフレーム <B> 内にある <C> を欠損値とし、 <A> にする	<A> = <B> . replace ( <C> , np . nan )	= <A> . replace ( [ <B> , <C> ] , np . nan )
カンマ区切りで表として <B> を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
データフレーム <A> の表属性 <B> とデータフレーム <A> の <C> 表属性と <A> の <D> の箱髭図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の未入力の値をデータフレーム <A> の平均値で埋めて、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
<C> を項目名として、データフレーム <A> と <B> を結合する	pd . merge ( <A> , <B> , on = <C> )	for merge ( <A> , <B> , on = <C> )
データフレーム <A> の列 <B> の NaN を <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
表データ <A> 中の列それぞれに存在する <B> の個数を調べる	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
データフレーム <B> 内の <C> を未入力の値に置換し、未入力の値が存在する行をドロップし、 <A> に代入する	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
そこで、線グラフを用いる	kind = 'line'	kind = 'line'
表 <B> 内の欠損がある行を削除を <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> の <B> を NaN に置換し、 NaN が存在する行を消し、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> の先頭から <B> 行目まで	<A> [ : <B> ]	<A> [ : <B> ]
<A> 中の NaN の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> の列 <B> の月	<A> [ <B> ] . dt . month	plt . hist ( <A> [ <B> ] )
そこで、目印の輪郭色として赤色を使う	markeredgecolor = 'red'	markeredgewidth = 'red'
表データ <A> の全ての列の重複する行をドロップして、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
先頭の列を位置に指定して、 <A> からデータフレームとを読む	pd . read_csv ( <A> , index_col = 0 )	markeredgecolor = pd . read_csv ( <A> , index_col = 0 )
表データ <A> のそれぞれの行に対して重複があるかどうかを確認する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
データフレーム <A> 内の重複要素がある行を削除し、 <A> に代入する	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<B> というエクセルファイルのシート全てからデータフレームを読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
データフレーム <A> を <B> の値でソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> において、全ての要素が <C> の表属性を作り、名前を <B> とする	<A> [ <B> ] = [ <C> ] * len ( <A> )	<A> [ <B> ] = [ <C> ] * len ( <A> )
<A> と <B> の散布図を描く	plt . scatter ( <A> , <B> )	plt . plot ( <A> , <B> , color = False )
表データ <A> を位置でソート	<A> . sort_index ( )	<A> . sort_index ( )
そこで、色をシアンとする	color = 'cyan'	'cyan' = 'cyan'
<A> の位置を昇順でソート	<A> . sort_index ( )	<A> . sort_index ( )
データフレーム ( <A> ) の <B> コラムを横軸、 <D> をグラフの <C> 軸として、散布図をプロットする	<A> . plot ( kind = 'scatter' , x = <B> , <C> = <D> )	<A> . plot ( kind = 'scatter' , x = <B> , <C> = <D> )
<C> 区切りで <B> から表を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表 <A> 中の <B> に重複があるかどうか確認する	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
データフレーム <A> の <B> カラムのバリュー	<A> [ <B> ] . values	<A> [ <B> ] . values
ビン数を <C> 、ビンの名前をインデックスとして、 <A> データフレームのコラム <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
そこで、色として青を使用する	color = 'blue'	sns = 'blue'
表データ <A> の <B> ごとに <C> の個数を算出する	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
2 次元配列 <B> を <C> をコラム名として表に変換して、 <A> とする	<A> = pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
<B> をカンマ区切りで読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
そこで、打点の輪郭幅は <A> をする	markeredgewidth = <A>	bins = <A>
表 <A> の全ての列の重複する行を取り除いて、置き換える	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
データフレーム <A> 中の NaN を含む行を消す	<A> . dropna ( )	<A> . dropna ( )
表 <A> の <B> コラムと <C> を値が大きい順に並び替えて、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	sns = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <A> 内の NaN を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
データフレーム <A> 中にある <B> を未記入の値とし、インプレースする	<A> . replace ( <B> , np . nan , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
ビン数を <C> として、 <A> のコラム <B> を要素数が等しくなるように分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . qcut ( <A> [ <B> ] , <C> )
<A> 中の重複した行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
データフレーム <A> の <B> と <C> 表属性を大きい順に並び替え、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	sns . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
左外部結合で <A> と <B> を結合する	pd . merge ( <A> , <B> , how = 'left' )	'left' = <A> . merge ( <B> , how = 'left' )
データフレーム <B> 中の重複した行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> のコラム <B> の欠損値を <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	fillna <A> [ <B> ] . mode ( ) )
左側のデータの位置と右側のデータの <C> 列を項目名として、 <A> 表データと <B> 表データをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
同じ軸でデータフレーム <A> の <B> と <A> の <C> と <A> の <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カンマ区切りで CSV ファイル <A> ( ファイル名 ) を表データとして読み込む	pd . read_csv ( <A> , sep = ',' )	left_index = pd . read_csv ( <A> , sep = ',' )
表 <A> の <B> 行から <C> 行まで	<A> [ <B> : <C> ]	<B> : <C> } )
表データ <A> 中のカテゴリ変数を数値データに変換する	pd . get_dummies ( <A> )	markeredgecolor = pd . get_dummies ( <A> )
データフレーム <A> の <B> と <A> の <C> カラムと <A> 表データの <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
CSV ファイル <A> ( ファイル名 ) を表データとして <B> 区切りで読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
そこで、水色をマーカーの輪郭色にする	markeredgecolor = 'cyan'	end = 'cyan'
<A> 内の欠損値を直前の行の値で補い、置き換える	<A> = <A> . fillna ( method = 'ffill' )	<A> . fillna ( method = 'ffill' , inplace = True )
そこで、色は赤色をする	color = 'red'	byteorder = 'red'
<A> のインデックスをリセットする	<A> . reset_index ( )	<A> . reset_index ( )
<A> 中の重複している行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表 <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
<C> 表属性を項目名として、 <A> 表と <B> 表をマージする	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表 <A> 全体を <B> を軸にソートし、再代入する	<A> = <A> . sort_values ( <B> )	= <A> . sort_values ( <B> )
表 <A> 内の未記入の値が存在する行を削除して、インプレースする	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
表データ <A> で重複した行の合計を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データを <B> から読み、 <A> にする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
データフレーム <A> の <B> についての標準偏差を取得する	<A> [ <B> ] . std ( )	<A> [ <B> ] . std ( )
表 <A> をインデックスで並び替え、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
表 <A> 内の <B> と <C> コラムに重複があるか否か	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> 内の重複する行をドロップを <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
そこで、グラフを用いる	kind = 'line'	kind = 'line'
表データ <A> の <B> が <C> 以上のデータを抽出する	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
<A> の中の未記入の値をドロップし、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
<A> 中の NaN がある行を落とし、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
表データをファイル名 <B> からタブ区切りで読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = '\t' )	<A> = pd . read_csv ( <B> , sep = '\t' )
データフレーム <A> の未入力の値を削除し、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
左側のデータのインデックスと右側のデータのカラム <B> をキーとして 2 つのデータを一つにまとめ、 <A> とする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	= pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
<A> からファイル名 <B> という CSV ファイルを書き込む	<A> . to_csv ( <B> )	encoding = <A> . to_csv ( <B> )
表データ <A> の <B> と <C> 表属性に重複があるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、目印の輪郭色は紫色を使う	markeredgecolor = 'purple'	'purple' = 'purple'
<A> の位置を昇順でソートして、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<A> の <B> ごとに <C> の平均値を計算する	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	for <A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
同じグラフ内で <A> 表 <B> と <A> 表 <C> と <A> 表 <D> 表属性をボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> <B> と <A> <C> とデータフレーム <A> <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の重複する行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
インデックスとカラム <C> を項目名として <A> 表データと <B> 表データをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <A> の中の重複要素がある行を取り除き、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
表データ <A> の列 <B> と <A> の <C> と <A> の <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の未入力の値を <B> とする	<A> . fillna ( <B> )	df . fillna ( <A> . mean ( ) )
そこで、グラフの種類として垂直棒グラフを用いる	kind = 'bar'	kind = 'bar'
表データ <B> を <C> の値を元に昇順でソートし、 <A> に代入する	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> )
データフレーム <A> <B> と <A> 表データ <C> と <A> <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ x 軸と y 軸でデータフレーム <A> のコラム <B> と <A> の <C> コラムとデータフレーム <A> の <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> 表属性と <A> 表の表属性 <C> と <A> 表の <D> についての箱髭図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの色は紫を用いる	markerfacecolor = 'purple'	markerfacecolor = 'purple'
データフレーム <B> と表 <C> を縦にマージし、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<A> 表属性 <B> と <A> 表表属性 <C> と <A> 表 <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> のインデックス <B> の名前を <C> にリネームして、インプレースする	<A> . rename ( index = { <B> : <C> } , inplace = True )	<B> <A> . rename ( index = { <C> : <D> } , inplace = True )
表データ <A> <B> と <A> データフレーム <C> とデータフレーム <A> カラム <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の行名	<A> . index	<A> . index
<A> ( データフレーム ) の <B> と <C> 表属性を大きい順にし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	markeredgewidth = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<B> という名前のエクセルデータの <C> 番目のシートから読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
データフレーム <A> のインデックスを振り直し、インプレースする	<A> . reset_index ( inplace = True )	<A> . reset_index ( inplace = True )
データフレーム <A> を <B> で並び替える	<A> . sort_values ( <B> )	sort_values <A> . sort_values ( <B> )
表データ <A> 中のそれぞれのカラムにある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	<A> . isin ( [ <B> ] ) . sum ( )
表データ <A> の <B> と <C> に重複はあるのかどうか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、円形を目印とする	marker = 'o'	marker = 'o'
<A> の重複する行を取り除き、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
<A> の位置 <B> の名前を <C> にリネームする	<A> . rename ( index = { <B> : <C> } )	df1 <A> . rename ( columns = { <B> : <C> } )
<A> というエクセルファイルの <B> を読む	pd . read_excel ( <A> , sheet_name = <B> )	<A> . to_excel ( <B> )
<A> をパス <B> にして保存する	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
表 <B> 中の欠損値を <C> に置換し、 <A> とする	<A> = <B> . fillna ( <C> )	markeredgewidth = <B> . fillna ( <C> )
<A> というエクセルファイルのシート全部をデータフレームとして読み込む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> の NaN を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> の中の NaN がある行を消して、置き換える	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
表データ <A> 内に重複があるのかどうか確認する	<A> . duplicated ( )	df . duplicated ( subset = <A> )
左側のデータのインデックスと右側のデータのカラム <D> を項目名として、 <B> とデータフレーム <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> の <B> と <C> コラムごとに <D> の値の合計を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	linestyle = <A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<A> の <B> 表属性と <C> を削除して、置き換える	<A> . drop ( [ <B> , <C> ] , axis = 1 , inplace = True )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
分割数を <D> 、ビンの名前を <E> リストとして、 <B> の <C> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	range = pd . cut ( <B> [ <C> ] , <D> , label = <E> )
表 <A> の <B> と <C> コラムを大から小へと並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	= <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<B> 中の未入力の値が存在する行を削除し、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表データ <A> <B> と <A> 表 <C> と <A> 表 <D> についての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> のバリュー	<A> [ <B> ] . values	<A> [ <B> ] . values
同じ軸でデータフレーム <A> の <B> とデータフレーム <A> の <C> と <A> の列 <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、線の種類を一点鎖線とする	linestyle = 'dashbot'	alpha = 'dashbot'
<A> の <B> を未記入の値に置換し、未記入の値が存在する行をドロップして、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> の <B> 表属性と <A> 表データの <C> と表データ <A> の <D> 表属性についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> 列の一意の値を表示する	<A> [ <B> ] . unique ( )	<B> <A> [ <B> ] . unique ( )
表 <A> の <B> の名前を <C> に変更して、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> } )	= <A> . rename ( columns = { <B> : <C> } )
<B> ( データフレーム ) の <C> と <D> を大きい順に並び替え、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	sns = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表 <A> 中にある <B> を欠損に置き換える	<A> . replace ( <B> , np . nan )	<A> = <A> . replace ( <B> , np . nan )
<A> ( データフレーム ) の <B> を one - hot 表現に変換する	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
エクセルファイル <A> のシート全てを表データに格納する	pd . read_excel ( <A> , sheet_name = None )	sheet_name = pd . read_excel ( <A> , sheet_name = None )
<D> を項目名として、 <B> とデータフレーム <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<A> = pd . merge ( <B> , <C> , on = <D> )
<A> を <B> として CSV に書き出す	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
表 <A> 中の欠損値の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> の <B> 行から末尾までを表示する	<A> [ <B> : ]	<A> [ <B> : ]
表データ <A> の <B> コラムの未記入の値を <B> コラムの平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	fillna <A> [ <B> ] . mean ( ) )
<A> と <B> の折れ線グラフを <C> とラベル付けして描画する	plt . plot ( <A> , <B> , label = <C> )	pd . cut ( <A> [ <B> , <C> ] , label = False )
表データ <A> の列 <B> を見る	<A> [ <B> ]	<A> [ <B> ]
エクセルファイル <B> のシート全てをデータフレームとして読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
データフレーム <A> を <B> ファイルパスに保存する	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
そこで、マーカーの色は青を使う	markerfacecolor = 'blue'	'blue' = 'blue'
表 <B> 中の <C> を欠損値に置換し、欠損値が存在する行を落とし、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
ビン数を <D> 、ビンのラベルをインデックスとして、 <B> 表の列 <C> をビン分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表データ <A> 中の <B> を欠損値に置換し、欠損値がある行を消す	<A> . replace ( <B> , np . nan ) . dropna ( )	df1 <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> 全体を <B> を元に昇順でソートを <A> とする	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
一番左の列をインデックスに指定して、 <B> からデータフレームとを読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	markeredgewidth = <A> . read_csv ( <B> , index_col = 0 )
そこで、目印を＊とする	marker = '*'	marker = '*'
表 <A> のカラム <B> を度数分布図で作画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
<A> の <B> 表属性と <C> に重複があるかどうか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> 表属性に重複があるか確認	df . duplicated ( subset = <A> )	sklearn . duplicated ( subset = <A> )
列番号 <C> をインデックスと設定して、 <B> ファイルからデータフレームとを読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表データ <A> の元の位置を振り直し、インプレースする	<A> . reset_index ( drop = True , inplace = True )	reset_index = <A> . reset_index ( drop = True )
データフレーム <A> の <B> と <C> ごとに <D> 表属性の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<A> というエクセルファイルの <B> のシートを読む	pd . read_excel ( <A> , sheet_name = <B> )	sheet_name = pd . read_excel ( <A> , sheet_name = <B> )
データフレーム <A> のカラム <B> と <C> を抽出する	<A> [ [ <B> , <C> ] ]	[ <A> [ <B> , <C> ] ]
<A> 中の欠損の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> のコラム <B> の日にち	<A> [ <B> ] . dt . day	[ <A> [ <B> ] . dt . day
データフレーム <A> の <B> と <C> を降順にソートを <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<B> <A> = <A> . sort_values ( [ <C> , ascending = False )
<A> ( データフレーム ) の <B> 列と <C> を大から小へとし、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
<A> の <B> カラムと <C> の相関係数を確認する	<A> [ [ <B> , <C> ] ] . corr ( )	[ <A> [ <B> , <C> ] ] . corr ( )
エンコーディングをシフト JIS として、ファイルパス <B> を読み込み、 <A> とする	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )
境界値を <D> として、 <B> の <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<A> = pd . cut ( <B> [ <C> ] , <D> )
エクセルファイル <B> の全てのシートを表に格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表データ <A> の <B> と <A> 表データの <C> と <A> の <D> についてのボックスチャートをプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	for plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 中の <B> に重複はあるのかを調べる	<A> . duplicated ( subset = <B> )	<A> . duplicated ( subset = <B> )
<A> の <B> を未入力の値に置換し、未入力の値がある行をドロップし、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<B> <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> の位置を振り直して、 <A> とする	<A> = <A> . reset_index ( )	= <A> . reset_index ( )
同じグラフ内で表 <A> <B> と表 <A> <C> コラムと <A> 表 <D> コラムを箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <B> を位置と設定して、 <A> を表データに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
柱状図を用いて	plt . hist ( df [ 'A' ] )	plt . hist ( df [ 'A' ] )
列番号 <B> を位置に指定して、 <A> ファイルをデータフレームに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
そこで、グラフ種類は密度推定	kind = 'density'	kind = 'density'
そこで、ビンの数は <A> をする	bins = <A>	bins = <A>
表データ <A> の <B> の名前を <C> に変更し、置き換える	<A> . rename ( columns = { <B> : <C> } , inplace = True )	markerfacecolor = <A> . rename ( columns = { <B> : <C> } )
<A> 中の未記入の値の数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> というエクセルのシート全部からデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
そこで、マーカーの輪郭幅として <A> を使う	markeredgewidth = <A>	markeredgewidth = <A>
表 <A> の <B> と <A> の <C> と <A> の <D> についての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
分割数を <C> 、ビンの名前を <D> リストとして、 <A> の <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	linestyle = pd . cut ( <B> [ <C> ] , <D> )
<A> をソート	df . sort_values ( <A> )	df . sort_values ( <A> )
そこで、マーカーは五角形をする	marker = '*'	marker = '*'
表 <A> をコラム <B> の値を元に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> 内の欠損を <B> で埋める	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<A> の中の <B> を未入力の値に置換し、未入力の値が存在する行を消し、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表データ <A> の中の欠損を <B> に置換する	<A> . fillna ( <B> )	plt . fillna ( <A> [ <B> ] )
そこで、マーカーの種類の色として青色を用いる	markerfacecolor = 'blue'	'blue' = 'blue'
表 <A> 中の未記入の値が存在する行をドロップして、再代入する	<A> = <A> . dropna ( )	= <A> . dropna ( )
コラム <C> をキーとして、 <A> と <B> をマージする	pd . merge ( <A> , <B> , on = <C> )	for merge ( <A> , <B> , on = <C> )
同じ軸のセットで <A> <B> と <A> 列 <C> と <A> <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の未入力の値が存在する行を落とし、 <A> とする	<A> = <A> . dropna ( )	= <A> . dropna ( )
データフレーム <B> の <C> をインデックス、 <D> カラムをカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	<A> = <B> . pivot_table ( columns = <C> , values = <D> )
データフレーム <A> 中の未入力の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、グラフは青で表示する	color = 'blue'	'blue' = 'blue'
<A> の <B> コラムを昇順で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> の重複している行の数を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <B> と <C> をマージし、 <A> にする	<A> = pd . merge ( <B> , <C> )	sep = <B> , <C> )
同じ軸で <A> コラム <B> と表データ <A> <C> と表データ <A> <D> コラムを箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、文字コードは、 <A> を用いる	encoding = <A>	end = <A>
表データを <A> ファイルから <B> 区切りで読み込む	pd . read_csv ( <A> , sep = <B> )	<A> . read_csv ( <B> , sep = ',' )
データフレーム <A> 中にある <B> を未記入の値とする	<A> . replace ( <B> , np . nan )	replace <A> . replace ( <B> , np . nan )
表 <A> の <B> と <C> と <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> の欠損値を <A> 表の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	<A> . fillna ( <A> . mean ( ) )
表データ <A> の <B> の欠損値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	[ <A> [ <B> ] . fillna ( <C> )
一番左の列を位置と設定して、 <A> を読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<B> に BOM 付きでデータフレーム <A> を書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	to_csv <A> . to_csv ( <B> , encoding = 'utf_8_sig' )
横軸に <A> という軸ラベルを付ける	plt . xlabel ( <A> )	plt . xlabel ( <A> )
表 <A> 内の重複している値がある行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
そこで、目印の色としてネイビーを用いる	markerfacecolor = 'navy'	markerfacecolor = 'navy'
<A> 中の欠損の数を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の重複している行を消し、 <A> とする	<A> = <A> . drop_duplicates ( )	= <A> . drop_duplicates ( )
同じグラフ内で <A> 列 <B> と <A> <C> と表データ <A> 列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
