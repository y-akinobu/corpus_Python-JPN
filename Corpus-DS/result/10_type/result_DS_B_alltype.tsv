<A> の <B> コラムとコラム <C> とコラム <D> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
同じ x 軸と y 軸でデータフレーム <A> のコラム <B> と <A> データフレームの <C> コラムと <A> データフレームの <D> コラムをボックスチャートで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体を <B> 表属性を軸にソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
表データ <A> の中の未記入の値をデータフレーム <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
カンマ区切りでデータフレームとして CSV ファイル <B> を読み込み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表データ <B> のコラム <C> を昇順にソートし、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
<A> のコラム <B> を one - hot 表現に変換する	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
<A> <B> コラムと <A> データフレームコラム <C> とデータフレーム <A> <D> コラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の表属性 <D> について、 <B> 表属性を位置、表属性 <C> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
データフレーム <A> <B> カラムと表 <A> カラム <C> と <A> 表カラム <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の中の <B> 表属性に重複がある行を削除する	<A> . drop_duplicates ( subset = <B> )	drop_duplicates . drop_duplicates ( subset = <B> )
<B> ( データフレーム ) のコラム <C> を順にして、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
表データ <A> 中の列に存在する <B> の個数の合計値を求める	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
分割数を <C> として、データフレーム <A> のコラム <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
<A> 全体を <B> カラムを元に並び替えて、 <A> にする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
表データ <A> のコラム <B> とコラム <C> を大から小へと並び替え、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> の <B> 表属性と <C> 表属性をドロップし、置き換える	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<B> と <C> データフレームを縦にくっつけて、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表データ <A> において、 <B> コラムから箱髭図を作画する	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
データフレーム <A> と表 <B> を横方向にくっつける	pd . merge ( <A> , <B> )	<A> = pd . merge ( <B> )
そこで、透過率は <A> にする	alpha = <A>	buffering = <A>
データフレーム <A> 中の <B> カラムとカラム <C> に重複があるか否か	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> を <B> ファイルパスという名前で CSV ファイルで保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
同じグラフ内で表データ <A> の <B> カラムと表データ <A> の <C> カラムと表データ <A> の <D> カラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> のカラム <E> について、カラム <C> をインデックス、カラム <D> をカラムとしたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	index = <B> , columns = <C> , values = <D> , values = <E> )
データフレーム <A> の <B> カラムが <C> 以上のデータを抽出する	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
データフレーム <A> の <B> 行目のコラム <C>	<A> . iloc [ <B> ] [ <C> ]	<A> . iloc [ <B> ] [ <C> ]
コラム <A> と <B> コラムに重複はあるかどうか確認を表示する	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表データ <A> 内の重複する値がある行を取り除く	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
同じ軸のセットで表 <A> の <B> 表属性と <C> 表属性と <D> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの形状の輪郭色はシアンである	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
表 <A> の表属性 <B> の名前を <C> に変更して、置き換える	<A> = <A> . rename ( columns = { <B> : <C> } )	rename <A> . rename ( columns = { <B> : <C> } , inplace = True )
表データ <A> のカラム <B> 、 <C> 、 <D>	<A> [ [ <B> , <C> , <D> ] ]	'words' <A> [ <B> , <C> , <D> ] ]
<B> という名前のエクセルデータの <C> のシートからデータフレームを読み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表データ <A> の元の位置をリセットして、再代入する	<A> = <A> . reset_index ( drop = True )	reset_index = <A> . reset_index ( drop = True )
表データ <A> と表データ <B> に対して、 <C> 列をキーとしてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表 <A> の列 <C> の時間を調べて、  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . hour	<A> [ <B> ] = <A> [ <C> ] . dt . hour
<A> 列と列 <B> に重複はあるかチェック	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
左側のデータのインデックスと右側のデータの列 <D> をキーとして、データフレーム <B> とデータフレーム <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> の上 5 行	<A> . head ( )	X . head ( <A> )
表データを CSV ファイル <B> からカンマ区切りで読み込み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
<A> の <B> 列の一意の値	<A> [ <B> ] . unique ( )	<A> [ <B> ] . unique ( )
一番左の列を位置に指定して、 <B> ファイル名をデータフレームとして読み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
データフレーム <A> の表属性 <B> と表 <A> の <C> 表属性と <A> 表の表属性 <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のカラム <B> をソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> ( データフレーム ) の <B> コラムを順番になるようにし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表データ <B> 内の <C> コラムに重複がある行を削除を <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	x = <B> . drop_duplicates ( subset = <C> )
データフレーム <A> の <B> についての要約統計量	<A> [ <B> ] . describe ( )	plt . describe ( <A> [ <B> ] )
データフレーム <A> 全体を表属性 <B> を元にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> の NaN を <B> に置換して、再代入する	<A> = <A> . fillna ( <B> )	'words' = <A> . fillna ( <B> )
両方の列を使って <A> ( データフレーム ) と <B> 表データを一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
<C> カラムをキーとして、表 <A> と <B> 表を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> の最初の <B> 行	<A> . head ( <B> )	<A> . head ( <B> )
データフレーム <A> の全ての列で重複している行をドロップする	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
表データ <B> 内の重複した行を削除を <A> とする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
表データ <A> の中の <B> 表属性に重複がある行を削除して、置き換える	<A> = <A> . drop_duplicates ( subset = <B> )	encoding = <A> . drop_duplicates ( subset = <B> )
グラフの x 軸を <A> とした <B> の棒グラフを描画する	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
ビン数を <D> 、ビンのラベルを <E> リストとして、表データ <B> のカラム <C> を分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	= pd . cut ( <A> [ <B> ] , <C> , label = <D> )
データフレーム <B> と <C> 表データを横方向に結合し、 <A> にする	<A> = pd . merge ( <B> , <C> )	alpha = pd . merge ( <B> , <C> )
表 <A> 中の重複要素がある行を取り除き、再代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
表 <A> の <B> カラムが <C> より少ないデータ	<A> [ <A> [ <B> ] <  <C> ]	<A> [ <A> [ <B> ] < <C> ]
表 <A> と表データ <B> を縦方向に一つにまとめる	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
ビン数を <C> 、ビンのラベルをリスト <D> として、 <A> 表データの列 <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
グラフの大きさを <A> x6 に変更する	plt . figure ( figsize = ( <A> , 6 ) )	hidden_layer_sizes = ( <A> , 6 ) )
データフレーム <A> と表データ <B> に対して、 <C> コラムをキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
y 軸の軸ラベルを <A> に設定する	plt . ylabel ( <A> )	plt . ylabel ( <A> )
<A> 列を順にソートし、置き換える	df = df . sort_values ( <A> )	df . sort_values ( <A> , inplace = True )
そこで、赤で表示する	color = 'red'	sep = 'red'
表データ <A> の <B> カラムについての箱ひげ図を描画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
そこで、ランプ関数を活性化関数とする	activation = 'relu'	color = 'purple'
表 <A> 全体を位置を元にソートを <A> にする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
<A> <B> 列と <A> 表データ <C> 列と <A> 表データ列 <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の列 <B> と列 <C> の相関を見る	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
ビン数を <D> 、ビンの名前を 0 始まりの連番として、 <B> 表の <C> コラムをビン分割して、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	plt . cut ( <A> [ <B> ] , <C> , label = False )
<B> というエクセルデータの <C> シート名を読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
同じ x 軸と y 軸で表 <A> のカラム <B> と <C> カラムとカラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中の <B> コラムと <C> コラムに重複はあるかどうかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
カラム <A> とカラム <B> を大きい順に並び替え、インプレースする	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
度数分布図で <A> を描写する	plt . hist ( <A> )	sklearn . hist ( <A> )
データフレーム <A> の <C> コラムの秒を確認し、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . second	<A> [ <B> ] = <A> [ <C> ] . dt . second
表データ <A> 全体をコラム <B> に基づいてソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表データ <A> カラム <B> とデータフレーム <A> <C> カラムとデータフレーム <A> カラム <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の <B> 表属性に重複がある行を消して、再代入する	<A> = <A> . drop_duplicates ( subset = <B> )	drop_duplicates = <A> . drop_duplicates ( subset = <B> )
データフレーム <A> の未記入の値	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> に関数 <C> を適用して、コラム <A> とする	df [ <A> ] = <B> . map ( <C> )	<A> [ <B> ] = df . map ( <C> )
表データ <A> の <B> コラムに重複はある場合	if <A> . duplicated ( subset = <B> ) :	for if <A> . duplicated ( subset = <B> ) :
データフレーム <A> の形状を調べる	<A> . shape	<A> . shape
データフレーム <A> の行数と列数を表示する	<A> . shape	<A> . shape
もし <A> 内に重複があるのならば	if <A> . duplicated ( ) :	mode = <A> . duplicated ( ) :
表データ <A> の <B> 行から最後までを見る	<A> [ <B> : ]	'words' <A> [ <B> : ]
<B> 番目の列を位置に、 <A> ファイル名を表データに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表データ <A> 中の NaN を削除し、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
<A> のカラム <B> と <C> カラムと <D> カラムについての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 全体を <B> カラムの値を元に昇順でソートして、再代入する	<A> = <A> . sort_values ( <B> )	for <A> = <A> . sort_values ( <B> )
データフレーム <A> の列 <B> の NaN を <B> 列の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
表 <A> の表属性 <B> を中央値で分割する	pd . qcut ( <A> [ <B> ] , 2 )	pd . qcut ( <A> [ <B> ] , 2 )
同じ軸で <A> 表データ表属性 <B> と <A> 表データ表属性 <C> と <A> 表データ <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> <B> 列と <A> 表データ列 <C> と表データ <A> <D> 列の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> コラムに重複がある行を削除を <A> とする	<A> = df . drop_duplicates ( subset = <B> )	plt . drop_duplicates ( subset = <B> )
表 <A> の列 <B> に重複がある行をドロップする	<A> . drop_duplicates ( subset = <B> )	'words' <A> . drop_duplicates ( subset = <B> )
そこで、グラフの色を赤紫色とする	color = 'magenta'	markerfacecolor = 'magenta'
データフレーム <A> を <B> ファイル名というファイル名で書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<A> ( データフレーム ) の <B> 表属性を順にして、置き換える	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
一番左の列をインデックスにして、 <B> ファイルパスから読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<A> 表属性と表属性 <B> に重複は存在するのか表示してみる	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> コラムに重複がある行を drop して、インプレースする	df . drop_duplicates ( subset = <A> , inplace = True )	<A> . drop_duplicates ( subset = <A> , inplace = True )
先頭の列を位置として、 <B> ファイルを読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<B> を <C> 区切りで読んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
そこで、始まりは <A> とする	start = <A>	bins = <A>
表データ <A> 列 <B> と表データ <A> 列 <C> と <A> 表データ列 <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <C> 列の時間を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . hour	markeredgewidth = <A> [ <B> ] . dt . hour
エクセルファイル <B> のシート全部をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<C> 番目の列を位置として、パス <B> をデータフレームとして読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> の表属性 <B> と <C> 表属性ごとに <D> 表属性の値の合計を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
そこで、グラフの種類としてヒストグラムを使用する	kind = 'hist'	kind = 'hist'
<A> 中の表属性 <B> に重複はあるのか確認	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
そこで、マーカーの種類のエッジ色は紺色を用いる	markeredgecolor = 'navy'	markerfacecolor = 'navy'
データフレーム <B> と <C> 表データを縦方向で結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
データフレーム ( <A> ) を <B> 表属性毎に繰り返し	for i , df in enumerate ( <A> . groupby ( <B> ) ) :	pd . for i ( <A> , <B> ) :
データフレーム <A> のコラム '名前' を全て <B> ( 文字列 ) にする	<A> [ '性別' ] = [ <B> ] * len ( <A> )	fillchar = <A> [ <B> ] * len ( <A> )
表データ <B> の振り直して、元のインデックスを削除して、 <A> にする	<A> = <B> . reset_index ( drop = True )	alpha = <B> . reset_index ( drop = True )
そこで、マーカーの種類の大きさは <A> をする	markersize = <A>	markersize = <A>
データフレーム <B> を <C> コラムの値に基づいてソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
データフレーム <A> 内の未記入の値がある行を落とす	<A> . dropna ( )	<A> . dropna ( )
<A> 中の欠損値の数を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <B> とデータフレーム <C> に対して、コラム <D> を項目名としてデータを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
箱ひげ図を用いて	plt . boxplot ( df [ 'A' ] )	plt . boxplot ( [ X , Y ] )
<D> カラムを項目名として、 <B> 表データと表データ <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
そこで、活性化関数はランプ関数である	activation = 'relu'	activation = 'relu'
<A> 列を小さい順にソート	df . sort_values ( <A> )	X . sort_values ( <A> )
<A> 全体を <B> コラムの値を軸にソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
そこで、目印は丸である	marker = 'o'	activation = 'o'
表データ <A> 内の <B> を欠損に置換し、欠損が存在する行を落とし、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
そこで、水色で表示する	color = 'cyan'	color = 'cyan'
<A> ( データフレーム ) の <B> 表属性を値が小さい順に並び替えて、 <A> に代入する	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
リスト <B> を表属性 <A> 、リスト <D> を <C> 表属性として、新しいデータフレームを作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	sns . DataFrame ( { <A> : <B> , <C> : <D> } )
列名を指定せずに <B> ファイル名を読んで、 <A> とする	<A> = pd . read_csv ( <B> , header = None )	= <A> . read_csv ( <B> , header = None )
データフレーム <B> の <C> コラムとコラム <D> を値が大きい順に並び替え、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表データ <A> 内の欠損の合計を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> ( データフレーム ) の表属性 <B> と <C> 表属性を大から小へとして、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	range = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> のカラム <B> の値を軸にソートし、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
そこで、グラフ線のスタイルを点と線とする	linestyle = 'dashbot'	kind = 'dashbot'
表データ <A> の <C> 表属性に関数 <D> を適用して、コラム <B> にする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で表データ <A> コラム <B> と表データ <A> コラム <C> と <A> 表データコラム <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの形の色をマゼンタとする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
<A> と <B> を <C> 色の折れ線グラフで表示する	plt . plot ( <A> , <B> , color = <C> )	plt . plot ( <A> , <B> , color = <C> )
<A> のコラム <B> とコラム <C> と <D> コラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の <B> 表属性に重複はあるかどうかチェックする	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
そこで、マーカーの種類のエッジ色は黄緑	markeredgecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
データフレーム <A> の列 <B> の未記入の値を <C> で穴埋めする	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
データフレーム <A> をファイル名 <B> に文字化けしないように書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
そこで、グラフ種類は散布図を用いる	kind = 'scatter'	kind = 'scatter'
一番左の列を位置として、ファイル名 <A> から読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
表データ <A> の未入力の値	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> と表データ <B> に対して、 <C> 表属性をキーとしてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
そこで、打点は○とする	marker = 'o'	marker = 'o'
表データ <A> のカラム <B> が <C> もしくは <D> のデータ	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
重複する最後の行を残して <B> ( データフレーム ) 中の重複する行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( keep = False )	x = <B> . drop_duplicates ( keep = False )
表データ <A> の中の未記入の値をデータフレーム <A> の平均値で埋め、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	fillna <A> = <A> . mean ( ) , inplace = True )
<A> ( データフレーム ) の列 <B> を小さい順にして、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
そこで、グラフは、水平棒グラフを用いる	kind = 'barh'	kind = 'barh'
<B> と表データ <C> に対して、 <D> 列をキーとしてデータを内部結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = pd . merge ( <B> , <C> , on = <D> )
表 <A> の <B> 列と <C> 列を削除	<A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 )
<A> の <B> を未入力の値に置換し、未入力の値がある行を落とし、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表 <A> のコラム <B> の年を表示する	<A> [ <B> ] . dt . year	<A> [ <B> ] . dt . year
<A> <B> コラムと表 <A> <C> コラムと <A> 表コラム <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <B> を位置に、 <A> ファイル名からデータフレームとを読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> という名前のエクセルデータのシート名 <B> からデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	<A> . read_excel ( <B> , sheet_name = None )
表データ <A> 内の欠損したセル数をカウントする	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> の <C> 列を軸に昇順でソートを <A> に代入する	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
同じ軸で表 <A> <B> カラムと表 <A> カラム <C> と表 <A> <D> カラムをボックスチャートで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中の表属性 <B> に重複はあるのか表示する	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
<A> というエクセルの <B> のシートから読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<B> 列と列 <C> を大きい順にし、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	X = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> の未入力の値を削除	<A> . dropna ( )	marker . dropna ( )
ビン数を <C> 、ビンの名前をリスト <D> として、データフレーム <A> の <B> 表属性をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表 <A> の <B> 列を柱状図で描画する	plt . hist ( <A> [ <B> ] )	sns . hist ( <A> [ <B> ] )
<A> 中の欠損値がある行を削除	<A> . dropna ( )	<A> . dropna ( )
データフレーム <A> を <B> 表属性の値を軸にソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
表 <A> の列 <B> と <A> データフレームの列 <C> と <A> データフレームの <D> 列の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、目印の色をグレーとする	markerfacecolor = 'gray'	markerfacecolor = 'gray'
表 <A> 中で重複している行の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> と <B> 表に対して、列 <C> をキーとしてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表 <A> 全体を <B> 列の値でソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
表データ <A> の <B> 行目の <C> コラムを取得する	<A> . iloc [ <B> ] [ <C> ]	<A> . iloc [ <B> ] [ <C> ]
データフレーム <A> の <B> 表属性と表属性 <C> を降順に並び替えて、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表 <A> の <B> 列と <C> 列を降順に並び替える	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
エクセル <A> をデータフレームに格納する	pd . read_excel ( <A> )	pd . read_excel ( <A> )
表 <A> をインデックスに沿ってソートする	<A> . sort_index ( )	X . sort_index ( )
<A> のコラム <B> についての標準偏差	<A> [ <B> ] . std ( )	'words' <A> [ <B> ] . std ( )
エクセルファイル <B> のシート名 <C> をデータフレームに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表 <B> 全体を位置を元にソートを <A> にする	<A> = <B> . sort_index ( )	x = <B> . sort_index ( )
<A> ( データフレーム ) の列 <B> と列 <C> を値が大きい順にソートを <A> に代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	plt . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
リスト <A> を <B> を表属性名として表データにする	pd . pd . DataFrame ( <A> , columns = <B> )	. pd . DataFrame ( <A> , columns = <B> )
データフレーム <A> 中のカラムそれぞれに存在する <B> の個数を表示する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> のカラム <B> に重複がある行を削除して、インプレースする	<A> . drop_duplicates ( subset = <B> , inplace = True )	for <A> . drop_duplicates ( subset = <B> , inplace = True )
<B> と表データ <C> に対して、 <D> 表属性をキーとしてデータを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = pd . merge ( <B> , <C> , on = <D> )
そこで、文字コードとして shift - jis を使用する	encoding = 'shift_jis'	encoding = 'shift_jis'
そこで、マーカーは丸を用いる	marker = 'o'	marker = 'o'
データフレーム <B> の全ての列で重複している行をドロップし、 <A> にする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
<B> カラムを順にし、 <A> とする	<A> = df . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表データ <A> の欠損の合計を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> 中の <B> を欠損に置換し、欠損がある行を削除し、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> の <B> を NaN に置換し、 NaN が存在する行を削除を <A> に代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> の表属性 <B> についての箱ひげ図を作画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
そこで、区切り文字として <A> をする	sep = <A>	sep = <A>
<A> 中の NaN を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
グラフの x 軸を <A> とした <B> の縦棒グラフをプロットする	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
データフレーム <B> 内の未記入の値をドロップを <A> とする	<A> = <B> . dropna ( )	alpha = <B> )
<A> 内の <B> コラムに重複があるのか	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
データフレーム <A> 内の未記入の値を <A> 表データの平均値で埋め、 <A> に代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
そこで、グラフはカーネル密度推定図をする	kind = 'kde'	kind = 'kde'
<A> の列 <B> を落とし、置き換える	<A> . drop ( <B> , axis = 1 , inplace = True )	<A> . drop ( <B> , axis = 1 , inplace = True )
表 <A> <B> 列と表データ <A> 列 <C> と <A> 表データ列 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列 <A> をキーとしてデータを内部結合する	pd . merge ( df1 , df2 , on = <A> )	pd . merge ( df1 , df2 , on = <A> )
表 <A> の <B> 表属性についてのヒストグラムを描写する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
同じ軸のセットで <A> データフレーム <B> コラムとデータフレーム <A> コラム <C> とデータフレーム <A> コラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> 位置の名前を <C> に変更し、置き換える	<A> = <A> . rename ( index = { <B> : <C> } )	{ <A> . rename ( index = { <B> : <C> } , inplace = True )
<A> 全体をコラム <B> を元に並び替え、置き換える	<A> = <A> . sort_values ( <B> )	df . sort_values ( <B> , inplace = True )
<A> と <B> 表を横にくっつける	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
ヘッダーなしでファイル名 <B> を読み、 <A> に代入する	<A> = pd . read_csv ( <B> , header = None )	= <A> . read_csv ( <B> , header = None )
表データ <A> 全体を <B> 列を軸にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
データフレーム <A> の <B> カラムについての箱ひげ図をプロットする	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
そこで、線は転戦をする	linestyle = 'dotted'	kind = 'dotted'
左側のデータの位置と右側のデータの <D> 表属性をキーとして、 <B> データフレームとデータフレーム <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<B> の <C> 位置の名前を <D> に変更し、 <A> に代入する	<A> = <B> . rename ( index = { <C> : <D> } )	<A> = <B> . rename ( index = { <C> : <D> } )
表 <A> の表属性 <B> と <C> 表属性と <D> 表属性についての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> 列の欠損値を列 <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
同じグラフ内で表データ <A> の <B> カラムとカラム <C> と <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の位置を軸に昇順でソートして、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<B> の列 <C> を昇順でソートを <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
左側のデータの位置と右側のデータの <C> 列をキーとして、表 <A> と表 <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	<A> . merge ( <B> , <C> , left_index = True , right_on = <D> )
そこで、マーカーの種類のエッジ色は黄緑を用いる	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
左側のデータのインデックスと右側のデータの <B> コラムを項目名として 2 つのデータをマージし、 <A> にする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
そこで、マーカーの輪郭線は <A> を使う	markeredgewidth = <A>	markeredgewidth = <A>
<A> をファイル <B> という名前にして CSV ファイルに書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
そこで、目印は○を使う	marker = 'o'	marker = 'o'
分割数を <C> 、ビンの名前をリスト <D> として、データフレーム <A> の <B> カラムを分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	for pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表 <A> のコラム <B> と <C> コラムの相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
表 <A> において、カラム <B> の箱ひげ図を描く	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
<C> 区切りで表データとしてパス <B> を読み込み、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
左側のデータのインデックスと右側のデータの <D> 列を項目名として、表データ <B> と表データ <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表データ <A> に存在する <B> を NaN とする	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
データフレーム <A> の重複する値がある行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	drop_duplicates = <A> . drop_duplicates ( )
位置とコラム <C> を項目名としてデータフレーム <A> とデータフレーム <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
一番左の列を位置に指定して、ファイル <A> をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
同じグラフ内で <A> データフレーム列 <B> と <A> データフレーム列 <C> と <A> データフレーム列 <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の NaN を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	method . fillna ( method = 'ffill' )
同じグラフ内で <A> 表 <B> カラムと表 <A> <C> カラムと表 <A> カラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> という名前のエクセルデータ <B> のシート全部を表データに格納して、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = None )	X = pd . read_excel ( <B> , sheet_name = None )
データフレームとしてファイル名 <A> を <B> 区切りで読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
データフレーム <B> の欠損値をドロップし、 <A> とする	<A> = <B> . dropna ( )	alpha = <B> . dropna ( )
データフレーム <A> の中の <B> カラムに重複はあるか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
境界値をリスト <D> として、 <B> 表データのカラム <C> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
表 <A> と表 <B> を縦にマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> 中の欠損の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表を <C> 区切りでパス <B> から読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表データ <A> を表属性 <B> の値を元に昇順でソートし、再代入する	<A> = <A> . sort_values ( <B> )	for <A> = <A> . sort_values ( <B> )
そこで、目印の輪郭色はシアンを使う	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
<A> を <B> を表属性名として表データにする	pd . pd . DataFrame ( <A> , columns = <B> )	<A> . pd . DataFrame ( <B> , columns = <C> )
そこで、目印の輪郭色はネイビーをする	markeredgecolor = 'navy'	markeredgecolor = 'navy'
<B> の <C> を未入力の値に置換し、未入力の値がある行を落として、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	x <A> = <B> . replace ( <C> , np . nan ) . dropna ( )
<A> と <B> を箱髭図に描画する	plt . boxplot ( [ <A> , <B> ] )	plt . boxplot ( [ <A> , <B> ] )
表データ <A> の未入力の値を直前の行の値で埋めて、 <A> に代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> のカラム名を <B> から <C> にリネームする	<A> . rename ( columns = { <B> : <C> } )	'words' <A> . rename ( columns = { <B> : <C> } )
表 <A> 中のカラムそれぞれに存在する <B> の個数を計算する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
同じ軸で表データ <A> の <B> コラムと表データ <A> のコラム <C> と <A> 表データのコラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の表属性 <B> と <C> 表属性を消して、置き換える	<A> . drop ( [ <B> , <C> ] , axis = 1 , inplace = True )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
エクセルファイル <A> からデータフレームを読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> )
そこで、目印の色としてシアンを使用する	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
同じ x 軸と y 軸で <A> 表データの <B> 表属性と表属性 <C> と表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 全体を <B> コラムを元にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> 中のそれぞれのカラムに存在する <B> の個数の合計を求める	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> 内の表属性 <B> と表属性 <C> に重複はあるのならば	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle . duplicated ( subset = [ <A> , <B> , <C> ] ) :
<B> 内の重複する行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行をドロップする	<A> . drop_duplicates ( keep = False )	df1 <A> . drop_duplicates ( keep = False )
そこで、ビックエンディアンを使う	byteorder = 'big'	flush = 'big'
表 <A> のそれぞれの行に対して重複があるかどうかを判定する	<A> . duplicated ( )	<A> . duplicated ( )
<B> 番目の列を位置に、 <A> ファイルを読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
データフレーム <B> 内の表属性 <C> に重複がある行を落とし、 <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
カンマ区切りで表をファイルパス <A> から読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
<A> の <B> 列が <C> もしくは <D> のデータ	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
そこで、確率的勾配降下法にモーメントをつける	solver = 'adam'	marker = '*'
データフレーム <A> の中の未入力の値をデータフレーム <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	<A> . fillna ( <A> . mean ( ) )
表データ <A> 内に重複があるのかチェック	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <B> の <C> カラムとカラム <D> を降順にソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> のオブジェクトデータの要約統計量を確認する	<A> . describe ( include = 'O' )	<A> . describe ( include = 'O' )
表 <A> の <B> 表属性の未記入の値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
表データ <A> を表属性 <B> を軸にソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
表データ <A> の <B> 表属性と <A> 表データの <C> 表属性と <A> 表データの <D> 表属性の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体をインデックスに基づいてソートし、再代入する	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
表データ <B> の欠損値を表データ <B> の平均値で補い、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
<A> 内のカラム <B> とカラム <C> に重複があるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 内の列 <B> に重複がある行を消す	<A> . drop_duplicates ( subset = <B> )	'words' <A> . drop_duplicates ( subset = <B> )
データフレーム <A> のそれぞれの行において重複があるかどうかを判定する	<A> . duplicated ( )	<A> . duplicated ( )
<B> ( データフレーム ) の <C> 表属性と表属性 <D> を逆順にして、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <B> を <C> カラムの値を軸にソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<A> と <B> と <C> を箱ひげ図に作図する	plt . boxplot ( [ <A> , <B> , <C> ] )	plt . boxplot ( [ <A> , <B> , <C> ] )
<A> をインデックスを元に並び替えて、 <A> にする	<A> = <A> . sort_index ( )	sort_index <A> = <A> . sort_index ( )
グラフ幅を <C> として、 <A> 軸を <A> とした <B> の棒グラフを描く	plt . bar ( <A> , <B> , width = <C> )	plt . barh ( <A> , <B> , width = <C> )
データフレーム <B> の位置 <C> の名前を <D> にリネームして、 <A> にする	<A> = <B> . rename ( index = { <C> : <D> } )	<A> = <B> . rename ( index = { <C> : <D> } )
<A> 内の <B> コラムに重複があるのかチェック	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
<A> <B> 列と <A> 表データ列 <C> と <A> 表データ列 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> カラムが <C> 以上のデータを計算する	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
表データ <A> のカラム <C> の曜日の数値型を見、  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek
表 <A> の <B> コラムの一意の値	<A> [ <B> ] . unique ( )	<A> [ <B> ] . unique ( )
リスト <B> を <C> をカラム名としてデータフレームに変換して、 <A> とする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	X = pd . pd . DataFrame ( <B> , columns = <C> )
表 <B> 全体を列 <C> の値を元に昇順でソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表データ <A> 内の未記入の値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 中の未入力の値を削除を <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
ファイル <B> から <C> 区切りで表を読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<B> というエクセルの <C> 番目のシートを読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> を数値データに変換し、 <A> とする	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
ビン数を <C> 、ビンのラベルを整数値として、 <A> 表データの表属性 <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	pd . cut ( <A> [ <B> ] , <C> , label = False )
<B> ファイルから表を <C> 区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
カラム <A> とカラム <B> に重複はあるのか表示する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> のコラム <B> の名前を <C> に、 <D> コラムの名前を <E> に変更し、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	plt . rename ( <A> , columns = { <B> : <C> , <D> : <E> } )
<B> のカラム <C> と <D> カラムを大きい順にソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> の列 <B> と列 <C> を消す	<A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> . drop ( [ <B> , <C> ] , axis = 1 )
同じ x 軸と y 軸でデータフレーム <A> 列 <B> と <A> データフレーム列 <C> と <A> データフレーム <D> 列を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> 全体をインデックスを元に昇順でソートを <A> とする	<A> = <B> . sort_index ( )	<B> = sort_index . sort_index ( )
インデックスなしで <A> データフレームを <B> ファイルパスに保存する	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
表データ <B> を <C> 表属性の値を軸にソートし、 <A> に代入する	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<A> を縦軸、 <B> を横軸として、散布図を表示する	plt . scatter ( <A> , <B> )	scatter = <A> . plot ( <B> )
表 <A> 内の <B> カラムに重複があるのか確認を見る	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> をエクセルファイル <B> という名前で保存する	<A> . to_excel ( <B> )	X <A> . to_excel ( <B> )
表 <A> の <C> コラムの秒を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . second	<B> <A> [ <C> ] . dt . second
<A> の <C> 表属性に <D> 関数を適用して、新しく <B> コラムにする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の表属性 <B> に重複がある行をドロップして、置き換える	<A> = <A> . drop_duplicates ( subset = <B> )	df . drop_duplicates ( subset = <B> , inplace = True )
表データ <A> 内の <B> を欠損値に置換し、欠損値がある行を落とす	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
同じ軸のセットで表データ <A> の <B> 列と表データ <A> の <C> 列と表データ <A> の列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> という名前のエクセルデータの <B> シート名をデータフレームに格納する	pd . read_excel ( <A> , sheet_name = <B> )	<A> . read_excel ( <B> , sheet_name = None )
<A> のカラム <B> の分	<A> [ <B> ] . dt . minute	<A> [ <B> ] . dt . minute
表 <A> を <B> でグループ化し、 <C> コラムと <D> カラム 'で集約し、' 出現数'コラムで並べ直す	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , <D> : sum } ) . sort_values ( by = <D> )	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , <D> : sum } ) . sort_values ( by = <D> )
表データ <A> のカラム <B> の曜日の数値型を見る	<A> [ <B> ] . dt . dayofweek	<A> [ <B> ] . dt . dayofweek
<A> ( データフレーム ) のコラム <B> と <C> コラムを値が大きい順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
表としてカンマ区切りでファイル名 <A> を読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
<A> カラムとカラム <B> に重複はあるか調べる	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> 中の <B> 列と列 <C> に重複はあるのかどうかチェックする	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の表属性 <B> と <C> 表属性ごとに <D> 表属性の値の合計値を求める	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
そこで、目印の輪郭色は赤紫色をする	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
<A> のカラム名	<A> . columns	<A> . columns
カンマ区切りで表データを <A> ファイルから読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
<A> ( データフレーム ) のカラム <B> を順番になるようにして、置き換える	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> 内の <B> カラムに重複があるかチェックを表示する	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
<B> コラムに重複がある行を削除を <A> とする	<A> = <A> . drop_duplicates ( subset = <B> )	plt . drop_duplicates ( subset = <B> )
ファイルパス <B> に <A> データフレームを文字化けしないように書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
分割数を <D> 、ビンのラベルを整数値として、 <B> 表のカラム <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	X = pd . cut ( <A> [ <B> ] , <C> , label = False )
カラム <A> に重複はあるのか	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
同じ軸のセットで表 <A> の列 <B> と <C> 列と列 <D> を箱髭図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を学習させる	<A> . fit ( X )	X . fit ( <A> )
<A> の <B> 列と列 <C> の相関	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
カラム <A> を値が小さい順に並び替えて、インプレースする	df . sort_values ( <A> , inplace = True )	X . sort_values ( <A> , inplace = True )
x 軸の軸ラベルを <A> に設定する	plt . xlabel ( <A> )	plt . xlabel ( <A> )
表 <A> と <B> データフレームを縦向きにくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> の <B> カラムと <C> カラムと <D> カラムについて関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
そこで、マーカーの色は黄緑である	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
表データ <A> の <B> カラムと <C> カラムごとに <D> カラムの値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <B> をインデックスでソートを <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
カラム <A> とカラム <B> に重複があるのかどうかを確認する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
一番左の列をインデックスにして、ファイルパス <B> を表データに格納し、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表 <A> の列 <B> の <C> 行目を得る	<A> [ <B> ] [ <C> ]	iloc [ <A> [ <B> ] [ <C> ]
<A> 内の <B> カラムに重複が存在するのか確認を表示する	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
コラム <B> を小から大へとし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> の NaN を <A> 表データの平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
そこで、グラフ線を点線で描く	linestyle = 'dotted'	'dotted' = 'dotted'
表データ <A> の列 <B> ごとに列 <C> の平均値	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
<A> の先頭から <B> 行までを確認する	<A> [ : <B> ]	plt . : ( <A> , <B> )
表データ <A> 内に存在する <B> を未入力の値に置換し、再代入する	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
表データ <A> のコラム <B> とコラム <C> を大から小へと並び替えて、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	for <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
そこで、円グラフをする	kind = 'pie'	kind = 'pie'
分割数を <C> として、表データ <A> のカラム <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
データフレーム <A> 内の欠損の合計を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> のカラム <B> 内の前後の行の差分を計算する	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
データフレーム <A> の中の未記入の値の数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、マーカーの形状の色は赤紫を用いる	markerfacecolor = 'magenta'	markeredgecolor = 'magenta'
<A> の <B> 表属性の値をソート	<A> . sort_values ( <B> )	df . sort_values ( <B> )
同じ軸で表データ <A> の <B> 列と列 <C> と列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カンマ区切りで <B> ファイル名から表を読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
データフレーム <A> 内の欠損したセル数をカウントする	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> のコラム <B> の値を昇順でソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <A> の表属性 <B> が <C> のデータ	<A> [ <A> [ <B> ] == <C> ]	X <A> [ <A> [ <B> ] == <C> ]
データフレーム <A> の <B> 表属性をグループ化して、値ごとのデータ数	<A> . groupby ( <B> ) . size ( )	'words' . groupby ( <A> , <B> ) . size ( )
一番左の列をインデックスにして、パス <A> をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
先頭の列をインデックスに指定して、ファイルパス <A> をデータフレームに格納する	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
同じ x 軸と y 軸で表データ <A> のコラム <B> と表データ <A> のコラム <C> と表データ <A> のコラム <D> を箱髭図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> をファイル <B> に書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
<A> 全体を <B> コラムの値でソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<B> という名前のエクセルファイルの <C> 番目のシートを読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
カラム <B> とカラム <C> を大きい順にして、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	X = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> 内にある <B> を NaN に置き換える	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
表データ <A> 中のコラム <B> に重複がある行をドロップを <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	<A> = <A> . drop_duplicates ( subset = <B> )
カラム <A> とカラム <B> を大きい順にし、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
列 <A> に重複がある行をドロップして、インプレースする	df . drop_duplicates ( subset = <A> , inplace = True )	<A> . drop_duplicates ( subset = <A> , inplace = True )
データフレーム <A> の <B> 表属性と表属性 <C> と <D> 表属性について関係性を一気に作画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<B> という名前のエクセルファイル <B> のシート全部を表データに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表 <A> 内の NaN の合計を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <B> とデータフレーム <C> に対して、 <D> カラムをキーとしてデータを内部結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = <B> , <C> = <D> )
<A> 内の <B> コラムに重複があるのかチェックを見る	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
分割数を <C> 、ビンのラベルを整数値として、 <A> 表データの列 <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
同じグラフ内で <A> データフレームのコラム <B> とデータフレーム <A> のコラム <C> とデータフレーム <A> の <D> コラムをボックスチャートで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の欠損値が存在する行をドロップする	<A> . dropna ( )	<A> . dropna ( )
インプレースによって <A> ( データフレーム ) の未記入の値を平均値で穴埋めする	<A> . fillna ( <A> . mean ( ) , inplace = True )	fillna <A> . mean ( ) , inplace = True )
表 <A> の <B> カラムと <C> カラムを大から小へとソートし、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
<A> 内の欠損を直前の行の値で補って、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> の <B> 列を軸に昇順で並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	df . sort_values ( <A> , <B> , inplace = True )
<B> というエクセルを読み、 <A> とする	<A> = pd . read_excel ( <B> )	= <A> . read_excel ( <B> )
表データ <B> の <C> コラムとコラム <D> を大きい順にソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> に重複はあるか確認する	<A> . duplicated ( )	<A> . duplicated ( )
表 <A> 全体を表属性 <B> を軸に並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
同じ軸のセットで表データ <A> のカラム <B> と <A> 表データの <C> カラムと表データ <A> のカラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の <B> を NaN に置換し、 NaN が存在する行を消し、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表データ <A> において、 <B> カラムと <C> と <D> の関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> の列 <B> に重複がある行をドロップして、置き換える	<A> . drop_duplicates ( subset = <B> , inplace = True )	encoding = <A> . drop_duplicates ( subset = <B> )
<A> のカラム <B> 、 <C> 、 <D> を確認する	<A> [ [ <B> , <C> , <D> ] ]	'words' <A> [ <B> , <C> , <D> ] ]
表 <A> の <B> カラムと <C> カラムの相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
<A> のコラム <B> とデータフレーム <A> のコラム <C> とデータフレーム <A> のコラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> データフレーム <B> コラムとデータフレーム <A> <C> コラムと <A> データフレーム <D> コラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
文字コードをシフト JIS として、 <B> ファイル名を読んで、 <A> にする	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )
描画したプロットを <A> として書き出す	plt . savefig ( <A> )	df . savefig ( <A> )
データフレーム <A> 全体をカラム <B> を元にソートし、再代入する	<A> = <A> . sort_values ( <B> )	1 = <A> . sort_values ( <B> )
表データ <B> 中の欠損値が存在する行をドロップし、 <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> のカラム <B> とカラム <C> の相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
表 <A> の <B> コラムとコラム <C> とコラム <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の <B> を未記入の値に置換し、未記入の値が存在する行をドロップして、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> の <B> カラムのユニークな要素数	<A> [ <B> ] . nunique ( )	'words' <A> [ <B> ] . nunique ( )
表データ <A> 中の未記入の値を <B> に置き換え、置き換える	<A> . fillna ( <B> , inplace = True )	<A> = <A> . fillna ( <B> )
表 <A> 全体を列 <B> の値を軸に並び替えて、置き換える	<A> = <A> . sort_values ( <B> )	sort_index = <A> . sort_values ( <B> )
データフレーム <A> の列名を <B> から <C> に、 <D> から <E> に変更し、インプレースする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
そこで、色は黄色をする	color = 'yellow'	sep = 'yellow'
<A> の重複した行を消す	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
データフレーム <A> の全ての列で重複している行を取り除いて、 <A> に代入する	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表 <A> をインデックスを元に並び替えて、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表データ <B> 中の未入力の値を含む行を削除を <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <A> 内のコラム <B> に重複はあるのか	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
<A> をグラフの y 軸、 <B> を x 軸として、散布図を描画する	plt . scatter ( <A> , <B> )	plt . scatter ( <A> , <B> )
<A> 内の欠損を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method . fillna ( method = 'ffill' )
グラフを <A> という名前で書き出す	plt . savefig ( <A> )	df . savefig ( <A> )
表 <A> 全体を <B> カラムを元に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
一番左の列を位置に設定して、 <A> パスを読み込む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
<B> の <C> コラムを軸に並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
同じ x 軸と y 軸で表データ <A> のコラム <B> と <C> コラムとコラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> の列 <C> の名前を <D> に、 <E> 列の名前を <F> にリネームして、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
ビン数を <D> として、データフレーム <B> のコラム <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
<A> の <B> 表属性と表属性 <C> の相関係数を表示する	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
<B> 全体を列 <C> の値を元に昇順でソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表 <B> 全体を <C> コラムを元に並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<A> ( データフレーム ) の <B> 列と <C> 列を大から小へと並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	range = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <B> をインデックスを元に昇順でソートし、 <A> にする	<A> = <B> . sort_index ( )	sort_index = <B> . sort_index ( )
表データ <A> のカラム <B> ごとに <C> カラムの平均を求める	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
表 <B> の欠損値を落として、 <A> とする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
表 <B> と <C> 表データを縦向きに結合して、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
<B> に存在する <C> を欠損に置換し、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	<B> = <C> . replace ( <C> , np . nan )
エクセルファイル <B> の <C> シート名をデータフレームとして読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
同じグラフ内で表データ <A> <B> コラムと表データ <A> <C> コラムと表データ <A> <D> コラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> のコラム <B> とコラム <C> を削除する	<A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> . drop ( [ <B> , <C> ] , axis = 1 )
<B> の <C> カラムの値を軸に並び替えて、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<A> の NaN を直前の行の値で補って、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
データフレーム <A> の <B> 列と列 <C> を削除する	<A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 )
表 <A> 中の NaN を落とす	<A> . dropna ( )	dropna . dropna ( )
<A> の表属性 <B> の値を軸にソートする	<A> . sort_values ( <B> )	fillchar = <A> . sort_values ( <B> )
表 <A> の中の <B> コラムに重複が存在するのかチェックを調べる	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
表データ <A> の <B> 表属性の名前を <C> に、表属性 <D> の名前を <E> にリネームし、インプレースする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
そこで、マーカーの輪郭色は紫色をする	markeredgecolor = 'purple'	markeredgewidth = 'purple'
そこで、正方形の目印を表示する	marker = 's'	marker = 's'
<B> を <C> 列で並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<A> 中の未記入の値を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	method . fillna ( method = 'ffill' )
<A> カラムを one - hot 表現にする	pd . get_dummies ( df [ <A> ] )	pd . get_dummies ( df [ <A> ] )
データフレーム <A> 内の欠損値が存在する行をドロップ	<A> . dropna ( )	<A> . dropna ( )
<A> ( データフレーム ) のコラム <B> をソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	for <A> . sort_values ( <B> , inplace = True )
<B> ファイル名からカンマ区切りで表を読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
<A> の全ての列の重複する値がある行を取り除き、 <A> に代入する	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表 <A> の表属性 <B> と <C> 表属性と <D> 表属性について関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	. sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> のカラム <B> とカラム <C> を値が大きい順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<A> ( データフレーム ) の列 <B> を小さい順にソート	<A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
列番号 <B> を位置に、パス <A> を表に格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> 内の欠損値の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> カラムに重複があるかどうか確認を確認する	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
一番左の列をインデックスに指定して、ファイル名 <B> から読み込み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<A> の表属性 <B> と <C> 表属性ごとに <D> 表属性の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
データフレーム <A> の列 <B> と <C> 列ごとに <D> 列の値の合計値を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<A> とデータフレーム <B> を縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> の表属性 <B> と表属性 <C> を消して、置き換える	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> の列 <B> を軸にソートし、置き換える	<A> = <A> . sort_values ( <B> )	plt . sort_values ( <A> , <B> , inplace = True )
データフレーム <A> から重複している行を取り除いて、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表 <A> の列 <B> と <C> 列と列 <D> について関係性を一気に作画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
左側のデータのインデックスと右側のデータの表属性 <C> を項目名として、 <A> データフレームと <B> データフレームをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表 <A> の中の <B> を未記入の値に置換し、未記入の値がある行を削除して、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	y <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<B> の欠損値を <B> データフレームの平均値で埋め、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
同じ軸のセットで <A> 表表属性 <B> と <A> 表表属性 <C> と表 <A> 表属性 <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体を <B> 列でソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
表データ <A> 内のカテゴリ変数をダミー変数に変換し、 <A> にする	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
同じ軸のセットで表 <A> の <B> コラムと表 <A> のコラム <C> と <A> 表の <D> コラムを箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の <B> を欠損に置換し、欠損がある行を削除して、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	X = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> に重複は存在するのかチェックを表示する	<A> . duplicated ( )	X . duplicated ( )
同じ軸で表 <A> の列 <B> と <C> 列と <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> を位置を元にソートを <A> とする	<A> = <B> . sort_index ( )	x = <B> . sort_index ( )
一番左の列を位置に指定して、 <A> ファイルパスを読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> の <B> 表属性を柱状図で作画する	plt . hist ( <A> [ <B> ] )	fontsize . hist ( <A> [ <B> ] )
表データ <A> の <B> カラムの未記入の値をカラム <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	pd . qcut ( <A> [ <B> ] , 2 )
同じ軸のセットで <A> データフレームの <B> 表属性と表属性 <C> と <D> 表属性を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表属性 <D> をキーとして、 <B> 表と <C> 表を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
y 座標にラベル <A> を加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
<A> 内の未記入の値を <A> データフレームの平均値で補って、 <A> に代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
そこで、種類は円グラフをする	kind = 'pie'	kind = 'pie'
エクセル <B> からデータフレームに読み、 <A> とする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
表データ <A> の <B> カラムと <C> カラムとカラム <D> についての箱髭図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> とデータフレーム <B> に対して、表属性 <C> を項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表 <B> の <C> コラムとコラム <D> を降順にソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表データ <A> 全体を表属性 <B> の値を軸にソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> ( データフレーム ) の列 <B> を値が小さい順にソートし、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表 <A> の <B> 表属性の欠損を表属性 <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
表データ <A> のカラム <B> とカラム <C> ごとにカラム <D> の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> 中のカラム <B> に重複がある行を削除を <A> とする	<A> = <A> . drop_duplicates ( subset = <B> )	plt . drop_duplicates ( subset = <B> )
インデックスと <C> カラムを項目名として表データ <A> と <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> の <B> 列をダミー変数化し、 <A> にする	<A> = pd . get_dummies ( <A> [ <B> ] )	X = pd . get_dummies ( <A> [ <B> ] )
データフレーム <A> 内の列にある <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	<C> <A> . isin ( [ <B> ] ) . sum ( )
<A> という名前のエクセルデータのシート全部から読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
そこで、シアンで表示する	color = 'cyan'	markerfacecolor = 'cyan'
<A> 全体をコラム <B> の値を元にソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <A> の <C> コラム内の前後の行の差分を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )
左外部結合で <B> 表データと <C> 表データを一つにまとめ、 <A> にする	<A> = pd . merge ( <B> , <C> , how = 'left' )	X = pd . merge ( <A> , <B> , <C> , how = 'left' )
表データ <A> のカラム <B> を四分位数ごとで分割する	pd . qcut ( <A> [ <B> ] , 4 )	pd . qcut ( <A> [ <B> ] , 4 )
<A> のコラム <B> を軸に昇順で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> の <B> 表属性と <C> 表属性を値が大きい順に並び替える	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
表 <A> のコラム <B> の月を見る	<A> [ <B> ] . dt . month	X <A> [ <B> ] . dt . month
左側のデータのインデックスと右側のデータの <C> カラムをキーとして、表 <A> と <B> 表を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
そこで、目印の輪郭色は黄色をする	markeredgecolor = 'yellow'	sum = 'yellow'
同じグラフ内で <A> データフレームカラム <B> と <A> データフレームカラム <C> とデータフレーム <A> <D> カラムを箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、打点の色をグレーとする	markerfacecolor = 'gray'	markerfacecolor = 'gray'
表データ <A> 内の重複する行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	inplace <A> . drop_duplicates ( inplace = True )
そこで、赤紫色をマーカーの輪郭色にする	markeredgecolor = 'magenta'	markerfacecolor = 'magenta'
表データ <A> 内の <B> カラムとカラム <C> に重複はあるのかどうか表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <B> の表属性 <C> と <D> 表属性を消し、 <A> とする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
<A> 表データの内容を確認する	<A> . head ( )	pd . head ( <A> )
データフレーム <A> 中の未記入の値を <B> に置き換えて、 <A> とする	<A> = <A> . fillna ( <B> )	X = <A> . fillna ( <B> )
そこで、マーカーの形のエッジ色は黄緑とする	markeredgecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
そこで、色としてシアンを使用する	color = 'cyan'	markerfacecolor = 'cyan'
ビン数を <C> 、ビンのラベルを <D> リストとして、 <A> データフレームの列 <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表データ <A> <B> 列と <A> 表データ列 <C> と <A> 表データ列 <D> についてのボックスチャートを描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の <C> 列と <D> 列を大から小へとソートし、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> 内の <B> 表属性に重複があるのかどうか見る	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
<C> カラムを項目名として、表 <A> と表 <B> を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> という名前のエクセルのシート名 <B> からデータフレームを読む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
出力するグラフのサイズを <A> x6 に指定する	plt . figure ( figsize = ( <A> , 6 ) )	fontsize . figure ( figsize = ( <A> ) )
データフレーム <A> の <B> カラムとカラム <C> ごとに <D> カラムの値の和を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
同じ軸のセットで表データ <A> の表属性 <B> と表データ <A> の表属性 <C> と <A> 表データの表属性 <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の欠損値を <B> とし、 <A> に代入する	<A> = <A> . fillna ( <B> )	X = <A> . fillna ( <B> )
<B> のコラム <C> の値を昇順でソートし、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<A> という名前のエクセルファイルの全部のシートから読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> のカラム <C> の秒を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . second	<A> [ <B> ] = <A> [ <C> ] . dt . second
データフレーム <A> を <B> 表属性に基づいてソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
左側のデータのインデックスと右側のデータの <B> 表属性を項目名として 2 つのデータを結合し、 <A> にする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
同じ軸でデータフレーム <A> の列 <B> と <A> データフレームの <C> 列とデータフレーム <A> の <D> 列を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ軸のセットでデータフレーム <A> 表属性 <B> とデータフレーム <A> 表属性 <C> と <A> データフレーム <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、ラインスタイルは点と線にする	linestyle = 'dashbot'	marker = 'dashbot'
表 <A> 中の未記入の値の数を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 中の列 <B> と <C> 列に重複があるか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> 表属性と <B> 表属性に重複があるかどうかチェックする	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表 <A> のオブジェクトデータの統計情報	<A> . describe ( include = 'O' )	'words' <A> . describe ( include = 'O' )
<A> の表属性 <B> の各要素の出現頻度を調べる	<A> [ <B> ] . value_counts ( )	'words' <A> [ <B> ] . value_counts ( )
<A> をインデックスに基づいてソートし、 <A> にする	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
表データ <A> の <B> カラムをグループ化して、値ごとのデータ数	<A> . groupby ( <B> ) . size ( )	'words' . groupby ( <A> , <B> ) . size ( )
左側のデータの位置と右側のデータのコラム <B> を項目名として 2 つのデータをマージして、 <A> とする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
そこで、マーカーの色は青色を使う	markerfacecolor = 'blue'	markerfacecolor = 'blue'
そこで、シアンを目印の輪郭色にする	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
ビン数を <D> 、ビンのラベルを <E> リストとして、 <B> データフレームの <C> カラムを分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	X = pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表 <A> のそれぞれのカラムにある <B> の個数の合計値を調べる	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表 <A> のコラム <B> を one - hot 表現に変換する	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
<B> というエクセル <B> を表データに格納して、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	X = pd . read_excel ( <B> , sheet_name = None )
<A> の <B> コラムを軸に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
データフレーム <A> において、 <B> コラムの箱ひげ図を描く	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
表 <A> 内の未入力の値をデータフレーム <A> の平均値で補って、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	df = <A> . fillna ( <A> . mean ( ) )
表データ <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
そこで、目印の輪郭色として水色を使用する	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
表 <A> 全体を列 <B> の値に沿ってソートし、置き換える	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> の <B> 表属性と <C> 表属性を逆順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
全結合でデータフレーム <A> とデータフレーム <B> を結合する	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
データフレーム <A> の重複した行数を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> をファイルパス <B> という名前で CSV ファイルに書き込む	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
境界値をリスト <D> として、データフレーム <B> の <C> 表属性をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
表 <A> の欠損値を <A> 表データの平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表データ <B> と <C> 表を縦にマージし、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表データ <B> を <C> 表属性の値を元にソートを <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表 <A> の欠損値を落として、再代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
コラム <B> と <C> コラムを大から小へとソートして、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> と <B> 表を縦方向にくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <B> 内の <C> を欠損に置換し、欠損が存在する行を落として、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
表データ <A> <B> 列とデータフレーム <A> <C> 列と <A> データフレーム列 <D> のボックスチャートを一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中の <B> コラムに重複があるかどうか調べる	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
棒グラフの位置を真ん中として、 <A> 軸を <A> とした <B> の棒グラフを作画する	plt . barh ( <A> , <B> , align = 'center' )	plt . bar ( <A> , <B> , align = 'center' )
データフレーム <B> の <C> 表属性の名前を <D> に、 <E> 表属性の名前を <F> にリネームして、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	x = <B> , <C> : <D> , <E> , <E> : <F> } )
先頭の列を位置に、 <B> ファイルをデータフレームに格納して、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
パス <A> を表として <B> 区切りで読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
データフレーム <A> の <B> 行目の <C> コラム	<A> . iloc [ <B> ] [ <C> ]	<A> . iloc [ <B> ] [ <C> ]
表 <B> 中にある <C> を NaN に置換して、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	<B> = <C> . replace ( <C> , np . nan )
一番左の列を位置にして、 <A> ファイルからデータフレームとを読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
表 <A> の <B> カラムと <A> 表データの <C> カラムと <A> 表データの <D> カラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のコラム <B> と表 <A> のコラム <C> と <A> 表のコラム <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの輪郭色は黄緑を使う	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
表データ <B> 全体をコラム <C> を軸にソートを <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
そこで、マーカーの形状を五角形とする	marker = '*'	marker = '*'
表 <A> の中の欠損がある行を消し、インプレースする	<A> . dropna ( inplace = True )	'words' <A> . dropna ( inplace = True )
表データをファイルパス <B> から <C> 区切りで読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
そこで、マーカーの輪郭色はネイビーを使う	markeredgecolor = 'navy'	markeredgecolor = 'navy'
そこで、マーカーの輪郭線は <A> とする	markeredgewidth = <A>	markeredgewidth = <A>
そこで、マーカーの形状は正方形を使う	marker = 's'	marker = 's'
<A> 内の欠損値を表 <A> の平均値で埋めて、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> をカラム <B> を軸に並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	start <A> = <B> . sort_values ( <B> )
データフレーム <A> のカラム <B> ごとにカラム <C> の平均を求める	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
表 <A> 中の欠損の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
ヘッダーなしで <A> ファイル名を読み込む	pd . read_csv ( <A> , header = None )	pd . read_csv ( <A> , header = None )
同じグラフ内で表 <A> の <B> コラムとコラム <C> とコラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の列それぞれに存在する <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
ビン数を <D> 、ビンの名前を整数値として、データフレーム <B> の列 <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	df = pd . cut ( <A> [ <B> ] , <C> , label = False )
表データ <A> の <B> コラムと表データ <A> の <C> コラムと <A> 表データのコラム <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーのエッジ色としてネイビーを用いる	markeredgecolor = 'navy'	markeredgecolor = 'navy'
データフレーム <A> のインデックスをリセットする	<A> . reset_index ( )	'words' <A> . reset_index ( )
<A> の表属性 <D> について、表属性 <B> を位置、 <C> 表属性を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
表データ <A> 中にある <B> を欠損に置き換えて、置き換える	<A> . replace ( <B> , np . nan , inplace = True )	np . replace ( <A> , <B> , np . nan , inplace = True )
<A> のそれぞれのカラムにある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
同じ軸のセットで <A> 表データの列 <B> と <A> 表データの列 <C> と <A> 表データの列 <D> を箱髭図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表を <A> ファイルパスから読む	pd . read_csv ( <A> )	pd . read_csv ( <A> )
表データ <A> の列 <B> の要素	<A> [ <B> ] . values	range = ( <A> [ <B> ] )
データフレーム <B> の <C> コラムの名前を <D> に、 <E> コラムの名前を <F> にリネームして、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
表 <A> のそれぞれのカラムに存在する <B> の個数の合計値を調べる	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
そこで、打点の色は紫を使う	markerfacecolor = 'purple'	markerfacecolor = 'purple'
データフレーム ( <A> ) の <C> コラムをグラフの <B> 軸、 <E> コラムをグラフの <D> 軸として、散布図を作成する	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )
<A> カラムとカラム <B> に重複は存在するのかを確認する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、マーカーの輪郭色はマゼンタをする	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
重複する行を消し、置き換える	df . drop_duplicates ( inplace = True )	drop_duplicates = df . drop_duplicates ( )
そこで、円グラフに小数点 2 位まで構成割合をパーセントを付けて出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
データフレーム <A> の末尾の <B> 行	<A> . tail ( <B> )	<A> . tail ( <B> )
そこで、グラフの種類は面グラフを使う	kind = 'area'	linestyle = 'area'
データフレーム <A> の欠損を表 <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
先頭の列を位置として、 <A> ファイルパスを読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> の列 <B> が <C> もしくは <D> のデータを得る	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
表 <A> 内の NaN が存在する行を削除し、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
データフレーム <B> 全体をカラム <C> を元にソートして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表 <A> のインデックス名を <B> から <C> にリネームして、 <A> とする	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
そこで、目印の色はマゼンタにする	markerfacecolor = 'magenta'	marker = 'magenta'
<B> 中の重複している行を消して、 <A> にする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
<A> の中の欠損を表データ <A> の平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	unique = <A> . fillna ( <A> . mean ( ) )
表 <A> 内の <B> コラムに重複がある行を落として、再代入する	<A> = <A> . drop_duplicates ( subset = <B> )	drop_duplicates = <A> . drop_duplicates ( subset = <B> )
そこで、打点のエッジ色としてネイビーを用いる	markeredgecolor = 'navy'	markeredgecolor = 'navy'
<A> という名前のエクセル <A> の全部のシートをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表 <A> と <B> データフレームに対して、 <C> コラムを項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> ( データフレーム ) の表属性 <B> を昇順にソート	<A> . sort_values ( <B> )	df . sort_values ( <B> )
列番号 <B> をインデックスとして、ファイル名 <A> からデータフレームとを読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> の中のそれぞれのカラムにある <B> の個数の合計値を算出する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
同じ軸で <A> データフレーム <B> 列と <A> データフレーム <C> 列と <A> データフレーム列 <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> ( データフレーム ) の列 <C> を小さい順にし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
表 <A> の未入力の値を <B> に置換し、置き換える	<A> . fillna ( <B> , inplace = True )	fillchar = <A> . fillna ( <B> )
<B> のコラム <C> を昇順でソートを <A> に代入する	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
そこで、マーカーの色として青色を用いる	markerfacecolor = 'blue'	markerfacecolor = 'blue'
データフレーム <A> のコラム <B> とコラム <C> を逆順にソートして、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	X = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <A> 内の未記入の値を <A> 表の平均値で補って、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
一番左の列を位置に指定して、ファイル名 <B> からデータフレームとを読んで、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表データ <B> と表 <C> を縦向きに連結を <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<B> というエクセルデータのシート名 <C> を読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
同じ軸で表データ <A> の <B> カラムと表データ <A> のカラム <C> と <A> 表データのカラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> を <B> ファイルパスという名前にして書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
データフレーム <B> の <C> 列をソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	x <A> = <B> . sort_values ( <C> )
エクセルファイル <B> の <C> のシートを読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表データ <B> とデータフレーム <C> を縦にくっつけて、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表 <A> 内の重複した行の数を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
列 <A> を値が小さい順にして、置き換える	df = df . sort_values ( <A> )	df . sort_values ( <A> , inplace = True )
表 <A> の表属性 <B> ごとに表属性 <C> の平均値	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
<A> 表属性に重複があるか表示してみる	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
分割数を <D> として、 <B> 表データの <C> コラムをビンに含まれる個数が等しくなるようにビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
<A> の中の欠損値を落とし、再代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<A> をインデックスで並び替え、置き換える	<A> . sort_index ( inplace = True )	df . sort_index ( inplace = True )
<A> 内の NaN を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<A> カラムをソートして、再代入する	df = df . sort_values ( <A> )	X = df . sort_values ( <A> )
表 <A> 全体を位置を元に昇順でソート	<A> . sort_index ( )	X . sort_index ( )
データフレーム <A> コラム <B> と <A> データフレーム <C> コラムとデータフレーム <A> コラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> をインデックスでソート	<A> . sort_index ( )	df . sort_index ( )
分割数を <C> として、 <A> 表データの <B> 列を要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . qcut ( <A> [ <B> ] , <C> )
表データ <A> を <B> 表属性の値を元にソートして、再代入する	<A> = <A> . sort_values ( <B> )	for <A> = <A> . sort_values ( <B> )
<A> 中のコラム <B> に重複がある場合	if <A> . duplicated ( subset = <B> ) :	duplicated if <A> . duplicated ( subset = <B> ) :
表 <A> をエクセルファイル <B> というファイル名で書き出す	<A> . to_excel ( <B> )	X <A> . to_excel ( <B> )
リスト <B> を表属性 <A> 、リスト <D> を <C> 表属性として、新しい表を作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	pd . DataFrame ( { <A> : <B> , <C> : <D> } )
データフレーム <A> の <B> コラムの秒を確認する	<A> [ <B> ] . dt . second	for <A> [ <B> ] . dt . second
エンコーディングをシフト JIS として、ファイルパス <A> を読み込む	pd . read_csv ( <A> , encoding = 'shift_jis' )	pd . read_csv ( <A> , encoding = 'shift_jis' )
表 <A> の <B> 行目から <C> 行目まで	<A> [ <B> : <C> ]	if <A> [ <B> : <C> ]
分割数を <D> 、ビンの名前を 0 始まりの連番として、 <B> 表の列 <C> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	plt . cut ( <A> [ <B> ] , <C> , label = False )
そこで、ビン数は <A> を使う	bins = <A>	bins = <A>
表データ <A> 内の重複した行を落として、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
同じ軸で <A> 表 <B> 表属性と <A> 表 <C> 表属性と <A> 表 <D> 表属性を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、シフト JIS をする	encoding = 'shift_jis'	encoding = 'shift_jis'
表 <A> の <B> 表属性と表属性 <C> ごとに <D> 表属性の値の合計を求める	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<B> 列という列をドロップし、 <A> にする	<A> = df . drop ( <B> , axis = 1 )	df = df . drop ( <B> , axis = 1 )
表 <A> 全体をカラム <B> を軸に並び替えて、 <A> に代入する	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
同じ軸のセットで表 <A> 表属性 <B> と <A> 表 <C> 表属性と表 <A> 表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> カラムと <C> カラムとカラム <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の中に存在する <B> を欠損に置き換える	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
データフレーム <A> 内の NaN がある行を削除を <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
そこで、マーカーのエッジ色としてシアンを用いる	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
データフレーム <A> の未記入の値を <B> に置き換え、置き換える	<A> . fillna ( <B> , inplace = True )	<A> = <A> . fillna ( <B> )
そこで、透明度を <A> とする	alpha = <A>	alpha = <A>
そこで、マーカーの形の輪郭色は黄緑色をする	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
<A> と <B> 表に対して、 <C> コラムをキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	. merge ( <A> , <B> , on = <C> )
表 <A> の欠損値を <A> 表データの平均値で埋め、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表データ <A> のコラム <B> とデータフレーム <A> の <C> コラムと <A> データフレームのコラム <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <C> カラムの曜日を見て、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name	<B> <A> [ <C> ] . dt . weekday_name
データフレーム <A> の列 <B> の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<A> の <B> 表属性を並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<B> という名前のエクセルの <C> 番目のシートを表データに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> のカラム <B> のユニークな要素の個数を見る	<A> [ <B> ] . nunique ( )	plt . nunique ( <A> [ <B> ] )
データフレーム <A> の欠損	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
列番号 <B> をインデックスとして、 <A> ファイル名をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<B> をコラム <C> を元にソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
データフレームを CSV ファイル <A> から <B> 区切りで読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
表 <A> の <B> コラム内の前後の行の差分を求める	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<A> ( データフレーム ) の <B> 表属性と <C> 表属性を値が大きい順にソートして、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	x = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> 表属性と表属性 <B> を大きい順にし、再代入する	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	X = df . sort_values ( [ <A> , <B> ] , ascending = False )
<A> の <B> を欠損値に置換し、欠損値が存在する行をドロップし、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
同じグラフ内で <A> 表の <B> カラムと表 <A> のカラム <C> と表 <A> のカラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を <B> カラムを軸にソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
表 <A> <B> 表属性と表 <A> <C> 表属性と表 <A> <D> 表属性についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の欠損を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の列 <B> とデータフレーム <A> の <C> 列と <A> データフレームの列 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中の <B> カラムに重複があるのかチェック	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
データフレーム <A> の重複行を検出する	<A> . duplicated ( )	<A> . duplicated ( )
<A> 列に重複がある行を drop する	df . drop_duplicates ( subset = <A> )	pd . drop_duplicates ( subset = <A> )
表データ <A> 全体を <B> コラムを元に並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	start <A> = <A> . sort_values ( <B> )
データフレーム <A> の表属性 <B> の名前を <C> に変更し、インプレースする	<A> . rename ( columns = { <B> : <C> } , inplace = True )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
パーセプトロンモデルを新たに使えるようにし、 <A> とする	<A> = sklearn . neural_network . MLPClassifier ( )	X = sklearn . neural_network . MLPClassifier ( )
表 <A> の <B> を欠損値に置換し、欠損値がある行を削除する	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
位置と列 <C> を項目名としてデータフレーム <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> ( データフレーム ) の <B> 列を順番になるようにし、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <B> の <E> 列について、 <C> 列をインデックス、列 <D> を列としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	index = <B> , columns = <C> , values = <D> , values = <E> )
表 <A> のカラム <C> の秒を表示し、  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . second	<A> [ <B> ] = <A> [ <C> ] . dt . second
列番号 <C> をインデックスとして、ファイル名 <B> からデータフレームとを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<B> と <C> 表に対して、コラム <D> をキーとしてデータを内部結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = pd . merge ( <B> , <C> , on = <D> )
データフレーム <A> の列 <B> と <A> データフレームの <C> 列と <A> データフレームの列 <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グラフ種類として円グラフを用いる	kind = 'pie'	kind = 'pie'
描画したグラフを <A> というファイルに出力する	plt . savefig ( <A> )	sklearn . savefig ( <A> )
エクセルファイル <A> のシート名 <B> を表に格納する	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
表データ <A> の列 <B> の出現回数を調べる	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
同じ軸で <A> データフレームのカラム <B> と <A> データフレームのカラム <C> とデータフレーム <A> の <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> と表データ <B> を縦向きに連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
左側のデータのインデックスと右側のデータの <D> カラムをキーとして、 <B> データフレームとデータフレーム <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表 <A> の欠損値の合計を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 中の重複した行を落とし、再代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
表データ <B> の中の未記入の値をデータフレーム <B> の平均値で埋め、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
データフレーム <A> を <B> コラムを元に並び替え、 <A> に代入する	<A> = <A> . sort_values ( <B> )	start <A> = <A> . sort_values ( <B> )
表 <A> 中に存在する <B> を NaN に置き換え、インプレースする	<A> . replace ( <B> , np . nan , inplace = True )	df . replace ( <A> , <B> , np . nan , inplace = True )
データフレーム <A> の列の名前を <B> から <C> に変更して、置き換える	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
同じグラフ内で表 <A> の <B> カラムと <A> 表のカラム <C> と表 <A> の <D> カラムを箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの種類の輪郭色は黄色を用いる	markeredgecolor = 'yellow'	markeredgecolor = 'yellow'
表 <B> の中の重複している行を消して、 <A> にする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
<B> の重複している行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
データフレーム <A> から重複している行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	df = <A> . drop_duplicates ( )
表 <A> の <B> コラムの月を調べる	<A> [ <B> ] . dt . month	<A> [ <B> ] . dt . month
表データ <A> を列 <B> を元にソートし、 <A> に代入する	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
同じグラフ内で表データ <A> のカラム <B> と表データ <A> の <C> カラムと <A> 表データのカラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を箱ひげ図にする	plt . boxplot ( <A> )	plt . boxplot ( <A> )
そこで、マーカーのエッジ色は赤紫色を使う	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
データフレーム <A> 内にある <B> を未記入の値とする	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
<B> の列 <C> を軸に並び替え、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表データ <A> の列 <B> と <C> 列と <D> 列について関係性を一度にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> 内の未記入の値を直前の行の値で補い、再代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
データフレーム <A> 中にある <B> を未入力の値に置換し、置き換える	<A> . replace ( <B> , np . nan , inplace = True )	df . replace ( <A> , <B> , np . nan , inplace = True )
そこで、目印の輪郭色として黄緑色を使用する	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
表データ <A> の全ての列の重複する行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<A> の <B> コラムに重複は存在するのか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表 <A> の中の NaN を <A> 表の平均値で埋め、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
エクセルファイル <A> の全てのシートからデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> の中の <B> カラムとカラム <C> に重複はあるのか表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 中の欠損がある行を削除し、インプレースする	<A> . dropna ( inplace = True )	'words' <A> . dropna ( inplace = True )
データフレーム <A> の <B> 列を位置とし、 <A> にする	<A> = <A> . set_index ( <B> )	X = <A> . set_index ( <B> )
表データ <A> のコラム <B> の年を見る	<A> [ <B> ] . dt . year	<A> [ <B> ] . dt . year
<B> ( データフレーム ) の <C> 列と <D> 列を大から小へとソートし、 <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> の位置を軸に昇順でソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<A> の <B> を未記入の値に置換し、未記入の値が存在する行をドロップ	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
<B> の <C> カラムの値を軸に昇順で並び替えて、 <A> にする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<B> という名前のエクセルの <C> シート名からデータフレームを読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
エクセルの <A> の <B> のシートを表に格納する	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<A> の <B> 位置の名前を <C> に変更し、インプレースする	<A> . rename ( index = { <B> : <C> } , inplace = True )	<A> . rename ( index = { <B> : <C> } , inplace = True )
<B> カラムという列を消し、 <A> とする	<A> = <A> . drop ( <B> , axis = 1 )	X = df . drop ( <B> , axis = 1 )
表 <A> 中の欠損をデータフレーム <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表 <A> 中のコラム <B> に重複があるのか確認	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
<A> ( データフレーム ) の列 <B> と <C> 列を降順にソートを <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	plt . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<B> 内の表属性 <C> に重複がある行を削除を <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	x = <B> . drop_duplicates ( subset = <C> )
表 <A> から <B> という名前のエクセルファイルに変換する	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
表 <A> 全体を表属性 <B> に沿ってソートし、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
x 軸を <A> とした <B> の縦向き棒グラフを表示する	plt . bar ( <A> , <B> )	. barh ( <A> , <B> )
表 <B> の <C> カラムをインデックス、 <D> カラムをカラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	x = <B> . pivot_table ( index = <C> , columns = <D> )
そこで、グラフの種類は水平棒グラフである	kind = 'barh'	kind = 'barh'
<B> を列 <C> の値でソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<B> という名前のエクセルデータのシート名 <C> を表データに格納して、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
同じ x 軸と y 軸で表 <A> の <B> コラムと表 <A> の <C> コラムと表 <A> のコラム <D> をボックスチャートで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
コラム <B> を小から大へとし、 <A> とする	<A> = df . sort_values ( <B> )	X = <A> . sort_values ( <B> )
データフレーム <A> 内の <B> を欠損値に置換し、欠損値がある行を削除し、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表データ <A> 中の <B> 列と列 <C> に重複があるか表示してみる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> のカラム <B> と <A> 表データの <C> カラムと表データ <A> の <D> カラムについての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> と <B> 表データに対して、 <C> カラムを項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表 <B> のカラム <C> を位置に設定して、 <A> とする	<A> = <B> . set_index ( <C> )	= <B> . set_index ( <C> )
<A> に重複はあるのかどうかチェックする	<A> . duplicated ( )	<A> . duplicated ( )
<B> とデータフレーム <C> を横方向に結合して、 <A> にする	<A> = pd . merge ( <B> , <C> )	X = pd . merge ( <B> , <C> )
<A> 内の NaN を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
ファイル名 <A> から表をタブ区切りで読み込む	pd . read_csv ( <A> , sep = '\t' )	pd . read_csv ( <A> , sep = '\t' )
ビン数を <C> として、 <A> 表の <B> 表属性をビン分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
<A> の <B> 列と <C> 列を値が大きい順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
同じ軸で <A> 表データカラム <B> と <A> 表データ <C> カラムと表データ <A> <D> カラムを箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> をグラフの y 軸、 <B> を x 座標として、グラフを描く	plt . plot ( <A> , <B> )	color = <A> . plot ( <B> )
表 <A> のコラム <B> と <C> コラムごとにコラム <D> の値の合計を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
そこで、文字コードは shift - jis をする	encoding = 'shift_jis'	stacked = 'shift_jis'
<B> というエクセルの <C> シート名から読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
列番号 <B> を位置と設定して、ファイル <A> をデータフレームとして読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
データフレーム <A> をインデックスに沿ってソートし、インプレースする	<A> . sort_index ( inplace = True )	np <A> . sort_index ( inplace = True )
同じ軸で <A> 表の列 <B> と <A> 表の列 <C> と表 <A> の列 <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ビン数を <C> として、 <A> 表のコラム <B> を要素数が等しくなるように分割する	pd . qcut ( <A> [ <B> ] , <C> )	qcut pd . qcut ( <A> [ <B> ] , <C> )
<B> という名前のエクセルの <C> シート名から読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> の <B> 表属性と表属性 <C> を降順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
横軸を <A> とした <B> の縦向き棒グラフを作図する	plt . bar ( <A> , <B> )	. barh ( <A> , <B> )
<A> 列についてダミー変数を生成する	pd . get_dummies ( df [ <A> ] )	pd . get_dummies ( df [ <A> ] )
<A> の表属性 <B> と <C> 表属性ごとに表属性 <D> の値の合計	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
データフレーム <A> 内の重複要素がある行を取り除いて、 <A> にする	<A> = <A> . drop_duplicates ( )	start = <A> . drop_duplicates ( )
同じ軸で <A> 表の <B> 表属性と表 <A> の表属性 <C> と表 <A> の表属性 <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 中の表属性 <B> と表属性 <C> に重複はあるかどうか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> の中の <B> を未記入の値に置換し、未記入の値がある行を削除し、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> ( データフレーム ) のコラム <B> を順にし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<B> ( データフレーム ) の <C> 表属性と表属性 <D> を大から小へと並び替えて、 <A> に代入する	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> のコラム <B> を削除を <A> にする	<A> = <A> . drop ( <B> , axis = 1 )	plt . drop ( <A> , <B> , axis = 1 )
<A> 内の重複している行をドロップする	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
<A> の <B> コラムに重複がある行を消す	<A> . drop_duplicates ( subset = <B> )	dropna <A> . drop_duplicates ( subset = <B> )
<A> と表 <B> を縦方向でマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> の中の NaN の数を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の <B> 列を昇順でソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> 表属性 <B> と表 <A> <C> 表属性と <A> 表表属性 <D> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> のコラム <B> とコラム <C> ごとにコラム <D> の値の合計	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> のコラム <B> に重複がある行をドロップ	<A> . drop_duplicates ( subset = <B> )	'words' <A> . drop_duplicates ( subset = <B> )
<A> に重複があるかどうかチェック	<A> . duplicated ( )	<A> . duplicated ( )
<C> 列をキーとして、 <A> データフレームとデータフレーム <B> を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
エクセルファイル <B> の <C> 番目のシートを ] [ データフレームとして読み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> と <B> 表データを縦向きに連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> ( データフレーム ) の <B> カラムと <C> カラムを逆順にソートする	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	False . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<A> の表属性 <B> と <C> 表属性ごとに <D> 表属性の値の合計値を求める	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<B> という名前のエクセルデータ <B> のシート全てを表データに格納して、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> の <B> 列を四分位数ごとでビン分割する	pd . qcut ( <A> [ <B> ] , 4 )	pd . qcut ( <A> [ <B> ] , 4 )
左側のデータのインデックスと右側のデータの <C> コラムを項目名として、表 <A> と表 <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
そこで、線グラフを使う	kind = 'line'	kind = 'line'
表データ <A> 内の欠損を含む行を削除を <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<A> 中の <B> 列と列 <C> に重複を判定する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> を <B> コラムを元に並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	df . sort_values ( <B> , inplace = True )
表データ <A> の <B> 列の月	<A> [ <B> ] . dt . month	<A> [ <B> ] . dt . month
<A> 全体を <B> 表属性を元に並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
そこで、マーカーのエッジ色は赤とする	markeredgecolor = 'red'	markeredgecolor = 'red'
<A> コラムを小から大へとし、置き換える	df . sort_values ( <A> , inplace = True )	df . sort_values ( <A> , inplace = True )
分割数を <D> として、 <B> 表データの <C> 列をビンに含まれる個数が等しくなるように分割し、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
位置と表属性 <C> を項目名としてデータフレーム <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> のカラム <C> の秒を確認して、  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . second	<A> [ <B> ] = <A> [ <C> ] . dt . second
<A> のコラム <B> の値をソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
データフレーム <A> をファイル <B> という名前にして CSV ファイルに書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
表データ <B> の <C> 表属性と <D> 表属性を削除して、 <A> にする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
表データ <A> の <B> を未記入の値に置換し、未記入の値が存在する行を消して、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
同じ x 軸と y 軸でデータフレーム <A> <B> コラムと <A> データフレームコラム <C> と <A> データフレーム <D> コラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
全結合で表 <B> と表 <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	df = pd . merge ( <A> , <B> , <C> , how = 'outer' )
CSV ファイル <A> をデータフレームとして <B> 区切りで読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
描いたグラフを <A> というファイルにして保存する	plt . savefig ( <A> )	plt . savefig ( <A> )
<A> 内の重複しているデータ	<A> [ <A> . duplicated ( ) ]	<A> [ <A> . duplicated ( ) ]
表 <B> 内の未入力の値をデータフレーム <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
データフレーム <A> の <B> コラムに重複があるのかチェックを確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表 <A> の表属性 <B> と表属性 <C> と <D> 表属性の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> ( データフレーム ) の <C> 表属性を順にし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
表 <A> 全体を <B> カラムを元に並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<A> 内の欠損を直前の行の値で埋めて、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	df . fillna ( method = 'ffill' , inplace = True )
表 <A> 内の未入力の値をデータフレーム <A> の平均値で補い、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> 内の <B> を欠損値に置換し、欠損値が存在する行を削除を <A> にする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<C> 番目の列を位置にして、 <B> ファイル名からデータフレームとを読み込んで、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> の全ての列の重複する値がある行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	inplace = <A> . drop_duplicates ( )
<A> 内の <B> 表属性に重複があるか確認する	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
表 <A> の列 <B> のユニークな要素数を確認する	<A> [ <B> ] . nunique ( )	<A> [ <B> ] . nunique ( )
<B> という名前のエクセルファイルのシート名 <C> から読み込んで、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
<A> の <C> コラムの前後の行の差分を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )
<A> のコラム <B> が <C> 以下データ	<A> [ <A> [ <B> ] <= <C> ]	<= <A> [ <B> ] <= <C> ]
<A> カラムを小さい順にして、置き換える	df . sort_values ( <A> , inplace = True )	df . sort_values ( <A> , inplace = True )
コラム <A> を項目名としてデータを内部結合する	pd . merge ( df1 , df2 , on = <A> )	for df1 , df2 = <A> )
そこで、色は紫にする	color = 'purple'	markerfacecolor = 'purple'
列 <A> と列 <B> に重複は存在するのか表示してみる	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
位置と列 <C> を項目名としてデータフレーム <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
カラム <B> という列を落として、 <A> とする	<A> = df . drop ( <B> , axis = 1 )	X = df . drop ( <B> , axis = 1 )
表 <A> 中の <B> 列に重複はあるか確認する	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
エクセルデータ <B> を読み込んで表にし、 <A> に代入する	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
カンマ区切りで表として CSV ファイル <A> を読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
表データ <A> を <B> ファイル名に書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
<A> に重複はあるのかどうか調べる	<A> . duplicated ( )	<A> . duplicated ( )
<A> の列 <B> の未入力の値を <B> 列の平均値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
<A> の <B> 列の NaN を <B> 列の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
データフレーム <A> 内の NaN を直前の行の値で埋め、再代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表データ <A> 内の未入力の値をドロップし、インプレースする	<A> . dropna ( inplace = True )	'words' <A> . dropna ( inplace = True )
表データ <A> と <B> 表データを横方向にくっつける	pd . merge ( <A> , <B> )	<A> . merge ( <B> )
<A> ファイル名から表データを <B> 区切りで読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
表 <A> の中の <B> コラムに重複はあるかどうか見る	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
<A> を読む	pd . read_csv ( <A> )	pd . read_csv ( <A> )
表データ <A> の末尾 <B> 行を表示する	<A> . tail ( <B> )	<A> . tail ( <B> )
データフレーム <A> のカラム <B> を位置に設定して、 <A> とする	<A> = <A> . set_index ( <B> )	<A> = <A> . set_index ( <B> )
そこで、活性化はロジスティック関数にする	activation = 'logistic'	flush = 'logistic'
そこで、マーカーの形状は正方形	marker = 's'	marker = 's'
そこで、目印の色は黄緑を用いる	markerfacecolor = 'greenyellow'	marker = 'greenyellow'
<B> というエクセルデータのシート全てをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表データ <A> のコラム <B> の名前を <C> に、 <D> コラムの名前を <E> にリネームして、再代入する	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	range = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
表 <A> <B> カラムと <A> データフレーム <C> カラムとデータフレーム <A> カラム <D> についての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> と <C> 表を横に結合し、 <A> とする	<A> = pd . merge ( <B> , <C> )	alpha = pd . merge ( <B> , <C> )
表 <B> をインデックスに基づいてソートし、 <A> にする	<A> = <B> . sort_index ( )	X = <B> . sort_index ( )
描いたプロットを <A> という名前で書き出す	plt . savefig ( <A> )	df . savefig ( <A> )
表データ <A> の <B> 行目をドロップする	<A> . drop ( <B> )	<A> . drop ( <B> )
棒グラフの位置を中心に設定して、 <A> と <B> の棒グラフを描く	plt . bar ( <A> , <B> , align = 'center' )	plt . bar ( <A> , <B> , align = 'center' )
表データ <A> の末尾の 5 行を確認する	<A> . tail ( )	<A> . tail ( )
そこで、円形の目印を用いる	marker = 'o'	marker = 'o'
ファイル <B> を表データとして読んで、 <A> とする	<A> = pd . read_csv ( <B> )	X = pd . read_csv ( <A> )
表データ <A> の表属性 <B> の要素を表示する	<A> [ <B> ] . values	range ( <A> [ <B> ] )
<A> の表属性 <B> を軸に並び替え、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
表データ <A> を表属性 <B> の値を元に昇順でソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	for <A> . sort_values ( <B> , inplace = True )
データフレーム <A> 内の重複要素がある行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表 <A> 中に重複は存在するのかチェック	<A> . duplicated ( )	np . duplicated ( )
表 <A> 中の重複要素がある行を削除して、 <A> に代入する	<A> = <A> . drop_duplicates ( )	start = <A> . drop_duplicates ( )
表 <A> 中の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
データフレーム <A> 中の未記入の値の個数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
CSV ファイル <B> を表として読んで、 <A> とする	<A> = pd . read_csv ( <B> )	X = pd . read_csv ( <A> )
<A> の表属性 <B> と <C> 表属性ごとに表属性 <D> の値の和を計算する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<B> ファイルを <C> 区切りでデータフレームとして読み、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
データフレーム <A> 中の NaN を消し、 <A> とする	<A> = <A> . dropna ( )	dropna <A> = <A> . dropna ( )
同じグラフ内で表データ <A> の列 <B> と <A> 表データの <C> 列と表データ <A> の列 <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中で重複している行の合計を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
そこで、円グラフに構成割合を小数点 2 位までのパーセント表記で表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
表データ <A> 内の未入力の値が存在する行を落として、 <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> 中の欠損の個数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> 列に重複はあるのかどうかを見る	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
データフレーム <B> のカラム <C> とカラム <D> を逆順にソートして、 <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
そこで、目印の輪郭色は赤色にする	markeredgecolor = 'red'	markeredgecolor = 'red'
<B> のコラム <C> を昇順にソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	x <A> = <B> . sort_values ( <C> )
CSV ファイル <B> からデータフレームを読み、 <A> とする	<A> = pd . read_csv ( <B> )	X = pd . read_csv ( <A> )
そこで、菱形の目印を用いる	marker = 'D'	marker = 'D'
表 <A> の列 <B> の時間	<A> [ <B> ] . dt . hour	<A> [ <B> ] . dt . hour
表データ <A> と表データ <B> を縦に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
そこで、目印の色はマゼンタをする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
そこで、 <A> をセパレータとする	sep = <A>	bins = <A>
そこで、グラフの種類として積み上げを使う	stacked = True	stacked = True
<A> について円グラフを表示する	plt . pie ( <A> )	kind = plt . pie ( <A> )
データフレーム <B> の <C> 表属性を四分位数ごとでビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , 4 )	<A> = pd . qcut ( <B> [ <C> ] , 4 )
表データ <A> の <B> コラムのそれぞれのデータの出現回数	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
<A> の <B> カラムに重複があるか表示してみる	<A> . duplicated ( subset = <B> )	encoding = <A> . duplicated ( subset = <B> )
そこで、グレーで表示する	color = 'gray'	kind = 'gray'
表 <A> において、カラム <B> から箱ひげ図をプロットする	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
表データ <B> 中の <C> を NaN に置換し、 NaN が存在する行を消して、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
<A> の <B> 列と <A> 表データの列 <C> と <A> 表データの <D> 列の箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ軸で <A> データフレームの表属性 <B> と <C> 表属性と表属性 <D> をボックスチャートで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の NaN の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> ( データフレーム ) の <C> 列を順番になるようにして、 <A> に代入する	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
列 <A> と列 <B> に重複はあるかどうかチェックする	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> 内に重複があるか表示する	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <A> を <B> 表属性を元に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> から <B> ファイルという CSV ファイルを書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
<A> という名前のエクセルの <B> 番目のシートを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
表データ <A> 全体をインデックスで並び替えて、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
分割数を <C> 、ビンのラベルをリスト <D> として、 <A> データフレームのコラム <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	for pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> の <B> 行目を消して、インプレースする	<A> . drop ( <B> , inplace = True )	df . drop_duplicates ( inplace = True )
そこで、マーカーの色は黄色である	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
ヘッダーなしで <B> ファイルパスを読み、 <A> とする	<A> = pd . read_csv ( <B> , header = None )	X = pd . read_csv ( <A> , header = None )
表 <A> 内のそれぞれの列に存在する <B> の個数の合計を見る	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> を <B> コラムを軸に並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	for <A> . sort_values ( <B> , inplace = True )
データフレームをカンマ区切りで <A> ファイル名から読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
データフレーム <A> の中の <B> コラムに重複がある行を消し、再代入する	<A> = <A> . drop_duplicates ( subset = <B> )	drop_duplicates = <A> . drop_duplicates ( subset = <B> )
そこで、マーカーの輪郭色はネイビーを用いる	markeredgecolor = 'navy'	markeredgecolor = 'navy'
<C> 区切りで CSV ファイル <B> を読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表データ <A> 全体を表属性 <B> の値を軸にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
データフレーム <A> の列 <B> のデータを取得する	<A> [ <B> ]	pd . to_datetime ( <A> [ <B> ] )
<B> ( データフレーム ) のカラム <C> を並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表データ <A> の <B> カラムの曜日を見る	<A> [ <B> ] . dt . weekday_name	<A> [ <B> ] . dt . weekday_name
表 <A> の <B> カラムをインデックスとして設定し、 <A> にする	<A> = <A> . set_index ( <B> )	X = <A> . set_index ( <B> )
左側のデータのインデックスと右側のデータの <C> コラムを項目名として、データフレーム <A> と <B> データフレームを一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<B> の中の欠損が存在する行を削除し、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<A> のカラム <B> に重複はあるか確認する	<A> . duplicated ( subset = <B> )	encoding = <A> . duplicated ( subset = <B> )
データフレーム <B> とデータフレーム <C> に対して、表属性 <D> を項目名としてデータを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
左側のデータのインデックスと右側のデータの <C> カラムをキーとして、表データ <A> と <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <A> の <B> カラムに重複がある行をドロップを <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	plt . drop_duplicates ( subset = <B> )
表データ <A> 内の列にある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
<B> を表属性 <A> 、 <D> リストを <C> 表属性として、新しい表を作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	pd . DataFrame ( { <A> : <B> , <C> : <D> } )
そこで、グラフの種類は度数分布図を使う	kind = 'hist'	kind = 'hist'
表としてファイル名 <A> を <B> 区切りで読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<A> の表属性 <B> についての度数分布図を表示する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表データ <A> 中の <B> を未記入の値に置換し、未記入の値が存在する行を落とす	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
<A> カラムを数値データに変換する	pd . get_dummies ( df [ <A> ] )	for pd . get_dummies ( df [ <A> ] )
インデックスと <C> コラムを項目名として <A> 表データと表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
そこで、菱形をマーカーの種類とする	marker = 'D'	marker = 'D'
表データ <A> の中の欠損をデータフレーム <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
そこで、目印の色は紫色を使う	markerfacecolor = 'purple'	markerfacecolor = 'purple'
<A> の <B> 列と <C> 列と <D> 列についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) の <B> 列を順番になるように並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
表データ <A> の <B> カラムが <C> のデータ	<A> [ <A> [ <B> ] == <C> ]	<A> [ <A> [ <B> ] == <C> ]
<A> の <B> 表属性の値をソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
同じグラフ内でデータフレーム <A> カラム <B> とデータフレーム <A> <C> カラムと <A> データフレームカラム <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内でデータフレーム <A> の <B> カラムとデータフレーム <A> の <C> カラムと <A> データフレームのカラム <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <C> を位置と設定して、 <B> ファイルを表に格納し、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
そこで、シアンをマーカーの形状の輪郭色とする	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
表 <A> カラム <B> と表データ <A> <C> カラムと表データ <A> <D> カラムのボックスチャートを一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の中のコラム <B> に重複がある場合	if <A> . duplicated ( subset = <B> ) :	duplicated if <A> . duplicated ( subset = <B> ) :
列番号 <B> を位置に、 <A> パスを表データに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> の中のカラム <B> に重複があるのかどうか表示してみる	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
表 <B> と <C> 表データに対して、カラム <D> を項目名としてデータを内部結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
<A> 内の欠損値の合計を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <B> 中の <C> を欠損に置換し、欠損がある行をドロップを <A> にする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
表データ <A> の <B> コラムとコラム <C> ごとに <D> コラムの値の和を計算する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<A> の未入力の値をデータフレーム <A> の平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
同じ軸でデータフレーム <A> 列 <B> とデータフレーム <A> 列 <C> と <A> データフレーム <D> 列をボックスチャートで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データを <B> パスからタブ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = '\t' )	markeredgecolor = pd . read_csv ( <B> , sep = '\t' )
表データ <A> の <C> コラムの曜日の数値型を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek
データフレーム <A> の重複する行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> 全体をインデックスを元に昇順でソートする	<A> . sort_index ( )	X . sort_index ( )
データフレーム <A> の <C> 表属性の月を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . month	markeredgewidth = <A> [ <B> ] . dt . month
データフレーム <A> の <B> 表属性の日にちを調べる	<A> [ <B> ] . dt . day	for <A> [ <B> ] . dt . day
そこで、マーカーの種類のエッジ色は赤色を用いる	markeredgecolor = 'red'	markeredgecolor = 'red'
表データ <A> 内の未入力の値をドロップし、 <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> 表属性 <B> と <A> 表データ表属性 <C> と <A> 表データ表属性 <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のコラム <B> を削除して、 <A> とする	<A> = <A> . drop ( <B> , axis = 1 )	alpha = <A> . drop ( <B> , axis = 1 )
表データ <B> の未入力の値がある行を落とし、 <A> にする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
表データ <A> の未入力の値の合計を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
ビン数を <D> として、表データ <B> の表属性 <C> をビンに含まれる個数が等しくなるように分割して、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
左外部結合で <A> 表と <B> 表を結合する	pd . merge ( <A> , <B> , how = 'left' )	pd . merge ( <A> , <B> , how = 'left' )
表データ <A> についてダミー変数を作って、 <A> に代入する	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
左側のデータのインデックスと右側のデータの <C> 表属性をキーとして、データフレーム <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
ビン数を <D> 、ビンのラベルをインデックスとして、 <B> データフレームのカラム <C> を分割し、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	X = pd . cut ( <A> [ <B> ] , <C> , label = False )
データフレームを CSV ファイル <B> から <C> 区切りで読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表 <A> 全体をコラム <B> の値を軸にソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	for <A> . sort_values ( <B> , inplace = True )
データフレーム <A> 内に存在する <B> を欠損値に置き換える	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
同じ x 軸と y 軸でデータフレーム <A> の <B> カラムと <A> データフレームのカラム <C> と <A> データフレームのカラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	boxplot plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体を表属性 <B> の値を軸にソート	<A> . sort_values ( <B> )	fillchar = <A> . sort_values ( <B> )
表データ <B> と表データ <C> を縦方向でマージして、 <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
位置とカラム <D> をキーとして表 <B> と <C> 表をマージして、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> の全ての列の重複する値がある行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	inplace = <A> . drop_duplicates ( )
表 <B> と <C> データフレームに対して、 <D> カラムを項目名としてデータを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
表データ <A> の <B> コラムが <C> より小さいデータ	<A> [ <A> [ <B> ] <  <C> ]	<A> [ <A> [ <B> ] < <C> ]
表 <A> のコラム <B> の秒	<A> [ <B> ] . dt . second	<A> [ <B> ] . dt . second
<A> ( データフレーム ) の列 <B> を小から大へとし、 <A> に代入する	<A> = <A> . sort_values ( <B> )	ascending = <A> . sort_values ( <B> )
<A> を	plt . hist ( <A> , range = ( 20 , 80 ) )	bins = <A>
表 <A> のコラム <B> が <C> より小さいデータ	<A> [ <A> [ <B> ] <  <C> ]	<A> [ <A> [ <B> ] < <C> ]
同じ軸で <A> 表データカラム <B> と表データ <A> <C> カラムと表データ <A> カラム <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 全体を <B> カラムを元に昇順でソート	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> <B> コラムと表 <A> <C> コラムと表 <A> コラム <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の列 <B> を柱状グラフにする	plt . hist ( <A> [ <B> ] )	sns . hist ( <A> [ <B> ] )
そこで、マーカーの色はネイビーを使う	markerfacecolor = 'navy'	markerfacecolor = 'navy'
<A> 全体をコラム <B> の値を軸に並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
同じグラフ内で表 <A> の <B> 表属性と <C> 表属性と表属性 <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> ( データフレーム ) の <C> 列と <D> 列を降順にソートし、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表 <A> の <B> 列の NaN を <B> 列の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
データフレーム <B> と <C> データフレームを縦方向でマージして、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
ビン数を <C> 、ビンのラベルを <D> リストとして、表 <A> のコラム <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
データフレーム <B> の全ての列の重複する行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
そこで、マーカーの形の輪郭色は紫色を用いる	markeredgecolor = 'purple'	markeredgewidth = 'purple'
<A> の平均値を抽出する	<A> . mean ( )	mean . mean ( )
分割数を <C> 、ビンの名前を 0 始まりの連番として、 <A> 表データの <B> コラムを分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	y <A> = <A> . drop_duplicates ( keep = False )
表 <B> の中の重複する値がある行をドロップし、 <A> にする	<A> = <B> . drop_duplicates ( )	x = <B> . drop_duplicates ( )
表データ <A> の列 <B> と <C> 列の相関	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
表データ <A> 内の欠損の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の <B> 表属性が <C> 以上のデータを取得する	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
<B> というエクセルファイルの <C> のシートから読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	df = pd . read_excel ( <B> , sheet_name = <C> )
そこで、打点の輪郭色はグレーを用いる	markeredgecolor = 'gray'	markeredgecolor = 'gray'
表 <B> の <C> を欠損に置換し、欠損が存在する行を削除し、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
データフレーム <B> のカラム <C> を四分位数ごとでビン分割して、 <A> に代入する	<A> = pd . qcut ( <B> [ <C> ] , 4 )	<A> = pd . qcut ( <B> [ <C> ] , 4 )
表 <A> の <B> を NaN に置換し、 NaN がある行を消す	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
そこで、色は青色を使う	color = 'blue'	markerfacecolor = 'blue'
表 <A> の中の重複する行を取り除き、 <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表 <A> 全体を <B> 表属性の値でソート	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> の <B> 行目から最後までを確認する	<A> [ <B> : ]	plt . : ( <A> , <B> )
<A> をカラム <B> に沿ってソートして、置き換える	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
データフレーム <A> の表属性 <B> をドロップを <A> にする	<A> = <A> . drop ( <B> , axis = 1 )	<A> = <A> . drop ( <B> , axis = 1 )
表 <B> 全体を <C> カラムを元に並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<B> 中にある <C> を欠損とし、 <A> にする	<A> = <B> . replace ( <C> , np . nan )	x = <B> . replace ( <C> , np . nan )
先頭の列をインデックスに指定して、ファイル <A> を読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> と <B> を <C> とラベル付けされた線グラフで描く	plt . plot ( <A> , <B> , label = <C> )	plt . plot ( <A> , <B> , label = <C> )
表 <A> をカラム <B> の値を軸に並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<B> とデータフレーム <C> を横方向にくっつけ、 <A> とする	<A> = pd . merge ( <B> , <C> )	X = pd . merge ( <B> , <C> )
<A> 表属性を順にソートし、置き換える	df . sort_values ( <A> , inplace = True )	df . sort_values ( <A> , inplace = True )
データフレーム <A> 全体を <B> コラムの値でソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
データフレーム <A> 中の重複した行を落として、再代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
同じ軸で <A> 表の列 <B> と <A> 表の列 <C> と <A> 表の列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムを昇順にソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
表 <A> 全体を表属性 <B> の値に基づいてソートして、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> 中のカラム <B> とカラム <C> に重複はあるのかどうか調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> 内の <B> , <C> , <D> 行目の <E> , <C> 列目を抽出する	<A> . iloc [ [ <B> , <C> , <D> ] , [ <E> , <C> ] ]	fillchar . iloc [ [ <A> , <B> , <C> , <D> ] , [ <E> , <C> ] ] )
データフレーム <A> のコラム <B> とデータフレーム <A> のコラム <C> と <A> データフレームのコラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
横軸を <A> とした <B> の縦向き棒グラフを作画する	plt . bar ( <A> , <B> )	. barh ( <A> , <B> )
データフレーム <A> を <B> という名前でエクセル形式に書き込む	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
表データ <A> をパス <B> に書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表データ <A> の <B> カラムとカラム <C> ごとにカラム <D> の値の合計	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	df . duplicated ( [ <A> , <B> , <C> ] ] ) . sum ( )
同じ軸のセットで <A> データフレームカラム <B> とデータフレーム <A> カラム <C> と <A> データフレーム <D> カラムをボックスチャートで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムとコラム <C> を値が大きい順に並び替え、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <A> の欠損がある行を落とし、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表 <A> の表属性 <B> と <C> 表属性と <D> 表属性について関係性を一度にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> 表属性と表属性 <B> を大きい順にする	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
データフレーム <A> の <B> を欠損に置換し、欠損がある行を削除し、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表データ <A> 内で重複した行の合計を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> 全体を <B> カラムに基づいてソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
表 <A> において、 <B> 列から箱ひげ図を表示する	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
表データ <B> とデータフレーム <C> を縦に結合して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
<A> ( データフレーム ) の <B> 列を小から大へとして、インプレースする	<A> . sort_values ( <B> , inplace = True )	pd . sort_values ( <A> , <B> , inplace = True )
表データ <A> の列 <B> と列 <C> を降順に並び替える	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<B> と <C> 表データを横に一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> )	plt . merge ( <A> , <B> , on = <C> )
データフレーム <A> をエクセルファイル <B> という名前にして書き込む	<A> . to_excel ( <B> )	X <A> . to_excel ( <B> )
表データ <A> 内の <B> 表属性に重複はあるかどうか確認する	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
データフレーム <A> 中の <B> を未記入の値に置換し、未記入の値がある行を削除して、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
データフレーム <A> 内のカラムそれぞれにある <B> の個数を調べる	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> の列 <C> の日にちを  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . day	<A> [ <B> ] = <A> [ <C> ] . dt . day
<A> の <B> カラムと <C> カラムとカラム <D> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> の <B> カラムとカラム <C> を大きい順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
エクセル <A> の全てのシートをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表 <A> の表属性 <B> の要素を見る	<A> [ <B> ] . values	range = ( <A> [ <B> ] )
表データ <A> の <B> コラムの未記入の値をコラム <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
<A> 内の欠損を直前の行の値で補い、置き換える	<A> = <A> . fillna ( method = 'ffill' )	markerfacecolor = <A> . fillna ( method = 'ffill' )
表 <A> 全体を <B> コラムに沿ってソートして、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
データフレーム <A> の未入力の値を平均値で補完する	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
<A> の位置を軸に昇順でソートする	<A> . sort_index ( )	X . sort_index ( )
そこで、線として点と線を用いる	linestyle = 'dashbot'	linestyle = 'dashbot'
列番号 <C> を位置として、 <B> ファイル名を読み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
ビン数を <D> 、ビンの名前を 0 始まりの連番として、 <B> 表の <C> 列をビン分割し、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	False = pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> コラムとコラム <B> に重複が存在するのか表示してみる	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> のコラム <B> とコラム <C> とコラム <D> について関係性を一度にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> のカラム <B> ごとにカラム <C> の数	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
表データ <A> 内の未記入の値を直前の行の値で埋め、再代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
df の <A> コラムのデータ列を繰り返す	for name in data [ <A> ] :	for name in data [ <A> ] :
<A> の重複している行をドロップして、 <A> にする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<A> の表属性 <B> を中央値で分割する	pd . qcut ( <A> [ <B> ] , 2 )	pd . qcut ( <A> [ <B> ] , 2 )
x 座標のラベルを <A> に変更する	plt . xlabel ( <A> )	plt . xlabel ( <A> )
棒の位置を中心に設定して、横向きの棒グラフを設定する	plt . barh ( y , x , align = 'center' )	plt . barh ( y , x , align = 'center' )
<C> 番目の列を位置と設定して、ファイル名 <B> から読んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表データ <A> のカラム <B> についての箱髭図を描画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
そこで、マーカーの種類のエッジ色は黄色を使う	markeredgecolor = 'yellow'	markeredgecolor = 'yellow'
表 <A> の <C> コラムの月を調べて、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . month	X = <A> [ <B> ] . dt . month
表 <A> の <B> カラムとデータフレーム <A> の <C> カラムとデータフレーム <A> のカラム <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の未記入の値を含む行を消し、 <A> とする	<A> = <A> . dropna ( )	dropna <A> = <A> . dropna ( )
<A> のコラム <B> を昇順にソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
表データ <B> 内の重複する値がある行を取り除いて、 <A> に代入する	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
エクセル <B> からデータフレームに読み込んで、 <A> とする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
先頭の列を位置に設定して、ファイルパス <B> からデータフレームとを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
ヘッダーを指定せずにファイル <A> を読む	pd . read_csv ( <A> , header = None )	pd . read_csv ( <A> , header = None )
表データ <A> の全ての列の重複する値がある行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	inplace = <A> . drop_duplicates ( )
CSV ファイル <A> をカンマ区切りでデータフレームとして読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
表 <A> の列名を <B> から <C> に変更して、再代入する	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
<A> 全体を <B> カラムの値に沿ってソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
同じ x 軸と y 軸でデータフレーム <A> <B> コラムと <A> データフレームコラム <C> と <A> データフレームコラム <D> をボックスチャートで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムについてのボックスチャートを描写する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
左側のデータの位置と右側のデータの列 <A> を項目名として 2 つのデータをマージする	pd . merge ( df1 , df2 , left_index = True , right_on = <A> )	pd . merge ( df1 , df2 , left_index = True , right_on = <A> )
そこで、グラフ種類としてヒストグラムを使う	kind = 'hist'	kind = 'hist'
<B> をインデックスに基づいてソートして、 <A> にする	<A> = <B> . sort_index ( )	X = <B> . sort_index ( )
表データ <A> の <B> コラムの時間	<A> [ <B> ] . dt . hour	<A> [ <B> ] . dt . hour
先頭の列をインデックスに、ファイル <A> からデータフレームとを読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> 全体を <B> カラムの値を元にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> を <B> でグループ化し、列 <C> とカラム '' 出現数 'で集約し、列' 出現数'で並べ直す	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , '出現数' : sum } ) . sort_values ( by = '出現数' )	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , '出現数' : sum } ) . sort_values ( by = '出現数' )
<C> 区切りでファイルパス <B> をデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
そこで、打点の色は赤	markerfacecolor = 'red'	marker = 'red'
表 <A> の元の位置を振り直し、 <A> にする	<A> = <A> . reset_index ( drop = True )	alpha = <A> . reset_index ( drop = True )
位置と <D> 列を項目名として <B> 表と <C> 表を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	df = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> の <B> コラムをドロップする	<A> . drop ( <B> , axis = 1 )	'words' <A> . drop ( <B> , axis = 1 )
データフレーム <A> 内に重複はあるかどうか確認	<A> . duplicated ( )	<A> . duplicated ( )
表 <A> を位置を元に並び替える	<A> . sort_index ( )	<A> . sort_index ( )
<A> と表データ <B> に対して、列 <C> を項目名としてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
ファイル <A> をカンマ区切りでデータフレームとして読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
表 <A> 中の重複している行をドロップする	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
軸を <A> として、 <B> の横向きの棒グラフを作画する	plt . barh ( <A> , <B> , align = 'center' )	plt . barh ( <A> , <B> , align = 'center' )
表 <A> 内の未記入の値を <A> データフレームの平均値で補って、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
<A> の列 <B> についての分散	<A> [ <B> ] . var ( )	var . var ( )
表 <A> の中で重複した行の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> 中の <B> を欠損に置換し、欠損がある行を削除し、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	df . replace ( <A> , <B> , np . nan ) . dropna ( inplace = True )
左側のデータのインデックスと右側のデータの <D> 列をキーとして、データフレーム <B> とデータフレーム <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> の未入力の値の合計を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <B> をカラム <C> を軸にソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表データ <B> の NaN を <C> とし、 <A> とする	<A> = <B> . fillna ( <C> )	alpha = <B> . fillna ( <C> )
データフレーム <A> のコラム <B> とデータフレーム <A> のコラム <C> と <A> データフレームの <D> コラムの箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <B> 中のコラム <C> に重複がある行を消して、 <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
データフレーム <A> において、 <B> 列と <C> と <D> の関係性を一気に描く	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	pairplot . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> の <B> 列と <C> 列を消す	<A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 )
インデックスなしで <B> パスにデータフレーム <A> を保存する	<A> . to_csv ( <B> , index = False )	False <A> . to_csv ( <B> , index = False )
そこで、フラッシュを行わない	flush = False	stacked = True
<A> の列 <B> を日付型に変換する	pd . to_datetime ( <A> [ <B> ] )	pd . to_datetime ( <A> [ <B> ] )
先頭の列を位置に、ファイル名 <B> をデータフレームとして読み込んで、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表 <B> の <C> コラムを昇順にソートを <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
データフレーム <A> 中の欠損を <A> 表データの平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表 <A> の <B> 列と列 <C> を値が大きい順に並び替え、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
<A> の列 <B> と列 <C> ごとに <D> 列の値の合計を計算する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<B> 中の NaN を <C> とし、 <A> とする	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
ヘッダーを指定せずに <B> ファイルパスを読み込み、 <A> とする	<A> = pd . read_csv ( <B> , header = None )	X = pd . read_csv ( <A> , header = None )
ビン数を <D> として、 <B> 表のコラム <C> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
データフレーム <A> の列 <B> と列 <C> と <D> 列の箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
重複している最後の行を残して <A> ( データフレーム ) 内の重複している行を削除	<A> . drop_duplicates ( keep = False )	<A> . drop_duplicates ( keep = False )
表 <A> のコラム <B> の年	<A> [ <B> ] . dt . year	<A> [ <B> ] . dt . year
<B> というエクセルデータをデータフレームとして読んで、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = None )	= <A> . read_excel ( <B> )
表 <A> の中の重複している行を取り除く	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
<A> のカラム <B> についてのヒストグラムを描画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
コラム <C> を項目名として、表 <A> と表 <B> を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
同じ軸のセットで表データ <A> の <B> カラムと <C> カラムと <D> カラムを箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> 中の列 <C> に重複がある行を削除を <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	x = <B> . drop_duplicates ( subset = <C> )
<A> のコラム <B> と <A> データフレームの <C> コラムと <A> データフレームのコラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> の未入力の値を表データ <B> の平均値で補って、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
表 <A> 中の重複している値がある行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	'words' = <A> . drop_duplicates ( )
表データ <A> の <B> 行目をドロップして、インプレースする	<A> . drop ( <B> , inplace = True )	<A> . drop ( <B> , inplace = True )
データフレーム <A> の <B> インデックスの名前を <C> にリネームして、 <A> にする	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
エクセルデータ <B> をデータフレームに読み、 <A> に代入する	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
<A> の '名前' 列を全て <B> ( 文字列 ) にする	<A> [ '性別' ] = [ <B> ] * len ( <A> )	range ( <A> [ <B> ] = [ <B> ] )
<D> 表属性を項目名として、 <B> 表と表 <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
<B> 表属性を順番になるようにソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = df . sort_values ( <B> )
列番号 <B> を位置として、ファイル名 <A> をデータフレームに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
同じ軸で表データ <A> の <B> 表属性と <A> 表データの表属性 <C> と <A> 表データの <D> 表属性を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<C> 番目の列を位置にして、 <B> ファイルパスからデータフレームとを読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> の <B> 表属性と <C> 表属性に重複があるかどうか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
ビン数を <D> 、ビンのラベルを <E> リストとして、 <B> データフレームの <C> カラムをビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	df = pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<B> の未入力の値をドロップして、 <A> とする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
データフレーム <B> の表属性 <C> の名前を <D> に、 <E> 表属性の名前を <F> にリネームし、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
表データ <A> の位置をリセットして、 <A> に代入する	<A> = <A> . reset_index ( )	alpha = <A> . reset_index ( )
データフレームを <A> ファイルパスからカンマ区切りで読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
ファイル名 <B> をデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <B> )	X = pd . read_csv ( <A> )
表データ <B> と <C> 表データを縦向きに連結を <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <A> 内に存在する <B> を未記入の値に置き換えて、 <A> とする	<A> = <A> . replace ( <B> , np . nan )	X = <A> . replace ( <B> , np . nan )
そこで、打点の色は紫である	markerfacecolor = 'purple'	markerfacecolor = 'purple'
表データ <A> の重複要素がある行を削除して、インプレースする	<A> . drop_duplicates ( inplace = True )	'words' <A> . drop_duplicates ( inplace = True )
<B> の <C> カラムの名前を <D> に、カラム <E> の名前を <F> にリネームし、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	range = <B> , <C> : <D> , <E> , <E> : <F> } )
<A> の <B> 列の値をソートし、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表データ <A> の <B> 表属性の未入力の値を表属性 <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
<A> 内の未記入の値を <A> 表の平均値で埋め、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	fillna <A> = <A> . mean ( ) , inplace = True )
<B> の欠損値を <C> に置き換え、 <A> にする	<A> = <B> . fillna ( <C> )	markeredgecolor = <B> . fillna ( <C> )
<B> の列 <C> と列 <D> を降順に並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
左側のデータの位置と右側のデータの <D> コラムを項目名として、 <B> データフレームとデータフレーム <C> をマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> のコラム <B> とデータフレーム <A> のコラム <C> と <A> データフレームの <D> コラムの箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> を <B> カラムの値を軸に並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
先頭の列を位置にして、 <A> ファイルパスからデータフレームとを読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
表 <A> の <B> 列と列 <C> を値が大きい順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	range = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> 全体を <B> コラムの値を軸にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> 内の重複している値がある行を取り除き、 <A> に代入する	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
そこで、マーカーは丸にする	marker = 'o'	marker = 'o'
表 <A> の <B> コラムと <A> 表データの <C> コラムと <A> 表データのコラム <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> というエクセルデータのシート名 <C> から読み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
分割数を <C> 、ビンのラベルを 0 始まりの連番として、 <A> 表の <B> 表属性を分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
<B> の位置を昇順で並び替えて、 <A> にする	<A> = <B> . sort_index ( )	sort_index = <B> . sort_index ( )
そこで、マーカーのエッジ色は赤色とする	markeredgecolor = 'red'	markeredgecolor = 'red'
<A> の列 <B> と表データ <A> の <C> 列と <A> 表データの <D> 列についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> に重複が存在するのか	<A> . duplicated ( )	<A> . duplicated ( )
表データ <A> のカラム <C> の時間を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . hour	markeredgewidth = <A> [ <B> ] . dt . hour
列番号 <B> をインデックスに設定して、 <A> ファイル名を表データに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<B> カラムと <C> カラムを逆順にし、 <A> にする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	X = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、マーカーの形の輪郭色は黄緑色とする	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
表 <A> 中の <B> 表属性と表属性 <C> に重複が存在するのか確認	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、マーカーの種類のエッジ色は黄色	markeredgecolor = 'yellow'	markerfacecolor = 'yellow'
<B> 番目の列を位置にして、 <A> ファイルを読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表 <A> の表属性 <B> の各要素の出現頻度を調べる	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
そこで、目印のエッジ色としてグレーを使う	markeredgecolor = 'gray'	markeredgecolor = 'gray'
<A> 内 ] [ で重複した行の数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> のコラム <B> についての標準偏差を抽出する	<A> [ <B> ] . std ( )	'words' <A> [ <B> ] . std ( )
表属性 <B> に重複がある行を drop を <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	X = df . drop_duplicates ( subset = <B> )
<A> というエクセルファイルの <B> シート名からデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
日本語をグラフ中で表示できるようにする	sns . set ( font = 'IPAexGothic' , style = 'white' )	'white' . set ( font = 'IPAexGothic' , style = 'white' )
<A> から重複する値がある行を取り除いて、 <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表データ <A> 内の欠損値を直前の行の値で補って、 <A> に代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> 中の <B> カラムに重複はあるのかどうか見る	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
データフレーム <A> の <B> カラムとカラム <C> をドロップする	<A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 )
<A> 中の欠損を <B> に置換して、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表 <A> の <B> コラムを昇順にソート	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<B> 列という列を消して、 <A> とする	<A> = <A> . drop ( <B> , axis = 1 )	df = df . drop ( <B> , axis = 1 )
同じ x 軸と y 軸でデータフレーム <A> の <B> コラムと <C> コラムとコラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 中に重複はあるかどうか確認	<A> . duplicated ( )	<A> . duplicated ( )
<A> 中の <B> コラムに重複はあるか確認を見る	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
<A> の表属性 <B> を落とす	<A> . drop ( <B> , axis = 1 )	'words' . drop ( <A> , <B> , axis = 1 )
表 <A> 内の NaN を消して、 <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <A> の <B> 表属性が <C> 以上のデータを求める	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
データフレーム <A> の列に存在する <B> の個数を見る	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
<A> 中のカテゴリ変数をダミー変数化する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
<A> を <B> 区切りで読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
そこで、線は一点鎖線を使う	linestyle = 'dashbot'	linestyle = 'dashbot'
<A> ( データフレーム ) のカラム <B> を順番になるようにする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
表属性 <A> という列を落として、置き換える	df . drop ( <A> , axis = 1 , inplace = True )	. drop ( <A> , axis = 1 , inplace = True )
そこで、マーカーのエッジ色は赤紫をする	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
表 <A> を <B> 表属性の値に基づいてソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> 列と <B> 列に重複はあるのか表示する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> のコラム <B> と表 <A> のコラム <C> と表 <A> の <D> コラムの箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
左側のデータの位置と右側のデータのカラム <D> を項目名として、 <B> 表と表 <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
そこで、×のマーカーを表示する	marker = 'x'	marker = 'x'
表データ <B> のコラム <C> とコラム <D> を削除し、 <A> とする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
データフレーム <A> の <B> 列の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
ビン数を <C> として、表データ <A> の列 <B> を分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
データフレーム <A> のカラム <B> と表 <A> の <C> カラムと表 <A> の <D> カラムの箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> コラムの出現頻度を見る	<A> [ <B> ] . value_counts ( )	'words' <A> [ <B> ] . value_counts ( )
データフレーム <A> の未記入の値を <A> データフレームの平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	for <A> = <A> . fillna ( <A> . mean ( ) )
<A> の欠損値を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
棒グラフのラベルを <A> から <B> 、 <C> 、 <D> へ変更する	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	fontsize . xticks = [ <A> , <B> , <C> , <D> ] )
データフレーム <A> の <B> 行を表示する	<A> . head ( <B> )	<A> . head ( <B> )
表データ <A> の欠損を <A> 表の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表 <A> 内の重複をチェックする	<A> . duplicated ( )	X . duplicated ( )
データフレーム <A> 中の NaN を落として、再代入する	<A> = <A> . dropna ( )	1 = <A> . dropna ( )
<A> の <C> コラムに関数 <D> を適用して、新しく <B> コラムにする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の未記入の値を <A> 表データの平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
そこで、マーカーの輪郭色は赤を用いる	markeredgecolor = 'red'	markeredgecolor = 'red'
<A> の <B> コラムの欠損値を <B> コラムの中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
<A> の <B> コラムを軸に昇順で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> 表属性 <B> と <A> データフレーム <C> 表属性とデータフレーム <A> <D> 表属性についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の NaN を含む行を削除し、 <A> にする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
表 <A> と <B> 表を一つにまとめる	pd . merge ( <A> , <B> )	'left' = pd . merge ( <A> , <B> )
<B> という名前のエクセルの全てのシートをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> ( データフレーム ) の <B> 表属性を並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> ( データフレーム ) の <B> 表属性と表属性 <C> を逆順にして、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表データ <A> の <B> 表属性と <C> 表属性をドロップ	<A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 )
データフレーム <B> を位置を軸に並び替えて、 <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> を <B> ファイルパスとして CSV に書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表 <A> を位置で並び替える	<A> . sort_index ( )	<A> . sort_index ( )
同じ軸のセットで <A> 表 <B> 表属性と表 <A> <C> 表属性と表 <A> <D> 表属性を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) の <B> 列を小さい順にする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
CSV ファイル <B> をカンマ区切りでデータフレームとして読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
そこで、目印は四角形をする	marker = 's'	marker = 's'
そこで、グレーをマーカーの種類の色にする	markerfacecolor = 'gray'	marker = 'gray'
列番号 <C> をインデックスとして、ファイルパス <B> を読み込み、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表データ <A> 中のコラム <B> に重複が存在するのか表示してみる	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
<B> を <C> 列に基づいてソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<A> という軸ラベルを y 軸に加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を落として、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	<A> . drop_duplicates ( keep = False , inplace = True )
<A> コラムを項目名としてデータを内部結合する	pd . merge ( df1 , df2 , on = <A> )	for df1 , df2 = <A> )
表データ <A> 中の未入力の値を <B> として、 <A> にする	<A> = <A> . fillna ( <B> )	X = <A> . fillna ( <B> )
表 <A> 全体をコラム <B> の値に基づいてソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> 中の表属性 <B> と表属性 <C> に重複があるか否か	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> の <C> カラムに関数 <D> を適用して、 <B> コラムにする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を位置を元にソート	<A> . sort_index ( )	index = <A> . sort_index ( )
表データをファイル <A> から読む	pd . read_csv ( <A> )	pd . read_csv ( <A> )
ファイル名 <B> として <A> 表データを CSV に書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
先頭の列をインデックスとして、ファイル名 <A> を表に格納する	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
表データとして <B> ファイルをカンマ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
データフレーム <A> の表属性 <B> と表属性 <C> と <D> 表属性についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のカラム <B> の値を軸に並び替え、 <A> に代入する	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
データフレーム <A> の中の未記入の値を直前の行の値で補い、 <A> にする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> の表属性 <B> の各要素の出現頻度	<A> [ <B> ] . value_counts ( )	'words' <A> [ <B> ] . value_counts ( )
表 <A> と表 <B> を横方向に結合する	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
<B> ファイルパスを <C> 区切りでデータフレームとして読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
同じ x 軸と y 軸で <A> データフレームの <B> コラムと <A> データフレームの <C> コラムと <A> データフレームの <D> コラムを箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カラム <A> を順番になるようにソートし、置き換える	df = df . sort_values ( <A> )	df . sort_values ( <A> , inplace = True )
<C> 区切りで <B> ファイルを表として読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
同じ x 軸と y 軸で <A> 表 <B> 表属性と <A> 表 <C> 表属性と表 <A> 表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の表属性 <B> と表属性 <C> と表属性 <D> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	. sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> の列 <B> を位置として設定して、再代入する	<A> = <A> . set_index ( <B> )	start = <A> . set_index ( <B> )
表データ <A> の列名	<A> . columns	columns
<A> ( データフレーム ) の <B> カラムとカラム <C> を大から小へとソートして、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	np <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
<A> 表属性に重複が存在するのか	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
表データ <A> の <B> コラムとコラム <C> を大から小へと並び替え、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	for <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
データフレーム <A> 中の欠損を含む行を消して、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
同じ x 軸と y 軸で <A> データフレームのコラム <B> とコラム <C> と <D> コラムを箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの色として青を使用する	markerfacecolor = 'blue'	markerfacecolor = 'blue'
表データ <A> 中の <B> を未記入の値に置換し、未記入の値が存在する行を消して、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
そこで、文字コードとしてシフト JIS を用いる	encoding = 'shift_jis'	encoding = 'shift_jis'
データフレーム <A> の <B> コラムの欠損をコラム <B> の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
データフレーム <A> をファイル名 <B> に保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
同じ軸で表データ <A> <B> コラムと表データ <A> <C> コラムと表データ <A> <D> コラムを箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の未入力の値を表データ <A> の平均値で補い、 <A> に代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
同じ軸のセットで <A> データフレームの <B> 列と列 <C> と列 <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
カラム <A> と <B> カラムを値が大きい順にソートする	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
そこで、六角形の目印を使用する	marker = 'h'	marker = 'h'
<A> のカラム <B> と <A> データフレームのカラム <C> とデータフレーム <A> の <D> カラムの箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の先頭の <B> 行を調べる	<A> . head ( <B> )	. head ( <A> , <B> )
表 <A> を列 <B> の値に沿ってソートする	<A> . sort_values ( <B> )	markerfacecolor = <A> . sort_values ( <B> )
データフレーム <A> の <B> コラムの未記入の値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
データフレーム <A> の列 <C> に <D> 関数を適用して、コラム <B> にする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> のカラム <B> と <A> データフレームのカラム <C> と <A> データフレームのカラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の NaN が存在する行を削除し、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<B> ( データフレーム ) の <C> 列を順番になるようにソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	x <A> = <B> . sort_values ( <C> )
先頭の列をインデックスにして、ファイルパス <A> からデータフレームとを読む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
表 <A> の <B> カラムについてのヒストグラムを描写する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
<A> カラム <B> と表 <A> <C> カラムと表 <A> <D> カラムの箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の未入力の値を <B> で穴埋めする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表 <A> のコラム <B> をヒストグラムで描画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表 <A> のカラム <B> の NaN を <B> カラムの平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
<B> というエクセルの <C> のシートからデータフレームを読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
そこで、マーカーの種類の色は紫色を使う	markerfacecolor = 'purple'	markerfacecolor = 'purple'
表データ <B> の <C> カラムをインデックス、 <D> カラムをカラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	x = <B> . pivot_table ( index = <C> , columns = <D> )
表データ <A> の NaN を <B> として、 <A> にする	<A> = <A> . fillna ( <B> )	range = <A> . fillna ( <B> )
<B> パスから表をカンマ区切りで読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	X = pd . read_csv ( <B> , sep = ',' )
そこで、六角ビニング図を使う	kind = 'hexbin'	kind = 'hexbin'
<A> のそれぞれの行に対して重複があるかどうかを判定する	<A> . duplicated ( )	<A> . duplicated ( )
パス <B> にデータフレーム <A> を BOM 付きで書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
コラム <A> を並び替える	df . sort_values ( <A> )	df . sort_values ( <A> )
データフレーム <A> 中の未入力の値を直前の行の値で埋めて、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
棒グラフのラベル名を <A> から <B> 、 <C> 、 <D> に変える	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	xticks plt . xticks ( <A> , [ <B> , <C> , <D> ] )
そこで、グラフ種類は柱状グラフとする	kind = 'hist'	kind = 'hist'
<B> ファイルパスに <A> 表データを BOM 付きで書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
データフレーム <A> 内の重複している行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表 <A> の表属性 <B> と <A> 表データの <C> 表属性と <A> 表データの <D> 表属性のボックスチャートを一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム df の <A> 表属性のデータを繰り返す	for name in data [ <A> ] :	for name in data [ <A> ] :
左側のデータの位置と右側のデータのカラム <C> をキーとして、 <A> 表と表 <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	<A> . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> において、 <B> コラムと <C> と <D> の関係性を一度に描写する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<B> 内の重複する行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> の表属性 <B> を落とし、 <A> にする	<A> = <A> . drop ( <B> , axis = 1 )	encoding = <A> . drop ( <B> , axis = 1 )
データフレーム <A> をエクセルファイル <B> という名前で保存する	<A> . to_excel ( <B> )	X <A> . to_excel ( <B> )
データフレーム <A> の重複する行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表データ <A> の中のカラム <B> に重複がある行を削除	<A> . drop_duplicates ( subset = <B> )	drop_duplicates . drop_duplicates ( subset = <B> )
表 <A> 中に存在する <B> を未記入の値に置換し、 <A> にする	<A> = <A> . replace ( <B> , np . nan )	X = <A> . replace ( <B> , np . nan )
表 <A> の中の欠損値がある行を落として、 <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <A> の <B> 表属性を度数分布図にする	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表 <A> のカラム名を <B> から <C> に、 <D> から <E> にリネームし、置き換える	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
<A> カラムとカラム <B> に重複はあるのかチェック	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> の <B> カラムとカラム <C> を値が大きい順に並び替えて、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> において、全ての要素が <C> のコラムを作り、名前を <B> とする	<A> [ <B> ] = [ <C> ] * len ( <A> )	<A> [ <B> ] = [ <C> ] * len ( <A> )
<A> 番まで列を表示できるように変更する	pd . set_option ( 'display.max_columns' , <A> )	pd . read_csv ( <A> , index_col = 0 )
表 <A> 内の欠損値を直前の行の値で補って、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	df . fillna ( method = 'ffill' , inplace = True )
<B> の <C> 列をインデックスに設定して、 <A> とする	<A> = <B> . set_index ( <C> )	= <B> . set_index ( <C> )
<A> のオブジェクトデータの要約統計量	<A> . describe ( include = 'O' )	<A> . describe ( include = 'O' )
<A> 内の NaN を <A> データフレームの平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
データフレーム <A> の <B> カラムと <C> カラムごとにカラム <D> の値の合計	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> の <B> 表属性を柱状グラフにする	plt . hist ( <A> [ <B> ] )	sns . hist ( <A> [ <B> ] )
表データ <B> の <C> 列の名前を <D> に、列 <E> の名前を <F> に変更して、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
表データ <B> の欠損を表データ <B> の平均値で埋め、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
<A> 全体を <B> カラムに基づいてソートし、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
表 <A> 内の未入力の値を表データ <A> の平均値で補い、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
列 <A> と列 <B> を降順にし、置き換える	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
<A> の <B> 表属性をヒストグラムで作画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表データ <B> と <C> 表データに対して、コラム <D> をキーとしてデータを内部結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = <B> , <C> = <D> )
データフレーム <A> の <B> コラムとコラム <C> を降順にソートする	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
2 次元配列 <B> を表に変換し、 <A> に代入する	<A> = pd . DataFrame ( <B> , columns = [ 'label' , 'label2' ] )	= pd . DataFrame ( <A> , columns = <B> )
パス <B> に表 <A> を保存する	<A> . to_csv ( <B> )	. to_csv ( <A> , <B> )
データフレーム <A> 内のカラム <B> に重複がある行を消し、置き換える	<A> = <A> . drop_duplicates ( subset = <B> )	drop_duplicates = <A> . drop_duplicates ( subset = <B> )
データフレーム <A> の位置をリセットして、置き換える	<A> = <A> . reset_index ( )	<A> . reset_index ( inplace = True )
コラム <B> とコラム <C> を大から小へとソートして、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )
表 <A> の <B> カラムとカラム <C> と <D> カラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の列の名前を <B> から <C> に、 <D> から <E> にリネームし、再代入する	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	= <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
表 <A> の列 <B> が <C> 以上のデータを抽出する	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
表 <A> の <B> 表属性と表属性 <C> を大から小へと並び替え、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> の <B> コラムとコラム <C> ごとにコラム <D> の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
カラム <A> とカラム <B> を大きい順に並び替え、再代入する	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
<A> と <B> を <C> 色の折れ線グラフで作図する	plt . plot ( <A> , <B> , color = <C> )	plt . plot ( <A> , <B> , color = <C> )
表データ <A> のカラム <B> に重複はあるか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表 <A> をコラム <B> の値でソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<A> ( データフレーム ) のコラム <B> を小から大へとソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
<A> ( データフレーム ) のカラム <B> を値が小さい順に並び替えて、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
表 <A> の <B> 表属性と <C> 表属性を削除して、インプレースする	<A> . drop ( [ <B> , <C> ] , axis = 1 , inplace = True )	for <A> . drop ( [ <B> , <C> ] , axis = 1 , inplace = True )
分割数を <C> 、ビンの名前を整数値として、表 <A> のカラム <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
<B> ファイルパスから表を読んで、 <A> にする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
表属性 <A> と表属性 <B> に重複はあるかどうか調べる	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
<C> 区切りでファイル <B> を表として読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
データフレーム <A> 中の欠損をカウントする	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の列 <B> を軸に昇順でソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
列 <A> を順番になるようにし、再代入する	df = df . sort_values ( <A> )	X = df . sort_values ( <A> )
そこで、 <A> に小数点 2 位まで出力すること、パーセント表記を指定する。	<A> = '%.2f%%'	<A> = '%.2f%%'
データフレーム <A> のコラム <B> とコラム <C> と <D> コラムの箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と <B> のグラフを RGBc で表示する	plt . plot ( <A> , <B> , color = c )	plt . plot ( <A> , <B> , color = c )
表データ <A> の先頭の 5 行	<A> . head ( )	pd . head ( <A> )
そこで、マーカーの形状の色を紺色とする	markerfacecolor = 'navy'	markerfacecolor = 'navy'
そこで、色は黄緑にする	color = 'greenyellow'	markerfacecolor = 'greenyellow'
<A> の重複する行をドロップし、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<A> のそれぞれの行に対して重複があるかどうかを検出する	<A> . duplicated ( )	<A> . duplicated ( )
同じ軸のセットで <A> データフレーム <B> 列とデータフレーム <A> <C> 列と <A> データフレーム <D> 列を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のコラム <B> を削除して、置き換える	<A> = <A> . drop ( <B> , axis = 1 )	<A> . drop ( <B> , axis = 1 , inplace = True )
表データ <A> の <B> カラムを昇順に並び替えて、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
データフレーム <A> の表属性 <C> の日にちを  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . day	<A> [ <B> ] = <A> [ <C> ] . dt . day
ビン数を <D> 、ビンの名前を整数値として、データフレーム <B> の <C> カラムをビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	df = pd . cut ( <A> [ <B> ] , <C> , label = False )
表 <B> の中の <C> カラムに重複がある行を消して、 <A> に代入する	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
表データ <A> の <B> インデックスの名前を <C> に変更する	<A> . rename ( index = { <B> : <C> } )	<A> . rename ( index = { <B> : <C> } )
左側のデータのインデックスと右側のデータの <D> コラムをキーとして、 <B> 表と表 <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
列番号 <B> をインデックスに指定して、 <A> ファイルを読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
そこで、色は紫色で表示する	color = 'purple'	markerfacecolor = 'purple'
<A> の位置 <B> の名前を <C> にリネームして、再代入する	<A> = <A> . rename ( index = { <B> : <C> } )	index = <A> . rename ( index = { <B> : <C> } )
表データ <B> の列名を <C> から <D> にリネームし、 <A> に代入する	<A> = <B> . rename ( columns = { <C> : <D> } )	<A> = <B> . rename ( columns = { <C> : <D> } )
データフレーム <A> を <B> ファイル名に書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
表データ <A> のコラム <B> が <C> より多いデータを抽出する	<A> [ <A> [ <B> ] >  <C> ]	<A> [ <A> [ <B> ] > <C> ]
表 <A> 表属性 <B> と <A> 表データ <C> 表属性と <A> 表データ表属性 <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、打点のエッジ色はネイビーを用いる	markeredgecolor = 'navy'	markeredgecolor = 'navy'
データフレーム <A> とデータフレーム <B> に対して、コラム <C> をキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> の列 <B> を選択する	<A> [ <B> ]	pd . to_datetime ( <A> [ <B> ] )
先頭の列を位置として、 <A> ファイルを読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> カラムとカラム <B> に重複は存在するのかチェックを表示する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
x 座標を <A> とした <B> の縦向き棒グラフを描画する	plt . bar ( <A> , <B> )	. barh ( <A> , <B> )
データフレーム <A> の列 <B> に重複がある行をドロップを <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	'words' <A> = <A> . drop_duplicates ( subset = <B> )
データフレーム <B> と <C> データフレームに対して、表属性 <D> を項目名としてデータを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = <B> , <C> = <D> )
エクセルファイル <A> のシート全てからデータフレームを読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<B> 内の欠損を直前の行の値で補い、 <A> に代入する	<A> = <B> . fillna ( method = 'ffill' )	markerfacecolor = <B> . fillna ( method = 'ffill' )
そこで、マーカーの種類は点を用いる	marker = '.'	linestyle = 'dashbot'
<B> と表データ <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
表 <B> 内の重複している行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
表データ <A> の列 <B> の未入力の値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
表 <A> の列 <B> が <C> 以上のデータ	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
表 <A> 全体をコラム <B> を元に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	start <A> = <A> . sort_values ( <B> )
データフレーム <A> 中の <B> を NaN に置換し、 NaN が存在する行をドロップして、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> をエクセルファイル <B> というファイル名で書き出す	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
表データ <A> の欠損値を平均値で穴埋めする	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
データフレーム <A> の中の未記入の値を直前の行の値で補って、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	markerfacecolor = <A> . fillna ( method = 'ffill' )
そこで、マーカーの形状の輪郭幅は <A>	markeredgewidth = <A>	markeredgewidth = <A>
描いた図を <A> というファイルに出力する	plt . savefig ( <A> )	sklearn . savefig ( <A> )
データフレーム <A> 全体を <B> コラムに基づいてソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
横軸のラベルを <A> から <B> 、 <C> 、 <D> へ変更する	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	labels = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<A> の重複している行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
タブ区切りで <A> を読む	pd . read_csv ( <A> , sep = '\t' )	pd . read_csv ( <A> , sep = '\t' )
表 <A> のカラム <B> のそれぞれのデータの出現頻度	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
データフレーム <A> のカラム <B> とカラム <C> を大きい順にソートし、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
そこで、五芒星のマーカーの形状を表示する	marker = '*'	marker = '*'
表 <A> 全体をインデックスに沿ってソートし、インプレースする	<A> . sort_index ( inplace = True )	np <A> . sort_index ( inplace = True )
<B> 表属性と <C> 表属性を大から小へとして、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	X = df . sort_values ( [ <B> , <C> ] , ascending = False )
そこで、マーカーの形状の色は赤をする	markerfacecolor = 'red'	marker = 'red'
<A> の列 <B> と <A> 表の <C> 列と表 <A> の <D> 列の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> をコラム <B> を軸にソートして、置き換える	<A> = <A> . sort_values ( <B> )	plt . sort_values ( <A> , <B> , inplace = True )
<A> の欠損値を落とす	<A> . dropna ( )	<A> . dropna ( )
データフレーム <B> 中の <C> を欠損に置換し、欠損が存在する行を消し、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
<A> とデータフレーム <B> を縦方向にくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
位置とコラム <D> を項目名として <B> 表データと表データ <C> を一つにまとめて、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	df = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> 中の未入力の値がある行を削除して、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
先頭の列を位置として、 <B> ファイルパスを読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
左側のデータのインデックスと右側のデータの <D> 表属性をキーとして、 <B> 表と <C> 表を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
そこで、活性化関数は恒等関数にする	activation = 'identity'	marker = 'o'
データフレーム <A> の未入力の値を含む行をドロップを <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <A> のカラム <B> のバリュー	<A> [ <B> ] . values	<A> [ <B> ] . values
そこで、リトルエンディアンを使う	byteorder = 'little'	marker = 'o'
<A> の中の未記入の値を <A> データフレームの平均値で補い、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
そこで、紫を目印のエッジ色とする	markeredgecolor = 'purple'	markeredgewidth = 'purple'
<B> ( データフレーム ) の <C> カラムを順にして、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
<A> の表属性 <B> のデータ	<A> [ <B> ]	pd . to_datetime ( <A> [ <B> ] )
表 <A> 内の <B> を NaN に置換し、 NaN が存在する行を消して、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
データフレーム <A> の <B> 表属性に重複がある行をドロップし、 <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	start = <A> . drop_duplicates ( subset = <B> )
<B> をコラム <C> を軸に並び替えて、 <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
表 <B> のカラム名を <A> とする	<A> = <B> . columns	plt . columns = ( <A> , <B> )
表 <A> の位置を振り直し、置き換える	<A> = <A> . reset_index ( )	<A> . reset_index ( inplace = True )
データフレーム <A> 中の NaN を消して、インプレースする	<A> . dropna ( inplace = True )	np <A> . dropna ( inplace = True )
表 <B> の中の重複している行を取り除き、 <A> とする	<A> = <B> . drop_duplicates ( )	= <B> . drop_duplicates ( )
そこで、点のマーカーの形状を使用する	marker = '.'	linestyle = 'dashbot'
表 <B> と表データ <C> を縦方向に一つにまとめ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
データフレーム <A> 内の重複要素がある行を削除して、 <A> に代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
同じ軸で <A> 表データの列 <B> と表データ <A> の列 <C> と表データ <A> の列 <D> をボックスチャートで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
エクセルファイル <B> をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_excel ( <B> )	X = pd . read_excel ( <B> )
グラフのフォントを日本語に指定する。	sns . set ( font = 'IPAexGothic' , style = 'white' )	'white' . set ( font = 'IPAexGothic' , style = 'white' )
表 <A> 全体を列 <B> の値でソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
そこで、マーカーの種類の輪郭色は紫をする	markeredgecolor = 'purple'	markeredgewidth = 'purple'
ビン数を <C> 、ビンの名前をインデックスとして、 <A> データフレームの <B> コラムを分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> のコラム <B> の値を軸に昇順でソートを <A> にする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
<D> コラムを項目名として、データフレーム <B> とデータフレーム <C> をマージして、 <A> に代入する	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
そこで、マーカーをクロスとする	marker = 'x'	flush = 'x'
表データ <A> のコラム <B> が <C> か <D> のデータ	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	{ <A> <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
<B> ファイルを表として読み込み、 <A> にする	<A> = pd . read_csv ( <B> )	= pd . read_csv ( <A> )
境界値を <D> リストとして、表 <B> の <C> 列を分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
<A> を <B> ファイルパスに書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表データ <A> の <D> 表属性について、表属性 <B> を位置、表属性 <C> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
インデックスとコラム <D> を項目名として <B> 表と表 <C> を結合して、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	df = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表 <B> の中の欠損が存在する行を消して、 <A> とする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
データフレーム <A> とデータフレーム <B> に対して、 <C> コラムを項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
同じグラフ内で <A> 表の表属性 <B> と <A> 表の表属性 <C> と表 <A> の表属性 <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> 内の重複している行を削除を <A> にする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
<B> 内の NaN を <B> データフレームの平均値で埋め、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
カラム <B> を値が小さい順に並び替えて、 <A> とする	<A> = df . sort_values ( <B> )	X = df . sort_values ( <B> )
データフレーム <A> の <B> 列が <C> もしくは <D> のデータを得る	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
表データ <A> の中の重複した行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> という名前のエクセルのシート名 <B> をデータフレームとして読む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
表 <A> の <B> コラムと <C> コラムとコラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
インデックスと <D> カラムをキーとして表データ <B> と <C> 表データを結合して、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> 中のそれぞれのカラムに存在する <B> の個数の合計値を算出する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
そこで、目印の輪郭色は紺色である	markeredgecolor = 'navy'	markeredgecolor = 'navy'
<A> の列名を <B> から <C> にリネームして、再代入する	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
データフレーム <A> の <B> コラムと <C> コラムを値が大きい順にソートして、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	start = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> の <B> を未入力の値に置換し、未入力の値が存在する行を削除	<A> . replace ( <B> , np . nan ) . dropna ( )	plt . replace ( <A> , <B> , np . nan ) . dropna ( )
<B> 番目の列を位置にして、 <A> パスから読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表 <A> 中の未入力の値を <A> データフレームの平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表データ <A> の列 <B> の名前を <C> に変更して、置き換える	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
データフレームをカンマ区切りでファイル名 <A> から読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
縦軸に軸ラベル <A> を加える	plt . ylabel ( <A> )	pd . ylabel ( <A> )
表 <A> の <B> 列を昇順にソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
<B> というエクセルデータの <C> 番目のシートを表データに格納して、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
<A> ( データフレーム ) の <B> カラムとカラム <C> を値が大きい順にし、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
データフレーム <A> の列の名前を <B> から <C> に、 <D> から <E> に変更して、置き換える	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
データフレーム <A> の <B> 列の未記入の値を列 <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	fillna <A> [ <B> ] . median ( ) )
<C> 区切りで CSV ファイル <B> からデータフレームを読み、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> 内の <B> コラムと <C> コラムに重複があるかどうかチェックする	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
ビン数を <D> として、表データ <B> の列 <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
表データ <A> 全体をコラム <B> に基づいてソートして、再代入する	<A> = <A> . sort_values ( <B> )	for <A> = <A> . sort_values ( <B> )
表 <A> 中の <B> 列に重複があるのかどうか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
<A> のコラム <B> に重複は存在するのか確認する	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
列 <A> と列 <B> に重複は存在するのか確認	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> のカラム <B> と表 <A> のカラム <C> と表 <A> の <D> カラムについての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> 表属性を位置に設定して、置き換える	<A> = <A> . set_index ( <B> )	<A> . set_index ( <B> , inplace = True )
そこで、グラフは赤で表示する	color = 'red'	labels = 'red'
<A> のコラム <B> と <C> コラムを大きい順にソートして、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	for <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
グラフ要素に凡例を付ける	plt . legend ( )	color = plt . legend ( )
データフレーム <A> の <B> 列に重複があるとき	if <A> . duplicated ( subset = <B> ) :	duplicated if <A> . duplicated ( subset = <B> ) :
そこで、色は赤紫色をする	color = 'magenta'	markerfacecolor = 'magenta'
データフレーム <A> 内の欠損値を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
<C> 色のグラフで <A> と <B> を描画する	plt . plot ( <A> , <B> , color = <C> )	color = <B> , <C> )
全結合で <A> データフレームとデータフレーム <B> を結合する	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
表データ <A> 全体を位置で並び替え、インプレースする	<A> . sort_index ( inplace = True )	np <A> . sort_index ( inplace = True )
表 <A> 中の未記入の値を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	plt . fillna ( method = 'ffill' )
<B> 中の重複する行を落として、 <A> とする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
表データ <A> のカラム <B> を位置、 <C> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> )	index . pivot_table ( <A> , columns = <B> , values = <C> )
カラム <A> とカラム <B> に重複があるのかどうか表示してみる	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、打点は四角形である	marker = 's'	marker = 's'
ファイル <B> に表 <A> を保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<B> という名前のエクセルデータ <B> の全てのシートを表データに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
表データ <B> の列 <C> と <D> 列を大きい順に並び替えて、 <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表 <A> の表属性 <B> と <C> 表属性と表属性 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の列の名前を <B> から <C> に変更し、置き換える	<A> . rename ( columns = { <B> : <C> } , inplace = True )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
表データ <B> の欠損値を <C> で埋めて、 <A> とする	<A> = <B> . fillna ( <C> )	alpha = <B> . fillna ( <C> )
<A> のコラム <B> ごとに <C> コラムの数を求める	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
表 <A> のコラム <C> の月を見、  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . month	<A> [ <B> ] = <A> [ <C> ] . dt . month
<B> の <C> コラムと <D> コラムを降順に並び替え、 <A> に代入する	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
そこで、マーカーは菱形を使う	marker = 'D'	marker = 'D'
<A> の <B> 表属性と <C> 表属性と <D> 表属性についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> のコラム <B> の欠損をコラム <B> の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
データフレーム <A> のカラムそれぞれに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
<A> の表属性 <B> を位置として、置き換える	<A> = <A> . set_index ( <B> )	df . set_index ( <B> , inplace = True )
<A> 内の重複している行をドロップを <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
<A> 全体を位置を元に並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
表データ <B> の <C> カラムを中央値でビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , 2 )	<A> = pd . qcut ( <B> [ <C> ] , 2 )
表データ <A> の <B> 表属性の名前を <C> にリネームし、置き換える	<A> . rename ( columns = { <B> : <C> } , inplace = True )	<A> = <A> . rename ( columns = { <B> : <C> } )
データフレーム <A> 中の重複している行を消し、再代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
そこで、マーカーの輪郭色は青である	markeredgecolor = 'blue'	markeredgecolor = 'blue'
<B> 列を値が小さい順にソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	<B> <A> = df . sort_values ( <B> )
データフレーム <A> 中のカラムそれぞれに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	X <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> と <B> 表データを横に結合する	pd . merge ( <A> , <B> )	<A> = pd . merge ( <B> )
表データ <B> の全ての列の重複する行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	start = <B> . drop_duplicates ( )
列番号 <C> をインデックスに設定して、ファイル名 <B> をデータフレームとして読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<C> <A> = pd . read_csv ( <B> , index_col = <C> )
<A> の未入力の値をその平均値で補完する	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
<C> コラムを項目名として、 <A> データフレームと <B> データフレームを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> の中のそれぞれのカラムに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
<A> の中のそれぞれのカラムに存在する <B> の個数の合計値を計算する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> の未入力の値の個数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> に重複は存在するのか確認を調べる	<A> . duplicated ( )	<A> . duplicated ( )
表 <B> の <C> 表属性を四分位数ごとでビン分割して、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , 4 )	<A> = pd . qcut ( <B> [ <C> ] , 4 )
同じグラフ内で <A> データフレーム <B> カラムとデータフレーム <A> カラム <C> と <A> データフレーム <D> カラムを箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> というエクセルデータ <A> のシート全部を表データに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表を <B> ファイルパスから読んで、 <A> とする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
<B> というエクセルファイルの <C> 番目のシートから読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> のカラム <B> とカラム <C> を降順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<A> 内の <B> 表属性と表属性 <C> に重複が存在するのか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> のカラム <B> を箱ひげ図に作図する	plt . boxplot ( <A> [ <B> ] )	fontsize = <A> . boxplot ( <B> ] )
表データ <B> のカラム <C> に重複がある行を削除を <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	x = <B> . drop_duplicates ( subset = <C> )
表 <B> の中の欠損がある行を消して、 <A> にする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
表 <A> の <B> 行	<A> . head ( <B> )	'words' <A> . head ( <B> )
表 <A> の <B> コラムの一意の値を見る	<A> [ <B> ] . unique ( )	<A> [ <B> ] . unique ( )
そこで、色は紫である	color = 'purple'	activation = 'purple'
表 <A> 内の重複要素がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	start = <A> . drop_duplicates ( )
<A> 内の NaN の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
一番左の列をインデックスに指定して、 <B> ファイルパスを表に格納して、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表 <A> 表属性 <B> と表データ <A> <C> 表属性と表データ <A> 表属性 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> のカラム <B> の NaN をカラム <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
データフレーム <A> の表属性 <B> が <C> のデータを抽出する	<A> [ <A> [ <B> ] == <C> ]	<A> [ <A> [ <B> ] == <C> ]
表 <A> の <C> コラムの月を  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . month	<A> [ <B> ] = <A> [ <C> ] . dt . month
表 <A> を列 <B> の値に沿ってソートして、置き換える	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
データフレーム <A> の <B> コラムと表 <A> の <C> コラムと <A> 表のコラム <D> のボックスチャートを一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中の NaN を落として、インプレースする	<A> . dropna ( inplace = True )	'words' <A> . dropna ( inplace = True )
<A> の要素	<A> . values	plt . savefig ( <A> )
<A> カラムと <B> カラムに重複があるのかどうか表示する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 全体をカラム <B> を軸にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
そこで、マーカーの種類のエッジ色として黄緑を使用する	markeredgecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
表 <A> をインデックスでソートを <A> とする	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
<A> ( データフレーム ) の <B> 表属性と表属性 <C> を大から小へと並び替える	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
表 <A> と <B> 表データを横方向に結合する	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と表データ <C> を一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	X = pd . merge ( <A> , <B> , <C> , how = 'outer' )
データフレーム <A> 内の <B> を未記入の値に置換し、未記入の値がある行を削除する	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
そこで、赤紫色をマーカーの色にする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
表 <A> の列 <B> をソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
データフレーム <A> からファイル名 <B> という CSV ファイルを書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
<A> 全体をコラム <B> の値を軸にソートして、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
<A> 内の欠損値を <B> とする	<A> . fillna ( <B> )	'words' <A> . fillna ( <B> )
データフレーム <A> 中の未記入の値がある行をドロップし、再代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
そこで、目印は★を用いる	marker = '*'	marker = '*'
表 <A> にある <B> を NaN に置き換えて、 <A> にする	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
同じグラフ内で <A> 表の <B> カラムと <A> 表の <C> カラムと <A> 表のカラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> データフレームコラム <B> と <A> データフレーム <C> コラムと <A> データフレーム <D> コラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の <B> コラムと <C> コラムに重複があるとき	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle = <A> . duplicated ( subset = [ <B> , <C> ] ) :
データフレーム <A> 中のコラム <B> に重複がある行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( subset = <B> )	X = <A> . drop_duplicates ( subset = <B> )
表データ <A> の <B> 列の名前を <C> に、列 <D> の名前を <E> に変更して、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	{ <A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
左側のデータのインデックスと右側のデータの <C> 列を項目名として、表データ <A> と表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> の <B> 表属性に重複はあるかチェック	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> のコラム <B> と <C> コラムとコラム <D> について関係性を一度に描く	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	pairplot . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
エクセルファイル <B> のシート名 <C> をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表データ <A> 中のカラムにある <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> 中の未記入の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
同じグラフ内で <A> 表のコラム <B> と <A> 表の <C> コラムと表 <A> のコラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> から重複する値がある行をドロップする	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
表 <A> の <B> 列をインデックスとして、置き換える	<A> . set_index ( <B> , inplace = True )	if <A> . set_index ( <B> , inplace = True )
<A> の <B> 列ごとに列 <C> の平均値を算出する	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
データフレーム <A> のカテゴリ変数を one - hot 表現にする	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
データフレーム <A> の表属性 <B> と表 <A> の <C> 表属性と <A> 表の表属性 <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ軸でデータフレーム <A> カラム <B> と <A> データフレームカラム <C> とデータフレーム <A> <D> カラムを箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と <B> 表を縦に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
ビン数を <D> 、ビンのラベルをインデックスとして、データフレーム <B> のコラム <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	X = pd . cut ( <A> [ <B> ] , <C> , label = False )
BOM 付きでファイル <B> に表データ <A> を書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
データフレーム <A> 内のカラム <B> に重複はあるのかどうかを見る	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
そこで、円グラフに小数点 2 位までのパーセント表記で構成割合を表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
表 <A> の位置を振り直す	<A> . reset_index ( )	'words' <A> . reset_index ( )
<A> 全体を <B> コラムを軸にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> 中の重複を表示する	<A> . duplicated ( )	'words' <A> . duplicated ( )
そこで、打点の色はグレーを用いる	markerfacecolor = 'gray'	markerfacecolor = 'gray'
<B> の表属性 <C> を軸にソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	x <A> = <B> . sort_values ( <C> )
<A> と <B> を <C> とラベル付けされたグラフで作図する	plt . plot ( <A> , <B> , label = <C> )	sns . plot ( <A> , <B> , label = <C> )
分割数を <C> 、ビンの名前を整数値として、 <A> 表の <B> コラムをビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
表 <A> 内の列それぞれに存在する <B> の個数を表示する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> をインデックスで並び替えて、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> 中のカラムにある <B> の個数の合計を確認する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
エクセルファイル <A> をデータフレームとして読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> )
表 <A> の表属性 <B> の出現回数を見る	<A> [ <B> ] . value_counts ( )	pd . value_counts ( <A> [ <B> ] )
データフレーム <A> の <B> カラムとカラム <C> ごとに <D> カラムの値の和	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> 内の <B> 列に重複がある行を削除する	<A> . drop_duplicates ( subset = <B> )	'words' <A> . drop_duplicates ( subset = <B> )
列 <A> と列 <B> に重複があるのかどうか確認を確認する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
エクセルファイル <B> を表にして、 <A> に代入する	<A> = pd . read_excel ( <B> )	X = <A> . to_excel ( <B> )
エクセルファイル <A> の <B> シート名を表データに格納する	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
一番左の列を位置に設定して、ファイルパス <A> をデータフレームに格納する	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
ラベル <A> をグラフの x 軸につける	plt . xlabel ( <A> )	labels . xlabel ( <A> )
そこで、目印の輪郭色は赤色をする	markeredgecolor = 'red'	markeredgecolor = 'red'
<B> ( データフレーム ) の表属性 <C> を昇順にして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
表 <A> 中の NaN を <A> 表の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
表データ <A> のコラム <B> とコラム <C> を落とす	<A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 )
データフレーム <A> の <B> カラムとカラム <C> と <D> カラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> カラムをキーとしてデータを結合する	pd . merge ( df1 , df2 , on = <A> )	pd . merge ( df1 , df2 , on = <A> )
<B> 区切りで <A> を読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<A> 中の表属性 <B> と <C> 表属性に重複があるか否か	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、色として紫を使用する	color = 'purple'	markerfacecolor = 'purple'
そこで、目印の色を紫とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
データフレーム <A> の重複している行をドロップ	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<A> と <B> 表を縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
パス <B> としてデータフレーム <A> を CSV に書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<A> の表属性 <B> と表属性 <C> を消し、 <A> とする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
表 <A> <B> コラムと <A> 表データ <C> コラムと <A> 表データ <D> コラムについての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、打点の色は紺色を用いる	markerfacecolor = 'navy'	markerfacecolor = 'navy'
表 <B> のカラム <C> を中央値でビン分割して、 <A> に代入する	<A> = pd . qcut ( <B> [ <C> ] , 2 )	<A> = pd . qcut ( <B> [ <C> ] , 2 )
表データ <A> を列 <B> の値に基づいてソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
ビン数を <D> として、表 <B> の列 <C> を要素数が等しくなるようにビン分割して、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
<A> の欠損をその平均値で穴埋めする	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
<A> から重複する行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
同じ軸で <A> 表カラム <B> と表 <A> カラム <C> と表 <A> <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
先頭の列をインデックスに、 <B> ファイル名を表データに格納し、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表データ <A> の <B> コラムの未入力の値を <B> コラムの中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
<A> 中の欠損を <B> に置き換える	<A> . fillna ( <B> )	'words' <A> . fillna ( <B> )
<A> を縦軸、 <B> をグラフの x 軸として、散布図をプロットする	plt . scatter ( <A> , <B> )	scatter = <A> . scatter ( <B> )
表データ <B> と <C> データフレームを縦方向に一つにまとめて、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
データフレーム <A> の列 <B> と <A> データフレームの列 <C> とデータフレーム <A> の <D> 列の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の中の未記入の値をデータフレーム <A> の平均値で埋めて、 <A> に代入する	<A> = <A> . fillna ( <A> . mean ( ) )	alpha = <A> . fillna ( <A> . mean ( ) )
<A> のカラム <B> とカラム <C> の相関を確認する	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
データフレーム <A> の中の表属性 <B> と <C> 表属性に重複はある場合	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle . duplicated ( subset = [ <A> , <B> , <C> ] ) :
<A> をファイル <B> という名前で CSV ファイルで保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
カンマ区切りでデータフレームを CSV ファイル <B> から読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
データフレーム <A> の <B> コラムに重複があるのかチェック	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
同じ軸のセットで表 <A> の <B> コラムとコラム <C> とコラム <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> のカラム <B> の曜日	<A> [ <B> ] . dt . weekday_name	<A> [ <B> ] . dt . weekday_name
列番号 <B> を位置として、 <A> ファイル名からデータフレームとを読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> 中で重複する行の合計を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> 全体を表属性 <B> を元にソートし、置き換える	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
<A> の <B> についての中央値	<A> [ <B> ] . median ( )	plt . median ( <A> [ <B> ] )
<A> をインデックスに基づいてソートして、インプレースする	<A> . sort_index ( inplace = True )	df . sort_index ( inplace = True )
データフレーム <A> を列 <B> の値を軸にソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<A> を列 <B> の値を元に昇順で並び替えて、置き換える	<A> = <A> . sort_values ( <B> )	df . sort_values ( <B> , inplace = True )
データフレーム <B> の <C> コラムとコラム <D> を大から小へと並び替えて、 <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <B> の <C> コラムを削除を <A> にする	<A> = <B> . drop ( <C> , axis = 1 )	alpha = <B> . drop ( <C> , axis = 1 )
分割数を <D> 、ビンのラベルを <E> リストとして、データフレーム <B> の <C> 表属性をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	df = pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> のコラム <B> を軸に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
<A> というラベルを x 座標に付ける	plt . xlabel ( <A> )	df . xlabel ( <A> )
ビン数を <D> として、表 <B> の <C> 表属性をビンに含まれる個数が等しくなるように分割して、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
<B> というエクセルファイルの全部のシートをデータフレームとして読み込み、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
データフレーム <A> 内に重複は存在するのかチェックを表示する	<A> . duplicated ( )	<A> . duplicated ( )
<A> <B> 表属性と <A> 表 <C> 表属性と表 <A> 表属性 <D> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <B> を位置に、 <A> ファイルを読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> 内の欠損を <B> で埋め、 <A> とする	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
そこで、マーカーの形状のエッジ色はグレー	markeredgecolor = 'gray'	markeredgecolor = 'gray'
データフレーム <A> 内の列それぞれにある <B> の個数の合計を計算する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表 <A> 全体を <B> カラムの値に基づいてソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <A> の <B> 表属性の欠損値を表属性 <B> の平均値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
データフレーム <A> 内の NaN を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
もしデータフレーム <A> のそれぞれの行において重複があるならば	if <A> . duplicated ( ) :	if <A> . duplicated ( ) :
表属性 <A> と表属性 <B> に重複は存在するのか確認する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 中の <B> を欠損に置換し、欠損がある行をドロップして、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> の表属性 <B> が <C> 以下データ	<A> [ <A> [ <B> ] <= <C> ]	df [ <A> [ <B> ] <= <C> ]
表データ <A> 内の NaN を <B> に置き換え、 <A> にする	<A> = <A> . fillna ( <B> )	'words' <A> = <A> . fillna ( <B> )
そこで、マーカーの形は星である	marker = '*'	marker = '*'
左側のデータのインデックスと右側のデータの列 <C> を項目名として、 <A> 表データと <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> を <B> コラムを軸に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> のコラム <B> の曜日	<A> [ <B> ] . dt . weekday_name	<A> [ <B> ] . dt . weekday_name
エクセルファイル <A> をデータフレームに読み込む	pd . read_excel ( <A> )	pd . read_excel ( <A> )
<A> のカラム <B> を位置、カラム <C> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> )	index . pivot_table ( <A> , columns = <B> , values = <C> )
データフレーム <B> の表属性 <C> の名前を <D> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> } )	= <B> . rename ( columns = { <C> : <D> } )
<B> を表属性 <C> の値で並び替えて、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
そこで、グラフの種類は折れ線グラフである	kind = 'line'	kind = 'line'
表 <A> <B> 表属性とデータフレーム <A> <C> 表属性とデータフレーム <A> 表属性 <D> についての箱髭図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
配列 <B> を表に変換して、 <A> とする	<A> = pd . pd . DataFrame ( <B> , columns = [ 'label' ] )	pd . pd . DataFrame ( <A> , columns = [ 'label' , 'label2' ] )
そこで、水色をマーカーの種類のエッジ色とする	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
そこで、×の打点を表示する	marker = 'x'	marker = 'x'
そこで、マーカーのエッジ色は水色である	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
<A> と <B> データフレームを縦にくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
データフレーム <B> のカラム <C> を削除を <A> とする	<A> = <B> . drop ( <C> , axis = 1 )	alpha = <B> . drop ( <C> , axis = 1 )
表をパス <B> から読み、 <A> とする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
<C> 番目の列をインデックスに設定して、ファイルパス <B> を読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表 <A> の先頭の <B> 行を見る	<A> . head ( <B> )	pd . head ( <A> , <B> )
<A> の重複する行をドロップする	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
表 <A> の表属性 <B> とデータフレーム <A> の表属性 <C> とデータフレーム <A> の表属性 <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で表 <A> <B> コラムと <A> 表 <C> コラムと <A> 表 <D> コラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> 列の未記入の値を列 <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
表データ <A> 内の欠損値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 内の <B> を欠損に置換し、欠損がある行を落とす	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
同じ x 軸と y 軸で <A> 表データの列 <B> と <C> 列と <D> 列を箱髭図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> をカラム <B> に沿ってソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> をグラフの y 軸、 <B> をグラフの x 軸として、折れ線グラフを作画する	plt . plot ( <A> , <B> )	color = <A> . plot ( <B> )
<A> 内のカラムに存在する <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <B> 内の <C> 表属性に重複がある行を落とし、 <A> に代入する	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
<A> 内の <B> カラムに重複が存在するのか確認	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
データフレーム <A> 中のカラムそれぞれに存在する <B> の個数の合計値を求める	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
一番左の列を位置に指定して、ファイルパス <A> からデータフレームとを読み込む	pd . read_csv ( <A> , index_col = 0 )	. pd . read_csv ( <A> , index_col = 0 )
表データ <A> カラム <B> とデータフレーム <A> カラム <C> と <A> データフレームカラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> 行目のカラム <C> を得る	<A> . iloc [ <B> ] [ <C> ]	X <A> . iloc [ <B> ] [ <C> ]
<B> と表データ <C> を横にくっつけ、 <A> にする	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
<A> 中の index が <B> の行	<A> . loc [ <B> ]	plt . loc [ <A> , <B> ] )
エクセルデータ <A> をデータフレームにする	pd . read_excel ( <A> )	. read_excel ( <A> )
表データ <A> の <B> 表属性の名前を <C> に、表属性 <D> の名前を <E> に変更して、置き換える	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
同じ軸でデータフレーム <A> の列 <B> とデータフレーム <A> の <C> 列とデータフレーム <A> の列 <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の重複する値がある行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
そこで、 0 行目をヘッダーとしない	encoding = 'shift_jis'	df . read_csv ( <A> , encoding = 'shift_jis' )
<A> の列 <B> と <C> 列に重複があるかどうか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> の <B> コラムをソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
一番左の列を位置と設定して、 <B> ファイルパスからデータフレームとを読み込んで、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
データフレーム <A> の列 <B> の未記入の値を列 <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
データフレーム <A> の <B> カラムが <C> より多いデータを取得する	<A> [ <A> [ <B> ] >  <C> ]	df [ <A> [ <B> ] > <C> ]
<A> の <B> 列と表データ <A> の <C> 列と <A> 表データの <D> 列についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
エクセルファイル <A> の <B> シート名をデータフレームとして読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
そこで、マーカーの形状を六角形とする	marker = 'h'	marker = 'h'
表データ <A> の欠損値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> の列 <B> に重複がある行をドロップ	<A> . drop_duplicates ( subset = <B> )	'words' <A> . drop_duplicates ( subset = <B> )
<A> の <B> 列を軸に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
列 <B> を並び替え、 <A> に代入する	<A> = df . sort_values ( <B> )	X = df . sort_values ( <B> )
表 <A> 全体を表属性 <B> を元にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
<A> ( データフレーム ) の <B> 列と列 <C> を逆順に並び替え、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
表 <A> 内の未入力の値を <B> で埋めて、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表 <A> カラム <B> とデータフレーム <A> カラム <C> とデータフレーム <A> <D> カラムの箱髭図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
x 座標のラベルを <A> にセットする	plt . xlabel ( <A> )	plt . xlabel ( <A> )
そこで、活性化は relu である	activation = 'relu'	activation = 'relu'
<A> を位置でソートし、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表データ <A> の <B> 表属性の名前を <C> に、表属性 <D> の名前を <E> に変更し、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	x <A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
データフレーム <A> の表属性 <B> に重複は存在するのか確認する	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
単語リスト <A> の出現頻度を確認する	pd . DataFrame ( { 'words' : <A> } ) . value_counts ( )	<A> . value_counts ( )
表データ <B> と <C> 表データを縦結合して、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表データ <A> 中のカラムにある <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表 <B> の <C> コラムを位置、コラム <D> をコラムとしたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	x = <B> . pivot_table ( index = <C> , columns = <D> )
そこで、マーカーの色は紺色とする	markerfacecolor = 'navy'	markerfacecolor = 'navy'
両方の列を使って <A> ( データフレーム ) とデータフレーム <B> を結合する	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
表データ <B> と <C> 表に対して、カラム <D> をキーとしてデータを内部結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = <B> , <C> = <D> )
表属性 <A> を値が小さい順にソートし、置き換える	df . sort_values ( <A> , inplace = True )	X = df . sort_values ( <A> )
表 <A> 全体をインデックスに沿ってソートし、 <A> に代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
位置と <C> 表属性を項目名として <A> 表データと <B> 表データを一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
CSV ファイル <B> からデータフレームを <C> 区切りで読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表 <A> の <B> コラムとコラム <C> に重複があるならば	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle = <A> . duplicated ( subset = [ <B> , <C> ] ) :
タイトルを <A> とセットする	plt . title ( <A> )	df . title ( <A> )
表属性 <D> を項目名として、 <B> 表データと表データ <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
エクセル <A> のシート全部を表に格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> 表属性という列を消し、置き換える	df = df . drop ( <A> , axis = 1 )	. drop ( <A> , axis = 1 , inplace = True )
そこで、赤色をマーカーの色にする	markerfacecolor = 'red'	marker = 'red'
データフレーム <A> の重複する行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
ビン数を <D> 、ビンのラベルを整数値として、 <B> 表データの表属性 <C> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	False = pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> ( データフレーム ) の <B> 列を順番になるようにして、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
2 次元配列 <A> を <B> をコラム名として表に変換する	pd . DataFrame ( <A> , columns = <B> )	plt . boxplot ( <A> [ <B> ] )
データフレーム <A> の <B> 表属性をドロップして、インプレースする	<A> . drop ( <B> , axis = 1 , inplace = True )	<A> . drop ( <B> , axis = 1 , inplace = True )
データフレーム <A> の欠損の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、種類は密度推定図をする	kind = 'density'	stacked = 'density'
<A> ( データフレーム ) のコラム <B> を順にソートし、 <A> に代入する	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
左側のデータのインデックスと右側のデータの <C> 表属性を項目名として、表データ <A> と <B> 表データをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> の表属性 <B> 内の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
2 次元配列 <A> をデータフレームにする	pd . DataFrame ( <A> , columns = [ 'label' , 'label2' ] )	pd . DataFrame ( <A> , columns = [ 'label' , 'label2' ] )
境界値をリスト <C> として、 <A> データフレームの <B> 列を分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
インデックスと <C> コラムをキーとしてデータフレーム <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
ビンの数を <B> として <A> の度数分布図を描く	plt . hist ( <A> , bins = <B> )	pd . hist ( <A> , bins = <B> )
同じ x 軸と y 軸でデータフレーム <A> の列 <B> と <C> 列と <D> 列を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ軸のセットでデータフレーム <A> の表属性 <B> と表属性 <C> と <D> 表属性を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ラベル <A> を y 軸に加える	plt . ylabel ( <A> )	plt . ylabel ( <A> )
そこで、四角形のマーカーの種類を表示する	marker = 's'	marker = 's'
インデックスと列 <C> をキーとして <A> 表と <B> 表をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> 中のカラムに存在する <B> の個数の合計	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
そこで、打点の輪郭色として青を用いる	markeredgecolor = 'blue'	markeredgecolor = 'blue'
データフレーム <A> の表属性 <B> を昇順にソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
データフレーム <A> の <B> 表属性に重複がある行をドロップし、インプレースする	<A> . drop_duplicates ( subset = <B> , inplace = True )	<A> . drop_duplicates ( subset = <B> , inplace = True )
データフレーム <A> のコラム <B> の未入力の値を <B> コラムの平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
重複した最後の行を残して <A> ( データフレーム ) 内の重複した行を消して、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	<A> . drop_duplicates ( keep = False , inplace = True )
表データ <A> のコラム <B> と表 <A> のコラム <C> と <A> 表のコラム <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> をファイル名 <B> にして保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
分割数を <C> として、表 <A> の <B> コラムを要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . qcut ( <A> [ <B> ] , <C> )
<A> のカラム <D> について、カラム <B> をインデックス、 <C> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
そこで、打点のエッジ色は紫をする	markeredgecolor = 'purple'	activation = 'purple'
<A> を表属性 <B> を元に並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
同じグラフ内でデータフレーム <A> の <B> コラムと <A> データフレームのコラム <C> と <A> データフレームのコラム <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<D> 列をキーとして、表データ <B> と <C> 表データをマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
<C> コラムをキーとして、データフレーム <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
RGBc で <A> と <B> の線グラフを描く	plt . plot ( <A> , <B> , color = c )	plt . plot ( <A> , <B> , color = c )
<A> の列 <B> を柱状図で描画する	plt . hist ( <A> [ <B> ] )	sns . hist ( <A> [ <B> ] )
<A> のコラム <B> をソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
表 <A> を <B> 列で並び替えて、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
分割数を <D> として、データフレーム <B> の <C> 表属性を要素数が等しくなるように分割し、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
データフレーム <A> と <B> 表を縦に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
データフレーム <A> の行名を <B> から <C> に変更し、インプレースする	<A> . rename ( index = { <B> : <C> } , inplace = True )	<A> . rename ( index = { <B> : <C> } , inplace = True )
CSV ファイル <B> からカンマ区切りで表を読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表 <A> 内の <B> 列に重複はあるかどうかチェックする	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> において、 <B> コラムの箱ひげ図を作画する	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
<A> 内の <B> を欠損に置換し、欠損がある行を削除	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
表データ <B> を位置を軸にソートして、 <A> とする	<A> = <B> . sort_index ( )	x = <B> . sort_index ( )
列番号 <B> をインデックスに指定して、ファイル名 <A> から読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
データフレーム <B> の中の欠損がある行を削除して、 <A> とする	<A> = <B> . dropna ( )	alpha = <B> . dropna ( )
<A> の中のカラムに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
同じ軸で <A> データフレームの列 <B> とデータフレーム <A> の列 <C> と <A> データフレームの <D> 列をボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <C> をインデックスに設定して、 <B> ファイルパスをデータフレームとして読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<C> <A> = pd . read_csv ( <B> , index_col = <C> )
表 <A> の中の重複要素がある行を削除し、 <A> にする	<A> = <A> . drop_duplicates ( )	start = <A> . drop_duplicates ( )
表データ <A> の <B> カラムの時間を確認する	<A> [ <B> ] . dt . hour	<A> [ <B> ] . dt . hour
<A> 表属性と <B> 表属性に重複はあるかどうか確認	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
同じグラフ内で <A> 表データの <B> コラムと表データ <A> の <C> コラムと <A> 表データの <D> コラムをボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中の <B> を NaN に置換し、 NaN がある行をドロップ	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> の中の <B> を未記入の値に置換し、未記入の値がある行を削除する	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
<A> 内の <B> を未入力の値に置換し、未入力の値が存在する行を削除する	<A> . replace ( <B> , np . nan ) . dropna ( )	plt . replace ( <A> , <B> , np . nan ) . dropna ( )
そこで、活性化は tanh にする	activation = 'tanh'	color = 'cyan'
データフレーム <A> のカラム <B> と <C> カラムとカラム <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーの大きさは <A> である	markersize = <A>	markersize = <A>
表データ <A> のカテゴリ変数を数値データに変換し、 <A> とする	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
エクセル <B> のシート全てをデータフレームに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
コラム <B> を順番になるように並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	<B> <A> = df . sort_values ( <B> )
表 <B> 全体を <C> カラムの値を軸にソートを <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
ファイル <A> からデータフレームをカンマ区切りで読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
そこで、グラフは散布図を用いる	kind = 'scatter'	color = 'scatter'
列番号 <B> を位置と設定して、ファイル <A> を読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
そこで、活性化関数は、ランプ関数を用いる	activation = 'relu'	activation = 'relu'
表データ <A> の <B> コラムの前後の行の差分を計算する	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
データフレーム <A> の列 <B> の欠損値を <B> 列の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
<A> の <B> を欠損に置換し、欠損が存在する行を削除して、 <A> に代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> 中の <B> を未入力の値に置換し、未入力の値が存在する行を消し、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> の <B> 列を昇順でソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
表 <A> 中の NaN を含む行を落とし、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表データ <A> 内の表属性 <B> に重複は存在するのか確認を調べる	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
そこで、マーカーの形状は点を用いる	marker = '.'	linestyle = 'dashbot'
<A> をファイル名 <B> という名前で CSV ファイルで保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
コラム <A> とコラム <B> を大きい順にする	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
表データ <A> 内に存在する <B> を NaN とする	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
データフレーム <A> 中の <B> を NaN に置換し、 NaN がある行を落として、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> と <B> 表データに対して、コラム <C> を項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
作成したグラフを <A> というファイルで書き出す	plt . savefig ( <A> )	sklearn . savefig ( <A> )
表データ <A> 内の列それぞれに存在する <B> の個数の合計を見る	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> 内の NaN を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method . fillna ( method = 'ffill' )
データフレームをカンマ区切りでファイル名 <B> から読み込み、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表 <A> をインデックスに沿ってソートし、 <A> に代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
ビン数を <C> 、ビンの名前を <D> リストとして、表 <A> の <B> 表属性を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
データフレーム <A> の <B> カラムごとにカラム <C> の個数	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
<B> コラムに重複がある行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <B> )	X = df . drop_duplicates ( subset = <B> )
<A> を表属性 <B> を元に昇順でソートして、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
表 <A> 中のコラム <B> と <C> コラムに重複は存在するのか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> を <B> 列で並び替え、再代入する	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> <B> 列と表 <A> 列 <C> と表 <A> 列 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> 列と <C> 列ごとに列 <D> の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表データ <B> 中の表属性 <C> に重複がある行をドロップし、 <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
表 <A> の未入力の値を消し、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <B> の <C> カラムとカラム <D> を降順にソートを <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表 <A> 全体をインデックスを軸にソートし、再代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
<A> を <B> から <C> 範囲のヒストグラムにする	plt . hist ( <A> , range = ( <B> , <C> ) )	hist plt . hist ( <A> , range = ( <B> , <C> ) )
そこで、破線と点線を線にする	linestyle = 'dashbot'	activation = 'dashbot'
そこで、マーカーの形の輪郭色として赤紫色を用いる	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
表 <A> の <B> 列と <C> 列を大から小へとソートする	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
カラム <A> と <B> カラムに重複は存在するのか確認を確認する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> のカラム <B> 、 <C> 、 <D>	<A> [ [ <B> , <C> , <D> ] ]	'words' <A> [ <B> , <C> , <D> ] ]
データフレームとしてカンマ区切りで <A> ファイルを読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
<A> というエクセルファイルの <B> 番目のシートから読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
ビン数を <C> 、ビンのラベルをインデックスとして、 <A> データフレームのカラム <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
データフレーム <A> のカラム <B> とデータフレーム <A> のカラム <C> と <A> データフレームのカラム <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の <B> カラムの欠損値をカラム <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
<A> 中の重複した行を消し、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
表 <A> の <B> 表属性と表属性 <C> に重複があるならば	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle = <A> . duplicated ( subset = [ <B> , <C> ] ) :
両方の列を使って <B> ( データフレーム ) と表データ <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	= pd . merge ( <A> , <B> , <C> , how = 'outer' )
<B> のコラム <C> とコラム <D> を降順にソートし、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<B> 中の <C> を未入力の値に置換し、未入力の値が存在する行を消して、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
データフレーム <A> を位置で並び替え、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
エクセルファイル <B> から読み込み、 <A> とする	<A> = pd . read_excel ( <B> )	fontsize = <A> . read_excel ( <B> )
表データ <A> の表属性 <B> をソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> 全体を <B> 表属性の値を軸にソートを <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> 表属性 <B> と <A> 表 <C> 表属性と表 <A> <D> 表属性の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> コラムとコラム <B> を逆順にして、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
インデックスと <D> カラムを項目名として表 <B> と <C> 表をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
同じ x 軸と y 軸で表 <A> の <B> 表属性と <C> 表属性と表属性 <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表属性 <A> と表属性 <B> を値が大きい順にし、置き換える	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
表データ <A> の <B> 表属性を柱状グラフで作図する	plt . hist ( <A> [ <B> ] )	sns . pairplot ( <A> [ <B> ] )
表 <A> のカラム <B> を度数分布図で描画する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表データ <A> の <B> カラムを箱ひげ図に描画する	plt . boxplot ( <A> [ <B> ] )	fontsize = <A> . boxplot ( <B> ] )
CSV ファイル <A> から <B> 区切りで表データを読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<A> 全体を <B> 列を元に昇順でソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> の中の <B> 列に重複は存在するのか表示してみる	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> の中の <B> 表属性に重複があるか調べる	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
<A> の中の重複する行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
表 <A> の未記入の値を含む行を消し、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
カンマ区切りで表をファイル <A> から読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
データフレーム <A> を <B> 表属性に基づいてソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	X = <A> . sort_values ( <B> )
そこで、打点は四角形を使う	marker = 's'	marker = 's'
<A> のカラム <B> の名前を <C> に、カラム <D> の名前を <E> に変更し、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	plt . rename ( <A> , columns = { <B> : <C> , <D> : <E> } )
<A> のコラム <B> の中の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
表 <A> の <B> 列と <C> 列と列 <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の重複する行を消して、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
カンマ区切りで <B> ファイル名をデータフレームとして読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表 <A> の <C> コラムの時間を表示し、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . hour	<A> [ <B> ] = <A> [ <C> ] . dt . hour
表 <B> 中の <C> コラムに重複がある行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
表 <A> の表属性 <B> と <C> 表属性をドロップを <A> にする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> の <B> 列の欠損値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
表データ <A> 中の未記入の値を直前の行の値で補って、置き換える	<A> = <A> . fillna ( method = 'ffill' )	markerfacecolor = <A> . fillna ( method = 'ffill' )
x 軸に <A> ラベルを付ける	plt . xlabel ( <A> )	df . xlabel ( <A> )
同じグラフ内で <A> 表の <B> 列と列 <C> と <D> 列をボックスチャートで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
BOM 付きでデータフレーム <A> を <B> ファイルパスに保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
<D> 表属性を項目名として、 <B> データフレームと <C> データフレームをマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <D> )	df = pd . merge ( <A> , <B> , <C> , on = <D> )
<B> 内の重複している行を落とし、 <A> にする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
表データ <A> のカラム <B> の曜日を確認する	<A> [ <B> ] . dt . weekday_name	<A> [ <B> ] . dt . weekday_name
表データ <A> のカラム <B> と <A> 表の <C> カラムと表 <A> の <D> カラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラム	<A> [ <B> ]	'words' <A> [ <B> ]
<A> という名前のエクセルファイルの <B> 番目のシートからデータフレームを読む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
同じ軸のセットで <A> 表データ <B> コラムと <A> 表データコラム <C> と表データ <A> <D> コラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データを <A> パスから読み込む	pd . read_csv ( <A> )	pd . read_csv ( <A> )
表データ <A> 全体を <B> 表属性の値を軸に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> の表属性 <B> とデータフレーム <A> の表属性 <C> とデータフレーム <A> の <D> 表属性の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列 <A> を順にして、置き換える	df = df . sort_values ( <A> )	df . sort_values ( <A> , inplace = True )
<A> の表属性 <B> と <C> 表属性と表属性 <D> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<B> ファイル名から表をカンマ区切りで読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
左側のデータの位置と右側のデータの <D> 表属性をキーとして、表データ <B> と <C> 表データをマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
データフレーム <A> の <B> 列の未入力の値を列 <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
表データ <A> の欠損を <B> とする	<A> . fillna ( <B> )	'words' <A> . fillna ( <B> )
<A> 中の列 <B> と列 <C> に重複を判定する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
ビン数を <C> 、ビンのラベルを整数値として、表 <A> の表属性 <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
そこで、マーカーの種類の色は黄色である	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
データフレーム <A> の振り直して、元のインデックスを削除して、インプレースする	<A> . reset_index ( drop = True , inplace = True )	<A> . reset_index ( drop = True , inplace = True )
表データ <A> の <B> 行目を落とし、置き換える	<A> . drop ( <B> , inplace = True )	<A> . drop ( <B> , inplace = True )
データフレーム <A> の中の表属性 <B> に重複があるか調べる	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
データフレーム <A> 内の欠損を <B> に置換し、再代入する	<A> = <A> . fillna ( <B> )	range = <A> . fillna ( <B> )
表 <A> のコラム <B> と <A> 表の <C> コラムと表 <A> の <D> コラムについての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムが <C> より少ないデータを取得する	<A> [ <A> [ <B> ] <  <C> ]	<A> [ <A> [ <B> ] < <C> ]
そこで、アライメントは中央寄せである	align = 'center'	kind = 'hist'
表 <A> の中の <B> 表属性に重複があるのかどうか表示する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
データフレーム <A> の行の名前を <B> から <C> にリネームして、置き換える	<A> . rename ( index = { <B> : <C> } , inplace = True )	df = <A> . rename ( index = { <B> : <C> } )
ビン数を <D> 、ビンの名前をインデックスとして、表データ <B> の列 <C> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	= pd . cut ( <A> [ <B> ] , <C> , label = False )
データフレーム <A> の <B> 列と列 <C> を降順にソートして、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	for <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表データ <A> の <B> カラムとカラム <C> を大から小へとソートする	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
データフレーム <A> の <B> 表属性をドロップして、再代入する	<A> = <A> . drop ( <B> , axis = 1 )	start = <A> . drop ( <B> , axis = 1 )
データフレーム <A> の <B> コラムのそれぞれのデータの出現回数	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
<A> ( データフレーム ) の <B> 表属性を順番になるようにソートし、置き換える	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
データフレーム <B> 内の表属性 <C> に重複がある行を削除を <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	x = <B> . drop_duplicates ( subset = <C> )
<A> の列 <B> の名前を <C> に変更し、置き換える	<A> . rename ( columns = { <B> : <C> } , inplace = True )	{ <A> . rename ( columns = { <B> : <C> } , inplace = True )
表 <A> 中の重複している値がある行を削除する	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
<A> カラムとカラム <B> を逆順にし、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
重複した最後の行を残して <B> ( データフレーム ) の中の重複している行を消して、 <A> にする	<A> = <B> . drop_duplicates ( keep = False )	x = <B> . drop_duplicates ( keep = False )
<B> パスに <A> データフレームを文字化けしないように保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
<A> の表属性 <B> を軸に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	range = <A> . sort_values ( <B> )
表データ <A> の列 <B> と列 <C> ごとに <D> 列の値の和を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
そこで、隠れ層として <A> 層を用いる	hidden_layer_sizes = ( <A> , )	hidden_layer_sizes = ( <A> , )
データフレーム <A> 全体をインデックスを軸にソートし、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> を <B> コラムを軸にソートして、置き換える	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> を <B> 表属性を元にソートして、置き換える	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
そこで、マーカーの色としてネイビーを使用する	markerfacecolor = 'navy'	markerfacecolor = 'navy'
<A> ( データフレーム ) の列 <B> を順番になるようにソートを <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
出力するグラフのサイズを横 <A> 縦 <B> にする	plt . figure ( figsize = ( <A> , <B> ) )	figsize = plt . figure ( <A> , <B> ) )
<B> 番目の列をインデックスに設定して、ファイルパス <A> を表に格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> の表属性 <C> の時間を  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . hour	<A> [ <B> ] = <A> [ <C> ] . dt . hour
そこで、目印の輪郭色として赤色を使用する	markeredgecolor = 'red'	markeredgecolor = 'red'
重複した最後の行を残して <A> ( データフレーム ) の重複した行を削除	<A> . drop_duplicates ( keep = False )	<A> . drop_duplicates ( keep = False )
<A> の <B> カラムをソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> のカラム <B> の値を昇順でソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
同じ軸で <A> 表の <B> カラムと表 <A> の <C> カラムと表 <A> の <D> カラムを箱髭図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の未入力の値の合計を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
列 <A> と列 <B> に重複があるのかどうか確認	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> の中の欠損がある行を消す	<A> . dropna ( )	<A> . dropna ( )
表 <A> の <B> カラムの中の前後の行の差分を求める	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
描いたグラフを <A> として書き出す	plt . savefig ( <A> )	df . savefig ( <A> )
表データ <A> を列 <B> を軸に並び替え、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
<C> を <B> 表属性として、新しいデータフレームを作成して、 <A> に代入する	<A> = pd . DataFrame ( { <B> : <C> } )	<A> = pd . DataFrame ( { <B> : <C> } )
<A> ( データフレーム ) の <B> カラムを小から大へとする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
x 軸を <A> とした <B> の鉛直棒グラフを描画する	plt . barh ( <A> , <B> )	. barh ( <A> , <B> )
表データ <B> の表属性 <C> と表属性 <D> を落とし、 <A> とする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
<A> の表属性 <B> ごとに表属性 <C> の平均値を算出する	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
先頭の列をインデックスに、ファイルパス <B> を読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<A> において、カラム <B> から箱ひげ図を表示する	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
ビン数を <C> として、表データ <A> のコラム <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
コラム <B> をソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = df . sort_values ( <B> )
そこで、六角形のマーカーの形状を用いる	marker = 'h'	marker = 'h'
そこで、プロットマーカーの透明度を <A> とセットする	alpha = <A>	solver = <A>
<A> の表属性 <B> をソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<B> 全体を <C> コラムを軸にソートを <A> にする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
左側のデータの位置と右側のデータの <B> コラムを項目名として 2 つのデータを結合し、 <A> にする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
先頭の列を位置と設定して、ファイル <A> をデータフレームとして読む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
そこで、マーカーの形状はダイヤモンドにする	marker = 'D'	marker = 'D'
文字コードを shift_jis として、ファイル <B> を読んで、 <A> とする	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )
表 <A> の相関係数	<A> . corr ( )	<A> . corr ( )
表データ <A> 内の未記入の値の数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> の <B> 表属性と表属性 <C> と <D> 表属性について関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<B> ファイル名にインデックスなしでデータフレーム <A> を保存する	<A> . to_csv ( <B> , index = False )	index <A> . to_csv ( <B> , index = False )
表データ <A> を <B> 表属性の値を元にソートして、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
そこで、横棒グラフをする	kind = 'barh'	kind = 'barh'
そこで、バイナリモードをする	mode = 'b'	'b' = 'b'
<A> としてグラフを保存する	plt . savefig ( <A> )	df . savefig ( <A> )
<A> の列 <B> の未記入の値を <B> 列の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
データフレーム <B> の <C> 表属性を中央値でビン分割して、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , 2 )	<A> = pd . qcut ( <B> [ <C> ] , 2 )
データフレーム <A> のカラム <B> とカラム <C> を大から小へとソートを <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	plt . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
データフレーム <A> 内に存在する <B> を未記入の値に置換し、 <A> とする	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
データフレーム <B> 中の <C> を NaN に置換し、 NaN が存在する行をドロップを <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
<B> 列についてダミー変数を生成して、 <A> に代入する	<A> = pd . get_dummies ( <A> [ <B> ] )	= pd . get_dummies ( <A> [ <B> ] )
表 <A> 内のコラム <B> に重複はあるかどうかチェックを見る	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
<B> とデータフレーム <C> に対して、表属性 <D> を項目名としてデータを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
表 <B> を列 <C> の値を元にソートして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表データ <A> の <B> コラムごとにコラム <C> の個数を算出する	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
<A> 全体を列 <B> を元に並び替え、置き換える	<A> = <A> . sort_values ( <B> )	plt . sort_values ( <A> , <B> , inplace = True )
同じグラフ内で <A> 表データの <B> カラムと <A> 表データのカラム <C> と表データ <A> の <D> カラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体を位置を元にソートし、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
一番左の列を位置に、ファイル <B> を表データに格納し、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
データフレーム <A> の <B> カラムを箱ひげ図に作図する	plt . boxplot ( <A> [ <B> ] )	fontsize = <A> . boxplot ( <B> ] )
縦軸に <A> 軸ラベルを付ける	plt . ylabel ( <A> )	X . ylabel ( <A> )
データフレーム <A> を <B> という名前にしてエクセル形式で書き出す	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
同じ軸のセットでデータフレーム <A> コラム <B> とデータフレーム <A> <C> コラムとデータフレーム <A> コラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ビン数を <D> として、 <B> データフレームのカラム <C> を要素数が等しくなるようにビン分割し、 <A> に代入する	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
表データ <A> 中の未入力の値の合計を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> カラム <B> と表 <A> <C> カラムと表 <A> カラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の行列を入れ替える	<A> . T	<A> . T
<A> の未入力の値をデータフレーム <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
データフレーム <A> の <B> カラムとカラム <C> に重複が存在するのかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
カンマ区切りでデータフレームを CSV ファイル <A> から読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
左側のデータのインデックスと右側のデータの <C> 表属性をキーとして、 <A> データフレームとデータフレーム <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表 <A> の <B> 列とデータフレーム <A> の <C> 列と <A> データフレームの列 <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> カラムに重複は存在するのか	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
表データ <A> 中の <B> 表属性に重複がある行を落とし、インプレースする	<A> . drop_duplicates ( subset = <B> , inplace = True )	<A> . drop_duplicates ( subset = <B> , inplace = True )
<A> ( データフレーム ) のコラム <B> とコラム <C> を降順にソートして、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
そこで、種類として面グラフを使用する	kind = 'area'	linestyle = 'area'
表 <A> 全体を <B> コラムの値を元にソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	for <A> . sort_values ( <B> , inplace = True )
表 <A> 内にある <B> を欠損値に置き換える	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
表 <A> から <B> ファイルという CSV ファイルを書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
表データ <A> 全体を <B> コラムの値に基づいてソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<B> から <C> の区間で <A> のヒストグラムを作画する	plt . hist ( <A> , range = ( <B> , <C> ) )	hist plt . hist ( <A> , range = ( <B> , <C> ) )
左側のデータのインデックスと右側のデータの <C> 表属性を項目名として、表 <A> と表 <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
同じグラフ内でデータフレーム <A> の <B> 表属性と <C> 表属性と <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> をコラム <B> の値を元にソートを <A> にする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
先頭の列をインデックスと設定して、ファイルパス <B> をデータフレームとして読み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
エクセルファイル <A> の <B> のシートから読み込む	pd . read_excel ( <A> , sheet_name = <B> )	<A> . read_excel ( <B> , sheet_name = None )
<B> を <C> を列名として表データに変換して、 <A> とする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	<A> = pd . pd . DataFrame ( <B> , columns = <C> )
データフレーム <A> の行ごとに重複があるかどうか検出する	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <A> の最後の 5 行	<A> . tail ( )	<A> . tail ( )
表 <A> 内で重複する行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> の <B> カラムに重複があるのか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表 <A> の列 <B> の NaN を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
表データ <A> の表属性 <B> を昇順にソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	start <A> = <A> . sort_values ( <B> )
表データ <B> の <C> を未記入の値に置換し、未記入の値がある行をドロップし、 <A> にする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
データフレーム <A> の欠損がある行を落として、置き換える	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
そこで、マーカーをひし形とする	marker = 'D'	marker = 'D'
表 <B> 中の未入力の値を <B> データフレームの平均値で補って、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
表データ <A> の <B> カラム中の前後の行の差分を算出する	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<A> の <B> コラムと <C> コラムを降順に並び替え、 <A> に代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <A> 内の欠損を <B> として、 <A> にする	<A> = <A> . fillna ( <B> )	X = <A> . fillna ( <B> )
表 <A> のコラム <B> に重複がある行をドロップを <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	'words' <A> = <A> . drop_duplicates ( subset = <B> )
表データ <A> 内の列 <B> に重複はあるのかどうか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> 内の未記入の値の数を求める	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> の <B> 列のユニークな要素数を確認する	<A> [ <B> ] . nunique ( )	<A> [ <B> ] . nunique ( )
<A> コラム <B> とデータフレーム <A> <C> コラムと <A> データフレーム <D> コラムの箱髭図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を <B> コラムの値を元にソートして、置き換える	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
エクセルファイル <B> のシート名 <C> を表に格納して、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
そこで、マーカーの種類のエッジ色は黄色を用いる	markeredgecolor = 'yellow'	markeredgecolor = 'yellow'
表 <B> と <C> 表データに対して、 <D> 列をキーとしてデータを内部結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
表 <A> の <B> コラムとコラム <C> と <D> コラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
グラフの y 軸に <A> というラベルを付ける	plt . ylabel ( <A> )	labels plt . ylabel ( <A> )
<A> 内の <B> コラムに重複があるかチェックする	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表として <B> ファイルをカンマ区切りで読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表 <A> のカラム <B> をグループ化して、値ごとのデータ数を算出する	<A> . groupby ( <B> ) . size ( )	df . groupby ( <A> , <B> ) . size ( )
同じグラフ内で表 <A> のコラム <B> と <A> 表の <C> コラムと表 <A> の <D> コラムを箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> カラムの名前を <C> に、カラム <D> の名前を <E> にリネームし、再代入する	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	= <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<B> にある <C> を未入力の値とし、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	= <B> . replace ( <C> , np . nan )
同じ x 軸と y 軸で <A> 表データの <B> コラムと <A> 表データの <C> コラムと表データ <A> のコラム <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の重複する行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
表 <A> の <B> 列と列 <C> を削除を <A> とする	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	range = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> の <B> 表属性をソートを <A> にする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
表データ <A> のデータの詳細を調べる	<A> . info ( )	pd . info ( <A> )
リスト <B> を <C> を表属性名として表データにして、 <A> とする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	X = pd . pd . DataFrame ( <B> , columns = <C> )
そこで、マーカーをダイヤモンドとする	marker = 'D'	marker = 'D'
<A> の列 <B> の値を軸に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> の表属性 <B> ごとに表属性 <C> の数	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
表 <A> の行の名前を <B> から <C> にリネームして、再代入する	<A> = <A> . rename ( index = { <B> : <C> } )	index = <A> . rename ( index = { <B> : <C> } )
表データ <A> の <B> コラムを箱ひげ図に描写する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
左側のデータの位置と右側のデータの <C> 表属性を項目名として、データフレーム <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <A> 中に存在する <B> を欠損とし、再代入する	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
<B> ファイルとしてデータフレーム <A> を CSV に保存する	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表 <A> の中のカラム <B> に重複はあるのかどうか見る	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
カラム <A> とカラム <B> を逆順にする	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
表データ <A> の <B> カラムと <A> データフレームのカラム <C> と <A> データフレームのカラム <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
左側のデータの位置と右側のデータの <D> 表属性を項目名として、表データ <B> と <C> 表データを結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
表 <A> 全体をコラム <B> の値を軸にソートし、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
<A> ( データフレーム ) の <B> 表属性を順番になるように並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
データフレーム <A> 中の未入力の値を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
<A> の位置を軸に昇順で並び替え、インプレースする	<A> . sort_index ( inplace = True )	np <A> . sort_index ( inplace = True )
表データ <A> の列 <B> を確認する	<A> [ <B> ]	'words' <A> [ <B> ]
グラフの x 軸を <A> とした <B> の縦向き棒グラフをプロットする	plt . bar ( <A> , <B> )	plt . barh ( <A> , <B> )
<A> をコラム <B> に基づいてソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> コラムを順番になるようにソートする	df . sort_values ( <A> )	df . sort_values ( <A> )
表データ <A> をインデックスで並び替える	<A> . sort_index ( )	X . sort_index ( )
<A> の中のそれぞれの列に存在する <B> の個数を見る	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
重複する最後の行を残して <B> ( データフレーム ) の重複する行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( keep = False )	False = <B> . drop_duplicates ( keep = False )
表データ <A> 内に存在する <B> を NaN として、再代入する	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
表 <A> の <B> 列の名前を <C> に、列 <D> の名前を <E> に変更する	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<B> 次元に圧縮する PCA モデルを新たに使えるようにし、 <A> とする	<A> = sklearn . decomposition . PCA ( ( n_components = <B> )	X = sklearn . decomposition . PCA ( n_components = <B> )
表属性 <A> と表属性 <B> を逆順に並び替えて、インプレースする	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
<A> の <B> 表属性と <C> 表属性ごとに <D> 表属性の値の和	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
そこで、インデックスは出力しない	index = False	sort_index = False
一番左の列を位置と設定して、ファイル名 <B> をデータフレームとして読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表 <B> と <C> 表に対して、表属性 <D> を項目名としてデータを内部結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
<A> の列 <B> の値をソートし、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <A> の <B> 列をインデックスとし、再代入する	<A> = <A> . set_index ( <B> )	= <A> . set_index ( <B> )
そこで、エンコーディングは、 <A> を使う	encoding = <A>	encoding = <A>
表データ <A> のコラム <B> を度数分布図で作図する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表属性 <A> と表属性 <B> を逆順に並び替える	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
表 <A> の <B> 列と <C> 列を削除を <A> に代入する	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> の <B> カラムの値を軸に昇順で並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	start = <A> . sort_values ( <B> )
列番号 <C> を位置にして、ファイル <B> をデータフレームとして読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> 内の <B> カラムと <C> カラムに重複が存在するのか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
グラフに格子を描く	plt . grid ( True )	grid . True ( True )
表データ <A> 内の NaN を表データ <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
<A> 表属性 <B> と <A> 表データ表属性 <C> と <A> 表データ <D> 表属性のボックスチャートを一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> を列 <C> の値を元に昇順でソートして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
表データ <A> 列 <B> と <A> 表データ <C> 列と表データ <A> 列 <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
先頭の列をインデックスとして、 <A> ファイル名からデータフレームとを読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
表データ <A> 内の <B> 表属性に重複がある行を落として、置き換える	<A> = <A> . drop_duplicates ( subset = <B> )	df . drop_duplicates ( subset = <B> , inplace = True )
列 <A> と <B> 列に重複はあるのか確認を見る	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 中に存在する <B> を NaN とし、再代入する	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
そこで、線は破線と点線を用いる	linestyle = 'dashbot'	activation = 'dashbot'
<B> の <C> 表属性を軸に昇順でソートを <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<B> と <C> を横方向に連結して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] , axis = 1 )	df = pd . concat ( [ <A> , <B> , <C> ] , axis = 1 )
ファイルパス <A> からカンマ区切りで表を読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
同じ軸で表データ <A> のカラム <B> と <C> カラムと <D> カラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の中の <B> を欠損値に置換し、欠損値がある行を消して、 <A> に代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	y <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> の柱状グラフを <B> から <C> の範囲で作図する	plt . hist ( <A> , range = ( <B> , <C> ) )	hist plt . hist ( <A> , range = ( <B> , <C> ) )
表 <A> 全体を <B> コラムを元に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> 全体をインデックスに沿ってソートする	<A> . sort_index ( )	X . sort_index ( )
<A> の中の重複した行を削除する	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
表データ <A> の <B> 行目のカラム <C> を抽出する	<A> . iloc [ <B> ] [ <C> ]	<A> . iloc [ <B> ] [ <C> ]
そこで、グラフカラーをグレーとする	color = 'gray'	linestyle = 'gray'
表として <B> 区切りでファイルパス <A> を読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<A> をカラム <B> を元に昇順で並び替え、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表データ <A> 内に重複があるのか確認する	<A> . duplicated ( )	<A> . duplicated ( )
表データ <B> と <C> 表データに対して、コラム <D> を項目名としてデータを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	alpha = pd . merge ( <B> , <C> , on = <D> )
先頭の列をインデックスとして、 <A> ファイル名を表に格納する	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<B> をカラム <A> 、リスト <D> を <C> カラムとして、新しい表データを作る	pd . DataFrame ( { <A> : <B> , <C> : <D> } )	pd . DataFrame ( { <A> : <B> , <C> : <D> } )
そこで、マーカーの形状のエッジ色は水色をする	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
データフレーム <A> の欠損値を <A> 表の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) )
CSV ファイル <B> をカンマ区切りで読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
箱ひげ図で	plt . boxplot ( df [ 'A' ] )	plt . boxplot ( [ X , Y ] )
<A> のカラム <B> 中の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<B> というエクセルファイルの <C> シート名からデータフレームを読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
<A> の <B> コラムを並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
そこで、グラフの種類は度数分布図を用いる	kind = 'hist'	kind = 'hist'
<A> というエクセルをデータフレームとして読み込む	pd . read_excel ( <A> )	pd . read_excel ( <A> )
そこで、マーカーの輪郭色は水色を用いる	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
表 <A> を <B> コラムの値に基づいてソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> 内の未記入の値を直前の行の値で補って、インプレースする	<A> . fillna ( method = 'ffill' , inplace = True )	<A> . fillna ( method = 'ffill' , inplace = True )
表をファイル名 <A> から読み込む	pd . read_csv ( <A> )	pd . read_csv ( <A> )
表データ <A> の <C> カラム中の前後の行の差分を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )
データフレーム <A> の中の NaN がある行を削除し、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
インデックスと <D> 表属性をキーとして <B> 表と表 <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	X = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
分割数を <D> 、ビンのラベルをリスト <E> として、 <B> 表データの列 <C> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	= pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表 <A> のカラム <B> と <C>	<A> [ [ <B> , <C> ] ]	'words' [ <A> , <B> , <C> ] ]
表データ <A> と <B> 表データをマージする	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
表データ <A> を表属性 <B> を元に昇順でソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> で重複している行数の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
そこで、マーカーの色は紫とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
<B> というエクセルファイルの全てのシートから読み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> 中のカラムに存在する <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> の <B> 表属性と表データ <A> の表属性 <C> と表データ <A> の表属性 <D> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> カラムの未入力の値を <B> カラムの中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
<A> 内の重複をチェックする	<A> . duplicated ( )	X . duplicated ( )
表 <A> の中の重複している行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	drop_duplicates = <A> . drop_duplicates ( )
<A> のコラム <B> を度数分布図で描写する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
分割数を <D> 、ビンの名前を 0 始まりの連番として、表データ <B> の <C> コラムを分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	False = pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> 中の重複している行を落として、インプレースする	<A> . drop_duplicates ( inplace = True )	'words' <A> . drop_duplicates ( inplace = True )
ファイル名 <B> からデータフレームを <C> 区切りで読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> の <B> 表属性と表属性 <C> ごとに <D> 表属性の値の合計値	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
同じグラフ内で表 <A> <B> カラムと <A> 表カラム <C> と表 <A> <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
重複する最後の行を残して <A> ( データフレーム ) 中の重複する行を落とし、置き換える	<A> = <A> . drop_duplicates ( keep = False )	<A> . drop_duplicates ( keep = False , inplace = True )
<A> 内の重複している行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	start = <A> . drop_duplicates ( )
<B> の表属性 <E> について、表属性 <C> を位置、 <D> 表属性を表属性としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	= <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )
<B> の列 <C> の名前を <D> に、 <E> 列の名前を <F> にリネームして、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	markeredgecolor = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
グラフの x 軸を <A> として、 <B> の縦棒グラフを描く	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
表データ <A> の <B> 表属性の曜日	<A> [ <B> ] . dt . weekday_name	<A> [ <B> ] . dt . weekday_name
<A> を <B> というエクセルファイルにして保存する	<A> . to_excel ( <B> )	X <A> . to_excel ( <B> )
表データ <A> 中の <B> 表属性に重複がある行を落とし、再代入する	<A> = <A> . drop_duplicates ( subset = <B> )	drop_duplicates = <A> . drop_duplicates ( subset = <B> )
データフレーム <A> の <B> 列の名前を <C> に、列 <D> の名前を <E> に変更する	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
そこで、 <A> , <B> 層を隠れ層とする	hidden_layer_sizes = ( <A> , <B> )	markeredgecolor = <A> , <B> )
データフレーム <A> の列 <B> をダミー変数化する	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
両方の列を使って <B> ( データフレーム ) と <C> 表データを一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	= pd . merge ( <A> , <B> , <C> , how = 'outer' )
表データ <A> 中の重複をチェック	<A> . duplicated ( )	df . duplicated ( )
<B> という名前のエクセルファイルの <C> 番目のシートを表に格納して、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
ビン数を <C> として、 <A> 表の <B> カラムをビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . qcut ( <A> [ <B> ] , <C> )
エクセルファイル <B> の <C> 番目のシートを読み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	<A> = pd . read_excel ( <B> , sheet_name = <C> )
文字コードが shift_jis のファイル <A> を読む	pd . read_csv ( <A> , encoding = 'shift_jis' )	pd . read_csv ( <A> , encoding = 'shift_jis' )
表 <A> 全体をカラム <B> の値に沿ってソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
データフレーム <A> の中の <B> を欠損値に置換し、欠損値が存在する行をドロップして、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
列番号 <B> をインデックスとして、 <A> パスを読み込む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> の列にある <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> の <B> 列を位置とする	<A> . set_index ( <B> )	<A> . set_index ( <B> )
一番左の列を位置に指定して、 <B> パスを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
データフレーム <A> 内の欠損値の数を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> をコラム <B> の値を元に昇順で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> 列と <B> 列に重複はあるかどうかチェックを調べる	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
表 <A> の <B> 列と列 <C> と <D> 列について関係性を一度に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
同じ x 軸と y 軸で <A> 表のカラム <B> と <A> 表のカラム <C> と表 <A> のカラム <D> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> 行目の <C> コラム	<A> . iloc [ <B> ] [ <C> ]	<A> . iloc [ <B> ] [ <C> ]
<A> という名前のエクセルデータからデータフレームを読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> )
データフレーム <A> 内のカテゴリ変数をダミー変数化する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表 <A> のコラム <B> が <C> のデータ	<A> [ <A> [ <B> ] == <C> ]	<A> [ <A> [ <B> ] == <C> ]
データフレーム <A> の <B> コラムとコラム <C> と <D> コラムについて関係性を一気にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> 中の重複を確認を調べる	<A> . duplicated ( )	'words' <A> . duplicated ( )
データフレーム <A> のカラム <B> の未入力の値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
データフレーム <A> の欠損をデータフレーム <A> の平均値で埋め、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	fillna <A> . mean ( ) , inplace = True )
表属性 <A> と <B> 表属性を逆順に並び替えて、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
表 <A> 内の列 <B> に重複はあるか表示してみる	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
データフレーム <A> の表属性 <B> と <C> 表属性の相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
表データ <A> のカラム <B> の日にちを表示する	<A> [ <B> ] . dt . day	for <A> [ <B> ] . dt . day
そこで、プロット目印の透過度を <A> とセットする	alpha = <A>	markeredgewidth = <A>
そこで、グラフ種類は、垂直棒グラフを用いる	kind = 'bar'	kind = 'bar'
<B> 中の <C> を NaN に置換し、 NaN が存在する行を落として、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
データフレーム <A> から重複している値がある行を取り除く	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
エクセルファイル <B> をデータフレームとして読んで、 <A> に代入する	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
データフレーム <A> の中の <B> コラムに重複がある行を落として、 <A> にする	<A> = <A> . drop_duplicates ( subset = <B> )	X = <A> . drop_duplicates ( subset = <B> )
列番号 <C> をインデックスに指定して、ファイル名 <B> から読み込み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と <B> 表をマージする	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
表 <A> と表 <B> を縦に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> のカラム <B> の曜日の数値型を表示する	<A> [ <B> ] . dt . dayofweek	<A> [ <B> ] . dt . dayofweek
表データ <B> のカラム <C> を位置、 <D> カラムをカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> )	x = <B> . pivot_table ( index = <C> , columns = <D> )
分割数を <C> 、ビンのラベルを整数値として、表 <A> の <B> コラムをビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> をコラム <B> で並べ直す	<A> . sort_values ( by = <B> )	df . sort_values ( by = <B> )
<A> の <B> 列の未入力の値を列 <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
<A> の末尾 5 行	<A> . tail ( )	X <A> . tail ( )
エクセルデータ <A> のシート全部を表に格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
データフレーム <B> をインデックスに沿ってソートし、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> の <B> を欠損に置換し、欠損が存在する行を削除して、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> というエクセルの <B> のシートからデータフレームを読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
表としてファイル名 <B> を <C> 区切りで読んで、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表 <B> のカラム <C> とカラム <D> を降順にソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表 <A> の <B> を欠損値に置換し、欠損値が存在する行をドロップを <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> 内に重複が存在するのか確認する	<A> . duplicated ( )	<A> . duplicated ( )
x 軸を <A> として、 <B> の縦棒グラフを表示する	plt . barh ( <A> , <B> )	. barh ( <A> , <B> )
<A> の標準偏差を得る	<A> . std ( )	X . std ( )
表データ <A> において、コラム <B> と <C> と <D> の関係性を一度にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> 中の未入力の値を <A> データフレームの平均値で埋め、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	df = <A> . fillna ( <A> . mean ( ) )
<A> のインデックス名を <B> から <C> にリネームして、インプレースする	<A> . rename ( index = { <B> : <C> } , inplace = True )	<A> . rename ( index = { <B> : <C> } , inplace = True )
表データ <A> のコラム <B> を昇順にソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
データフレーム <A> を <B> でグループ化し、 <C> コラムと <D> カラム 'で集約し、コラム' 出現数'で並べ直す	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , <D> : sum } ) . sort_values ( by = <D> )	for i , <A> . groupby ( <B> ) . agg ( { <C> : np . mean , <D> : sum } ) . sort_values ( by = <D> )
<A> のそれぞれの行に対して重複があるかどうかを確認する	<A> . duplicated ( )	<A> . duplicated ( )
エクセルの <A> を読み込んでデータフレームにする	pd . read_excel ( <A> )	pd . read_excel ( <A> )
表 <A> の <B> 表属性の NaN を表属性 <B> の最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
<A> の <B> 表属性を軸に昇順でソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
データフレーム <A> の <B> コラムと <C> コラムを大きい順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<A> の位置 <B> の名前を <C> にリネームし、 <A> にする	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
そこで、目印は星をする	marker = '*'	marker = '*'
<B> という名前のエクセルファイルの <C> 番目のシートを表データに格納し、 <A> に代入する	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表データ <A> の <B> 列の名前を <C> に、列 <D> の名前を <E> に変更し、置き換える	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
分割数を <D> として、 <B> データフレームの表属性 <C> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
データフレーム <A> 内の未入力の値を <A> データフレームの平均値で補って、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
<A> という名前のエクセルファイルのシート名 <B> からデータフレームを読む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
そこで、菱形のマーカーを使用する	marker = 'D'	marker = 'D'
同じ軸のセットでデータフレーム <A> の <B> カラムと <C> カラムとカラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列 <B> という列を落として、 <A> とする	<A> = df . drop ( <B> , axis = 1 )	df = df . drop ( <B> , axis = 1 )
表 <A> のカラム <B> の秒	<A> [ <B> ] . dt . second	df [ <A> [ <B> ] . dt . second
データフレーム <A> の <B> 列が <C> 以上のデータ	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
表データ <A> を表属性 <B> を元に昇順でソートを <A> にする	<A> = <A> . sort_values ( <B> )	for <A> = <A> . sort_values ( <B> )
<A> の <B> カラムと <C> カラムと <D> カラムについての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じグラフ内で <A> データフレームのカラム <B> と <C> カラムとカラム <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の列 <B> を箱ひげ図に作画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
表 <A> 内の欠損を <A> 表の平均値で補って、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> を one - hot 表現にする	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
列 <B> という列をドロップして、 <A> とする	<A> = df . drop ( <B> , axis = 1 )	X = <A> . drop ( <B> , axis = 1 )
左側のデータのインデックスと右側のデータの <C> カラムを項目名として、 <A> 表データと表データ <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
そこで、グラフの種類はカーネル密度推定図をする	kind = 'kde'	kind = 'kde'
データフレーム <B> 中の未記入の値がある行をドロップして、 <A> とする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
左側のデータの位置と右側のデータの表属性 <D> をキーとして、 <B> 表と <C> 表を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> 内の重複している行をドロップし、インプレースする	<A> . drop_duplicates ( inplace = True )	'words' <A> . drop_duplicates ( inplace = True )
表データ <A> のコラム <B> と <C> コラムを逆順に並び替え、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <A> 内の重複した行を落とす	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
<A> の <B> 列と <C> 列を逆順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<B> 区切りでデータフレームとして <A> ファイル名を読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
表データ <A> 内の <B> を NaN に置換し、 NaN がある行をドロップして、 <A> にする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> 中の <B> を未記入の値に置換し、未記入の値が存在する行を削除し、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
カラム <A> とカラム <B> に重複があるのかどうか	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> において、 <B> 列の箱ひげ図を描画する	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
そこで、バイトオーダーはリトルエンディアンとする	byteorder = 'little'	marker = 'o'
インデックスなしでファイル名 <B> にデータフレーム <A> を書き出す	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
データフレーム <A> 内の未記入の値を <A> データフレームの平均値で補い、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
<B> のインデックスをリセットし、 <A> とする	<A> = <B> . reset_index ( )	plt . reset_index ( <A> , inplace = True )
<B> ( データフレーム ) のコラム <C> とコラム <D> を降順にソートし、 <A> に代入する	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
y 座標の軸ラベルを <A> と指定する	plt . ylabel ( <A> )	plt . ylabel ( <A> )
ファイル <B> からカンマ区切りで表を読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
データフレーム <A> を位置で並び替え、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<A> の <B> 列を昇順にソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> をエクセルファイル <B> という名前で書き出す	<A> . to_excel ( <B> )	X <A> . to_excel ( <B> )
分割数を <C> として、 <A> データフレームのコラム <B> を要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	for pd . qcut ( <A> [ <B> ] , <C> )
データフレーム <B> 内の未入力の値を含む行をドロップを <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表データ <A> において、列 <B> の箱ひげ図を描く	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
そこで、マーカーの色として赤を使用する	markerfacecolor = 'red'	markerfacecolor = 'red'
表データ <A> の行の名前を確認する	<A> . index	'words' <A> . index
表データ <A> の <B> カラムを日付型に変換する	pd . to_datetime ( <A> [ <B> ] )	to_datetime pd . to_datetime ( <A> [ <B> ] )
<D> 表属性をキーとして、表 <B> と <C> 表を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
左側のデータの位置と右側のデータの <C> 列をキーとして、表データ <A> と表データ <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <B> と表データ <C> を横にマージして、 <A> とする	<A> = pd . merge ( <B> , <C> )	alpha = pd . merge ( <B> , <C> )
表 <B> と表データ <C> に対して、表属性 <D> をキーとしてデータを内部結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
データフレーム <A> の <B> 表属性と表 <A> の表属性 <C> と <A> 表の表属性 <D> の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内に重複があるのかどうか確認する	<A> . duplicated ( )	<A> . duplicated ( )
そこで、マーカーの種類の色は黄緑	markerfacecolor = 'greenyellow'	0 markerfacecolor = 'greenyellow'
<B> の <E> 列について、列 <C> をインデックス、列 <D> を列としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	index = <B> , columns = <C> , values = <D> , values = <E> )
表データ <A> のそれぞれの行に対して重複があるかどうかを判定する	<A> . duplicated ( )	<A> . duplicated ( )
<A> ( データフレーム ) の <B> 列を小から大へとソート	<A> . sort_values ( <B> )	df . sort_values ( [ <A> , <B> ] , ascending = False )
そこで、グラフ線のスタイルを点線とする	linestyle = 'dotted'	kind = 'dotted'
表 <A> の中の欠損値がある行を落とし、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
<A> の行ごとに重複があるかどうかを確認する	<A> . duplicated ( )	<A> . duplicated ( )
表データ <A> <B> コラムと <A> データフレーム <C> コラムとデータフレーム <A> <D> コラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
エクセルファイル <B> の全てのシートをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
そこで、赤をマーカーの輪郭色にする	markeredgecolor = 'red'	markeredgecolor = 'red'
表データ <A> を <B> コラムの値を元に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
同じ軸で表データ <A> の <B> 列と表データ <A> の列 <C> と <A> 表データの列 <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> を表属性 <C> に基づいてソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<B> コラムを小から大へとし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <B> 内の <C> を欠損に置換し、欠損がある行を削除し、 <A> にする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
データフレーム <A> カラム <B> と表データ <A> カラム <C> と <A> 表データ <D> カラムの箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
左側のデータの位置と右側のデータの表属性 <B> を項目名として 2 つのデータをマージして、 <A> にする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
表 <A> 内の <B> カラムと <C> カラムに重複はあるのか表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> と <B> の折れ線グラフを cRGB でプロットする	plt . plot ( <A> , <B> , color = c )	plt . plot ( <A> , <B> , color = c )
データフレーム <A> の <B> 列と列 <C> ごとに列 <D> の値の和を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表データ <A> のコラム <B> と <C> コラムとコラム <D> についての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> 列と列 <C> を削除して、置き換える	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
そこで、グラフは黄緑色で表示する	color = 'greenyellow'	kind = 'greenyellow'
表データ <A> のカラム <B> の未記入の値を <C> で穴埋めする	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
データフレーム <A> の <B> カラムと <C> カラムごとにカラム <D> の値の合計値を求める	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<B> の列 <C> と列 <D> をドロップして、 <A> とする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	x = <B> . drop ( [ <C> , <D> ] , axis = 1 )
カラム <A> とカラム <B> を大きい順にし、再代入する	df = df . sort_values ( [ <A> , <B> ] , ascending = False )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
<A> を <B> を表属性名として表に変換する	pd . pd . DataFrame ( <A> , columns = <B> )	<A> . pd . DataFrame ( <B> , columns = <C> )
<B> とデータフレーム <C> のどちらにも存在するデータでマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	df = pd . merge ( <A> , <B> , <C> , how = 'outer' )
ファイル <A> をカンマ区切りでデータフレームとして読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
左側のデータのインデックスと右側のデータの列 <C> を項目名として、 <A> 表データと <B> 表データを一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> を表属性 <B> に沿ってソートして、再代入する	<A> = <A> . sort_values ( <B> )	for <A> = <A> . sort_values ( <B> )
<B> ( データフレーム ) の <C> コラムと <D> コラムを値が大きい順に並び替え、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<B> の中の欠損値を <C> に置換して、 <A> にする	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
一番左の列をインデックスに、ファイル <A> をデータフレームとして読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
データフレーム <A> の <B> カラムを削除する	<A> . drop ( <B> , axis = 1 )	dropna <A> . drop ( <B> , axis = 1 )
表データ <B> の中の <C> を欠損に置換し、欠損がある行を削除を <A> に代入する	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
CSV ファイル <B> を表としてカンマ区切りで読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
そこで、赤紫色を色とする	color = 'magenta'	markerfacecolor = 'magenta'
そこで、グラフ種類は積み上げを使う	stacked = True	stacked = True
先頭の列をインデックスとして、ファイル名 <A> を読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> 中の <B> 列に重複があるか確認する	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
<A> 表属性と <B> 表属性に重複があるのか見る	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> と <B> 表に対して、 <C> 列を項目名としてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
そこで、マーカーの色はネイビー	markerfacecolor = 'navy'	markerfacecolor = 'navy'
x 座標に <A> というラベルをつける	plt . xlabel ( <A> )	df . xlabel ( <A> )
<A> を <B> ファイルパスにインデックスなしで書き出す	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
表データ <A> 内の表属性 <B> と表属性 <C> に重複はあるのかどうかを確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> 中の欠損値を直前の行の値で補って、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	df . fillna ( method = 'ffill' , inplace = True )
<A> カラムを並び替え、再代入する	df = df . sort_values ( <A> )	= df . sort_values ( <A> )
データフレーム <A> の <B> カラムの秒を見る	<A> [ <B> ] . dt . second	X <A> [ <B> ] . dt . second
<B> 次元に圧縮する PCA モデルを初期化し、 <A> とする	<A> = sklearn . decomposition . PCA ( ( n_components = <B> )	df = sklearn . decomposition . PCA ( n_components = <B> )
表 <A> を <B> ファイルとして CSV に書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<B> 番目の列を位置に、 <A> ファイルを表に格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表 <A> の中の <B> を NaN に置換し、 NaN が存在する行を消して、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> の <B> 表属性と <C> 表属性と表属性 <D> について関係性を一度に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> と表 <B> をマージする	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
<B> という名前のエクセルデータをデータフレームとして読み、 <A> とする	<A> = pd . read_excel ( <B> )	X = pd . read_excel ( <B> )
ファイルパス <B> を表としてカンマ区切りで読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
表 <A> を列 <B> で並べ直す	<A> . sort_values ( by = <B> )	'words' . sort_values ( by = <B> )
<A> のインデックスを振り直して、 <A> とする	<A> = <A> . reset_index ( )	X = <A> . reset_index ( )
そこで、バッファリングしない	buffering = -1	encoding = 'shift_jis'
表データ <A> 中の未記入の値を直前の行の値で補って、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	markerfacecolor = <A> . fillna ( method = 'ffill' )
<B> 内の重複している行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表データ <B> 全体を表属性 <C> の値を軸にソートを <A> にする	<A> = <B> . sort_values ( <C> )	x <A> = <B> . sort_values ( <C> )
表データ <A> の <B> 表属性の名前を <C> にリネームし、再代入する	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
同じ軸のセットで <A> 表の表属性 <B> と <A> 表の表属性 <C> と <A> 表の表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> のコラム <C> の名前を <D> に、 <E> コラムの名前を <F> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
表データ <A> の <B> 表属性の要素	<A> [ <B> ] . values	range = ( <A> [ <B> ] )
データフレーム <A> 中のカラムそれぞれに存在する <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
<A> 中の欠損値を含む行をドロップし、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> の全ての列の重複する値がある行を取り除き、 <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表 <A> の行数や列数を調べる	<A> . shape	<A> . shape
ビン数を <D> として、表 <B> の列 <C> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> )	<C> <A> = pd . cut ( <B> [ <C> ] , <D> )
データフレーム <A> のカラム <B> の日にち	<A> [ <B> ] . dt . day	for <A> [ <B> ] . dt . day
データフレーム <A> から重複する値がある行をドロップして、 <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
データフレーム ( <A> ) のカラム <C> を <B> 軸、カラム <E> を <D> 座標として、散布図をプロットする	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )
表データ <A> の <B> 表属性についての柱状グラフを描画する	plt . hist ( <A> [ <B> ] )	hist plt . hist ( <A> [ <B> ] )
列 <B> を昇順にソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = df . sort_values ( <B> )
データフレーム <B> 内の <C> を未記入の値に置換し、未記入の値が存在する行を消し、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
表データ <A> 内のコラム <B> に重複がある行をドロップ	<A> . drop_duplicates ( subset = <B> )	'words' <A> . drop_duplicates ( subset = <B> )
表データ <A> の <B> 列を位置として設定する	<A> . set_index ( <B> )	<A> . set_index ( <B> )
表データ <A> のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表データ <A> の表属性 <B> と <C> 表属性と <D> 表属性の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 全体をカラム <B> の値を元に昇順でソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表データ <A> のコラム <B> と表データ <A> のコラム <C> と <A> 表データのコラム <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <C> コラムに <D> 関数を適用して、 <B> コラムにする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 全体をコラム <B> を元にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> をファイルパス <B> という名前にして保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<B> という名前のエクセルファイルのシート名 <C> からデータフレームを読み、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表 <A> をカラム <B> を元にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	sort_index = <A> . sort_values ( <B> )
表 <A> の <B> カラムの名前を <C> にリネームし、置き換える	<A> . rename ( columns = { <B> : <C> } , inplace = True )	<A> . rename ( columns = { <B> : <C> } , inplace = True )
そこで、マーカーの種類のエッジ色は赤色	markeredgecolor = 'red'	markerfacecolor = 'red'
<A> の表属性 <B> の値を昇順でソートを <A> にする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<A> の <B> 表属性のユニークな要素の個数を見る	<A> [ <B> ] . nunique ( )	plt . nunique ( <A> [ <B> ] )
<A> のカラム <B> と <C> カラムに重複は存在するのかチェックを確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> 全体をインデックスを元にソートを <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
同じ x 軸と y 軸で表データ <A> のコラム <B> と <A> 表データのコラム <C> と <A> 表データのコラム <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 中のコラム <B> に重複があるのか確認を確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
そこで、マーカーの色をシアンとする	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
そこで、マーカーの色は青色をする	markerfacecolor = 'blue'	markerfacecolor = 'blue'
カラム <C> をキーとして、 <A> 表と <B> 表を結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表データ <A> のカラムにある <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
<A> 中の重複している行を落とす	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
表データ <A> のコラム <B> が <C> 以上のデータ	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
データフレーム <B> の表属性 <C> を中央値で分割し、 <A> にする	<A> = pd . qcut ( <B> [ <C> ] , 2 )	<A> = pd . qcut ( <B> [ <C> ] , 2 )
表 <A> と <B> 表データを縦にマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
列 <A> をキーとしてデータを結合する	pd . merge ( df1 , df2 , on = <A> )	pd . merge ( df1 , df2 , on = <A> )
表 <A> 内の重複している値がある行をドロップし、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<B> というエクセルファイルのシート全部からデータフレームを読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
データフレーム <A> の表属性 <B> の NaN を表属性 <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
表 <B> 中の NaN を <B> 表の平均値で埋め、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
そこで、ダイヤモンドのマーカーの形状を表示する	marker = 'D'	marker = 'D'
表データ <B> と表データ <C> を横方向に結合し、 <A> にする	<A> = pd . merge ( <B> , <C> )	alpha = pd . merge ( <B> , <C> )
データフレーム <A> の <B> 表属性を位置とし、 <A> に代入する	<A> = <A> . set_index ( <B> )	X = <A> . set_index ( <B> )
表 <A> の <B> カラムのデータを抽出する	<A> [ <B> ]	'words' <A> [ <B> ]
表 <A> の <B> コラムと <C> コラムと <D> コラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 全体をインデックスで並び替え、 <A> とする	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
そこで、活性化関数は双曲線正接関数にする	activation = 'tanh'	sort_index = 'tanh'
そこで、色は青である	color = 'blue'	markerfacecolor = 'blue'
そこで、目印の輪郭色は紫を用いる	markeredgecolor = 'purple'	markeredgewidth = 'purple'
そこで、マーカーのエッジ色として紺色を用いる	markeredgecolor = 'navy'	markeredgecolor = 'navy'
同じ軸で表 <A> 表属性 <B> と <A> 表表属性 <C> と表 <A> <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
横軸を <A> とした <B> の縦向き棒グラフをプロットする	plt . barh ( <A> , <B> )	. barh ( <A> , <B> )
ビン数を <C> として、表 <A> のコラム <B> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . qcut ( <A> [ <B> ] , <C> )
表データ <A> を表属性 <B> の値を元にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
カラム <A> に重複はあるのかどうか表示してみる	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
<B> 内の未記入の値を直前の行の値で埋め、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	= <B> . fillna ( method = 'ffill' )
表データ <A> のカラム名を <B> から <C> に、 <D> から <E> に変更して、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	start = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
同じ軸のセットでデータフレーム <A> 表属性 <B> とデータフレーム <A> <C> 表属性と <A> データフレーム <D> 表属性を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、マーカーは正方形を用いる	marker = 's'	marker = 's'
エクセルファイル <B> の <C> 番目のシートからデータフレームを読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
表を CSV ファイル <A> から読む	pd . read_csv ( <A> )	pd . read_csv ( <A> )
表 <B> のコラム <C> を四分位数ごとで分割して、 <A> に代入する	<A> = pd . qcut ( <B> [ <C> ] , 4 )	<A> = pd . qcut ( <B> [ <C> ] , 4 )
データフレーム <A> のコラム <B> の欠損値を <C> で穴埋めする	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
データフレーム <B> の <C> カラムの名前を <D> に、 <E> カラムの名前を <F> に変更して、 <A> にする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
<B> の欠損値を落とし、 <A> にする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
同じ x 軸と y 軸で <A> データフレームのカラム <B> と <C> カラムと <D> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を <B> 表属性を軸にソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<A> 表属性に重複はあるかどうかチェックする	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
データフレーム <A> の <B> カラムの名前を <C> に、 <D> カラムの名前を <E> に変更して、インプレースする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
表 <A> にある <B> を欠損値に置換して、置き換える	<A> . replace ( <B> , np . nan , inplace = True )	np . replace ( <A> , <B> , np . nan , inplace = True )
<B> パスに <A> 表をインデックスなしで書き出す	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
表データ <A> をファイルパス <B> に保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
表データ <A> 全体をインデックスで並び替える	<A> . sort_index ( )	X . sort_index ( )
CSV ファイル <B> を読み、 <A> とする	<A> = pd . read_csv ( <B> )	X = pd . read_csv ( <A> )
<A> の列 <B> の値を軸にソート	<A> . sort_values ( <B> )	df . sort_values ( <B> )
データフレーム <A> を <B> ファイルパスという名前で保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
データフレーム <A> の表属性 <B> と表属性 <C> に重複があるならば	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle = <A> . duplicated ( subset = [ <B> , <C> ] ) :
<A> 表属性と <B> 表属性に重複が存在するのか表示する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> の <B> 表属性をインデックスとし、再代入する	<A> = <A> . set_index ( <B> )	<A> = <A> . set_index ( <B> )
<A> を <B> から <C> 間のヒストグラムにする	plt . hist ( <A> , range = ( <B> , <C> ) )	hist plt . hist ( <A> , range = ( <B> , <C> ) )
一番左の列を位置に指定して、ファイル名 <A> を読む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
表データ <A> のコラム <B> 内の前後の行の差分を算出する	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
表データ <A> の未記入の値を <A> データフレームの平均値で補って、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	unique = <A> . fillna ( <A> . mean ( ) )
<B> に関数 <C> を適用して、 <A> コラムとする	df [ <A> ] = <B> . map ( <C> )	<A> [ <B> ] = df . map ( <C> )
<A> というエクセルのシート名 <B> を読む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<B> 内の欠損がある行をドロップを <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> 中の未入力の値を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<C> コラムを項目名として、表データ <A> と表データ <B> をマージする	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> を <B> ファイル名として CSV に保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
分割数を <C> として、データフレーム <A> の <B> 表属性を要素数が等しくなるように分割する	pd . qcut ( <A> [ <B> ] , <C> )	for pd . qcut ( <A> [ <B> ] , <C> )
表 <A> の重複した行をドロップ	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
そこで、十字のマーカーの種類を使用する	marker = 'x'	marker = 'x'
<A> の元のインデックスを振り直して、 <A> とする	<A> = <A> . reset_index ( drop = True )	alpha = <A> . reset_index ( drop = True )
表を <B> ファイルから <C> 区切りで読み込み、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> のコラム <B> の時間を確認する	<A> [ <B> ] . dt . hour	<A> [ <B> ] . dt . hour
列 <A> を数値データにする	pd . get_dummies ( df [ <A> ] )	pd . get_dummies ( df [ <A> ] )
表データ <A> をファイル名 <B> に文字化けしないように書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
<A> の未入力の値を表データ <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
表データ <A> の中の表属性 <B> に重複があるのの場合	if <A> . duplicated ( subset = <B> ) :	duplicated if <A> . duplicated ( subset = <B> ) :
<A> ( データフレーム ) の <B> 表属性と表属性 <C> を大から小へと並び替えて、インプレースする	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	for <A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )
表 <A> の <C> カラムの日にちを  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . day	<B> <A> [ <C> ] . dt . day
<B> を <C> カラムを元にソートを <A> にする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
ファイルパス <B> から <C> 区切りで表を読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表 <A> についてダミー変数を生成し、 <A> に代入する	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
<A> 中の未入力の値が存在する行を削除して、再代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
x 軸を <A> とした <B> の棒グラフをプロットする	plt . barh ( <A> , <B> )	. bar ( <A> , <B> )
データフレーム <A> の NaN を平均値で穴埋めする	<A> . fillna ( <A> . mean ( ) )	<A> . fillna ( <A> . mean ( ) )
<A> という名前のエクセルファイルの <B> のシートを表に格納する	pd . read_excel ( <A> , sheet_name = <B> )	<A> . read_excel ( <B> , sheet_name = None )
<A> 中の <B> を未入力の値に置換し、未入力の値が存在する行を消し、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> の表属性 <B> を柱状図で描画する	plt . hist ( <A> [ <B> ] )	fontsize . hist ( <A> [ <B> ] )
そこで、 <A> をマーカーの形の輪郭線とする	markeredgewidth = <A>	markeredgewidth = <A>
表データ <A> の最初の 5 行	<A> . head ( )	df . head ( <A> )
表 <A> の中の重複をを確認する	<A> . duplicated ( )	df . duplicated ( )
<A> のコラム <B> の値をソートして、置き換える	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
CSV ファイル <A> をカンマ区切りで表データとして読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
<B> のインデックス名を <C> から <D> に変更して、 <A> とする	<A> = <B> . rename ( index = { <C> : <D> } )	<A> = <B> . rename ( index = { <C> : <D> } )
列番号 <B> をインデックスとして、 <A> ファイル名から読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行を削除	<A> . drop_duplicates ( keep = False )	<A> . drop_duplicates ( keep = False )
<A> の位置をソート	<A> . sort_index ( )	sort_index . sort_index ( )
<A> を箱ひげ図に描く	plt . boxplot ( <A> )	plt . boxplot ( <A> )
分割数を <D> 、ビンの名前を 0 始まりの連番として、 <B> 表データの <C> コラムを分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	False = pd . cut ( <A> [ <B> ] , <C> , label = False )
エクセル <B> を読み、 <A> にする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
同じ x 軸と y 軸で表 <A> の <B> 列と列 <C> と列 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の列 <B> と列 <C> を降順に並び替えて、置き換える	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	plt . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
表 <A> 全体を <B> コラムを軸に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> 内の未記入の値を含む行を削除する	<A> . dropna ( )	<A> . dropna ( )
表 <A> のインデックス名	<A> . index	'words' <A> . index
表データ <A> の表属性 <B> が <C> 以下データを取得する	<A> [ <A> [ <B> ] <= <C> ]	if <A> [ <B> ] <= <C> ]
表 <B> 内の重複している行を消して、 <A> とする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
<A> 中の重複しているデータを取得する	<A> [ <A> . duplicated ( ) ]	<A> [ <A> . duplicated ( ) ]
そこで、円グラフ上に小数点以下 2 桁まで構成割合をパーセントを付けて表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
同じ軸のセットでデータフレーム <A> <B> 列とデータフレーム <A> 列 <C> とデータフレーム <A> 列 <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の内容を確認する	<A> . head ( )	df . head ( <A> )
<A> の <B> カラムについての標準偏差	<A> [ <B> ] . std ( )	'words' <A> [ <B> ] . std ( )
表データ <A> の NaN を <A> 表の平均値で埋めて、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
ビン数を <D> 、ビンのラベルをリスト <E> として、表データ <B> のコラム <C> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	df = pd . cut ( <A> [ <B> ] , <C> , label = <D> )
カンマ区切りで <B> ファイルを表として読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
<A> 表属性を順にソート	df . sort_values ( <A> )	df . sort_values ( <A> )
同じ x 軸と y 軸で <A> データフレームの <B> コラムとコラム <C> と <D> コラムを箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の中の列 <B> と <C> 列に重複はあるのかどうか調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
同じ軸で <A> 表 <B> 表属性と表 <A> <C> 表属性と表 <A> <D> 表属性を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	'box' . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の <B> 列を昇順でソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
<A> 内の NaN を表 <A> の平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表 <A> 中にある <B> を欠損値とし、置き換える	<A> . replace ( <B> , np . nan , inplace = True )	df . replace ( <A> , <B> , np . nan , inplace = True )
表 <A> の中の <B> を未記入の値に置換し、未記入の値が存在する行を落とし、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表 <A> のそれぞれのカラムに存在する <B> の個数の合計値を計算する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> の表属性 <B> が <C> より多いデータ	<A> [ <A> [ <B> ] >  <C> ]	<A> [ <A> [ <B> ] > <C> ]
<A> の列名を <B> から <C> にリネームする	<A> . rename ( columns = { <B> : <C> } )	'words' <A> . rename ( columns = { <B> : <C> } )
そこで、マーカーを五芒星とする	marker = '*'	marker = '*'
データフレーム <A> をカラム <B> の値に沿ってソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
表 <B> の重複する行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> ( データフレーム ) のカラム <B> を小から大へと並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	start <A> = <A> . sort_values ( <B> )
データフレーム <A> の <B> コラムと表 <A> の <C> コラムと表 <A> の <D> コラムの箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の列 <C> の曜日の数値型を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek	<A> [ <B> ] = <A> [ <C> ] . dt . dayofweek
データフレーム <A> のカラム <B> とカラム <C> ごとに <D> カラムの値の合計値を計算する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
左側のデータの位置と右側のデータのカラム <C> をキーとして、 <A> 表データと表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <B> 内のコラム <C> に重複がある行をドロップを <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
表データ <A> 中の <B> コラムに重複はあるのかを確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <B> と表 <C> を縦方向にくっつけ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表データ <A> をインデックスを元に並び替え、置き換える	<A> . sort_index ( inplace = True )	df . sort_index ( inplace = True )
表 <A> 中に存在する <B> を NaN に置き換えて、 <A> にする	<A> = <A> . replace ( <B> , np . nan )	X = <A> . replace ( <B> , np . nan )
<B> と表 <C> を横方向にマージして、 <A> とする	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
表データ <A> の <B> コラムごとに <C> コラムの数を計算する	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
そこで、ネイビーをマーカーのエッジ色にする	markeredgecolor = 'navy'	markeredgecolor = 'navy'
表 <A> のコラム <C> の年を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . year	<A> [ <B> ] = <A> [ <C> ] . dt . year
データフレーム <A> の <B> 列の名前を <C> に、列 <D> の名前を <E> に変更して、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	{ <A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
表データ <A> のコラム <B> を位置として設定して、 <A> とする	<A> = <A> . set_index ( <B> )	X = <A> . set_index ( <B> )
データフレーム <A> の表属性 <B> と <C> 表属性を降順に並び替え、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
表データ <A> をインデックスなしで <B> ファイル名に書き出す	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
<A> 内の欠損を落として、 <A> とする	<A> = <A> . dropna ( )	dropna <A> = <A> . dropna ( )
表データ <A> の NaN を <A> 表の平均値で埋めて、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	df . fillna ( <A> . mean ( ) , inplace = True )
同じ軸のセットで表 <A> の列 <B> と <A> 表の <C> 列と表 <A> の <D> 列をボックスチャートで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の表属性 <B> と <C> 表属性をドロップを <A> に代入する	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
重複する行を削除を <A> にする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<A> のカラム <B> の欠損をカラム <B> の平均値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
<A> 全体を <B> 表属性を元に昇順でソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> コラム <B> とデータフレーム <A> コラム <C> とデータフレーム <A> コラム <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
一番左の列を位置に、ファイルパス <A> からデータフレームとを読む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
<A> の中の欠損が存在する行を削除して、 <A> にする	<A> = <A> . dropna ( )	dropna <A> = <A> . dropna ( )
<A> の列 <B> の名前を <C> に、 <D> 列の名前を <E> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	plt . rename ( <A> , columns = { <B> : <C> , <D> : <E> } )
<A> 番まで列が表示できるように変更する	pd . set_option ( 'display.max_columns' , <A> )	pd . read_csv ( <A> , index_col = 0 )
表 <B> 内の <C> を未入力の値に置換し、未入力の値がある行を削除を <A> にする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
エクセルファイル <A> のシート全部から読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
左側のデータの位置と右側のデータの <D> 列をキーとして、データフレーム <B> と <C> データフレームをマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
フォントを日本語表示にセットする。	sns . set ( font = 'IPAexGothic' , style = 'white' )	'IPAexGothic' . set ( font = 'IPAexGothic' , style = 'white' )
表 <A> の <B> コラムと <C> コラムに重複はあるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 内のそれぞれの列にある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
エクセルファイル <A> のシート全てをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> の表属性 <B> の一意の値	<A> [ <B> ] . unique ( )	<A> [ <B> ] . unique ( )
表 <A> の <B> カラムについての標準偏差	<A> [ <B> ] . std ( )	'words' <A> [ <B> ] . std ( )
表データ <A> 中の表属性 <B> に重複がある行を落として、置き換える	<A> = <A> . drop_duplicates ( subset = <B> )	encoding = <A> . drop_duplicates ( subset = <B> )
データフレーム <A> を位置で並び替え、 <A> とする	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
表 <A> をファイル名 <B> に文字化けしないように書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
<A> の欠損値を <B> に置き換える	<A> . fillna ( <B> )	'words' <A> . fillna ( <B> )
<A> 内の未入力の値の数を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 内の欠損値が存在する行をドロップ	<A> . dropna ( )	<A> . dropna ( )
<A> を <B> コラムの値を元にソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> 中の NaN の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 中の <B> を欠損値に置換し、欠損値がある行を削除し、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
同じ軸で表 <A> <B> 列と表 <A> <C> 列と表 <A> <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、種類として垂直棒グラフを使う	kind = 'bar'	kind = 'bar'
<A> 内の重複した行を消して、 <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
グラフの大きさを縦 <B> 横 <A> にセットする	plt . figure ( figsize = ( <A> , <B> ) )	color = <A> . figure ( figsize = ( <B> ) )
表データ <B> をインデックスで並び替え、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表 <A> の <B> カラムの年	<A> [ <B> ] . dt . year	<A> [ <B> ] . dt . year
ファイルパス <B> にインデックスなしでデータフレーム <A> を保存する	<A> . to_csv ( <B> , index = False )	to_csv <A> . to_csv ( <B> , index = False )
データフレーム <B> の行名を <C> から <D> に変更し、 <A> にする	<A> = <B> . rename ( index = { <C> : <D> } )	= <B> . rename ( index = { <C> : <D> } )
データフレーム <A> 全体を <B> 列の値に基づいてソートし、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
一番左の列を位置に、ファイルパス <B> からデータフレームとを読んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
そこで、 <A> に小数点 2 位まで表示することを指定し、パーセントを指定する。	<A> = '%.2f%%'	<A> = '%.2f%%'
表 <A> の列 <B> と <C> 列と <D> 列の箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> と <B> を <C> とラベル付けされた線グラフで表示する	plt . plot ( <A> , <B> , label = <C> )	plt . plot ( <A> , <B> , label = <C> )
<A> 中の未入力の値を <B> とし、 <A> とする	<A> = <A> . fillna ( <B> )	X = <A> . fillna ( <B> )
同じグラフ内で <A> 表の <B> コラムと <C> コラムとコラム <D> を箱髭図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> ( データフレーム ) の <B> 表属性を値が小さい順に並び替えて、置き換える	<A> = <A> . sort_values ( <B> )	sort_index = <A> . sort_values ( <B> )
<A> というエクセルファイルの <B> のシートから読み込む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<B> の列 <C> と列 <D> を逆順にソートを <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データ列 <A> の NaN をその平均値で補完する	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
表データ <A> 内の <B> 表属性と表属性 <C> に重複を判定する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の <B> 表属性の NaN を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
そこで、マーカーの形のエッジ色はグレーとする	markeredgecolor = 'gray'	markeredgecolor = 'gray'
表データ <A> の未記入の値がある行を消し、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
そこで、マーカーの色として黄色を使用する	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
表データ <B> 内の未入力の値を <B> 表データの平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
表データ <A> 中のカラムそれぞれにある <B> の個数の合計を計算する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表 <A> の表属性 <B> の NaN を <B> 表属性の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
<A> をインデックスに基づいてソートし、再代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
データフレーム <A> 中の <B> を未入力の値に置換し、未入力の値がある行をドロップ	<A> . replace ( <B> , np . nan ) . dropna ( )	plt . replace ( <A> , <B> , np . nan ) . dropna ( )
<A> ( データフレーム ) の <B> コラムと <C> コラムを値が大きい順に並び替えて、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	range = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> 中の欠損を含む行を削除	<A> . dropna ( )	<A> . dropna ( )
<B> ファイル名に表データ <A> を保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<A> の <B> 表属性とデータフレーム <A> の表属性 <C> と <A> データフレームの <D> 表属性の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の <C> 行目をドロップを <A> とする	<A> = <B> . drop ( <C> )	<B> <A> = <C> . drop ( <C> )
<A> のカラム <B> の要素	<A> [ <B> ] . values	<A> [ <B> ] . values
全結合で <A> データフレームとデータフレーム <B> をマージする	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
列 <A> と <B> 列に重複はあるかどうかチェック	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> のカラム名を <B> から <C> に、 <D> から <E> に変更して、置き換える	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
コラム <D> をキーとして、表データ <B> と <C> 表データをマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
<A> のインデックス名を見る	<A> . index	<A> . sort_index ( )
そこで、マーカーの輪郭色として紫色を使用する	markeredgecolor = 'purple'	markeredgewidth = 'purple'
<B> ( データフレーム ) の <C> 表属性を小さい順にソートし、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
<A> の <B> 表属性の欠損を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
位置とカラム <C> をキーとして <A> 表データと <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <A> 内の重複をを表示する	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <A> の <B> 表属性を中央値でビン分割する	pd . qcut ( <A> [ <B> ] , 2 )	pd . qcut ( <A> [ <B> ] , 2 )
重複した最後の行を残して <A> ( データフレーム ) の重複している行を削除する	<A> . drop_duplicates ( keep = False )	df1 <A> . drop_duplicates ( keep = False )
<A> のコラム <B> を度数分布図にする	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
列番号 <C> をインデックスとして、 <B> パスを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <A> 中の未記入の値を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <B> の未記入の値を <B> データフレームの平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
データフレーム <A> 内の欠損値を含む行を削除し、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
そこで、目印のエッジ色として赤を使用する	markeredgecolor = 'red'	markeredgecolor = 'red'
表データ <B> の欠損を直前の行の値で埋め、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	<B> <A> = method = 'ffill' )
<A> の表属性 <B> が <C> もしくは <D> のデータ	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]	<A> [ <A> [ <B> ] . isin ( [ <C> , <D> ] ) ]
データフレーム <A> のコラム <B> が <C> より小さいデータを抽出する	<A> [ <A> [ <B> ] <  <C> ]	<A> [ <A> [ <B> ] < <C> ]
データフレーム <A> 中の未記入の値を含む行を削除し、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
同じグラフ内で <A> 表の <B> カラムと表 <A> の <C> カラムと表 <A> の <D> カラムを箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の欠損を平均値で補完する	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
<A> のインデックス名を <B> から <C> にリネームする	<A> . rename ( index = { <B> : <C> } )	index <A> . rename ( index = { <B> : <C> } )
そこで、目印の色として水色を使用する	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
データフレーム <B> 中の未記入の値を <C> に置き換えて、 <A> とする	<A> = <B> . fillna ( <C> )	alpha = <B> . fillna ( <C> )
表 <A> のカラム <B> 、 <C> 、 <D> を調べる	<A> [ [ <B> , <C> , <D> ] ]	'words' <A> [ <B> , <C> , <D> ] ]
表 <A> を位置に基づいてソートする	<A> . sort_index ( )	X . sort_index ( )
表 <B> と表 <C> を横方向に結合して、 <A> に代入する	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
表データ <A> から重複している値がある行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	True <A> . drop_duplicates ( inplace = True )
データフレーム <A> 中の重複しているデータ	<A> [ <A> . duplicated ( ) ]	'words' <A> [ <A> . duplicated ( ) ]
<B> ( データフレーム ) の <C> 列と列 <D> を降順にし、 <A> にする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表データ <A> のカラム <B> とカラム <C> を値が大きい順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	start = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
グラフのフォントを日本語表示とする。	sns . set ( font = 'IPAexGothic' , style = 'white' )	'white' . set ( font = 'IPAexGothic' , style = 'white' )
<A> ( データフレーム ) の <B> 列を数値データで置き換え、 <A> とする	<A> = pd . get_dummies ( <A> [ <B> ] )	X = pd . get_dummies ( <A> [ <B> ] )
カラム <B> を数値データにし、 <A> とする	<A> = pd . get_dummies ( <A> [ <B> ] )	X = pd . get_dummies ( <A> [ <B> ] )
そこで、マーカーの形の輪郭線は <A> を使う	markeredgewidth = <A>	markeredgewidth = <A>
表 <B> の元の位置をリセットして、 <A> に代入する	<A> = <B> . reset_index ( drop = True )	alpha = <B> . reset_index ( drop = True )
同じグラフ内でデータフレーム <A> の <B> 列とデータフレーム <A> の <C> 列とデータフレーム <A> の列 <D> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> のリセットして、元の位置を削除し、 <A> に代入する	<A> = <B> . reset_index ( drop = True )	alpha = <B> . reset_index ( drop = True )
そこで、六角形のマーカーの形状を使用する	marker = 'h'	marker = 'h'
<B> パスから表データをカンマ区切りで読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
カンマ区切りでデータフレームをファイル <A> から読み込む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
表 <B> の列 <C> に重複がある行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
表データ <A> の元のインデックスを振り直して、再代入する	<A> = <A> . reset_index ( drop = True )	True = <A> . reset_index ( drop = True )
表 <A> の表属性 <B> の名前を <C> に変更して、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
表データ <A> 内の NaN の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
全結合で <A> 表と表 <B> をマージする	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
区関の数を <B> として <A> のヒストグラムを描く	plt . hist ( <A> , bins = <B> )	plt . hist ( <A> , bins = <B> )
そこで、バツのマーカーの形状を使用する	marker = 'x'	marker = 'x'
データフレーム <A> のカラム <B> と <C> カラムと <D> カラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の行数と列数	<A> . shape	<A> . shape
表データ <A> 内で重複する行の合計を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレームを <B> ファイルパスから <C> 区切りで読んで、 <A> にする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
棒グラフの項目名を <A> から <B> 、 <C> 、 <D> へ変更する	plt . xticks ( <A> , [ <B> , <C> , <D> ] )	plt . xticks ( <A> , [ <B> , <C> , <D> ] )
表 <A> の <B> 表属性と表属性 <C> を大から小へと並び替えて、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
そこで、 <A> を目印の大きさにする	markersize = <A>	markersize = <A>
表 <A> カラム <B> と <A> 表データ <C> カラムと表データ <A> カラム <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の列名を <B> から <C> にリネームし、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> } )	'words' <A> = <A> . rename ( columns = { <B> : <C> } )
データフレーム <A> 内の欠損を <A> データフレームの平均値で埋め、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> の <B> コラムを削除	<A> . drop ( <B> , axis = 1 )	'words' <A> . drop ( <B> , axis = 1 )
<A> のヒストグラムをビンの数を <B> として描写する	plt . hist ( <A> , bins = <B> )	bins = <A> . hist ( <B> )
表 <A> 全体を <B> コラムの値を元に昇順で並び替え、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
表 <A> 中の <B> カラムに重複はあるのかどうか表示する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> をインデックスを元に昇順で並び替え、インプレースする	<A> . sort_index ( inplace = True )	np <A> . sort_index ( inplace = True )
<B> ファイルパスに表データ <A> を書き出す	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
データフレーム <A> において、コラム <B> から箱ひげ図を作図する	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
<A> の <B> コラムに重複があるのかどうか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> の未入力の値がある行を落として、置き換える	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
表 <A> 中の <B> を欠損に置換し、欠損が存在する行を削除	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <A> <B> 表属性と表データ <A> <C> 表属性と <A> 表データ <D> 表属性の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内のカラム <B> に重複がある行を消し、インプレースする	<A> . drop_duplicates ( subset = <B> , inplace = True )	<A> . drop_duplicates ( subset = <B> , inplace = True )
描画したプロットを <A> というファイル名で出力する	plt . savefig ( <A> )	pd . read_csv ( <A> )
カラム <A> とカラム <B> に重複があるのかどうか確認	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<C> を表属性 <B> として、新しいデータフレームを作成して、 <A> にする	<A> = pd . DataFrame ( { <B> : <C> } )	<A> = pd . DataFrame ( { <B> : <C> } )
表 <A> を位置を元にソートする	<A> . sort_index ( )	index = <A> . sort_index ( )
表データ <A> についてダミー変数を生成する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表 <A> の NaN を含む行を削除する	<A> . dropna ( )	'words' <A> . dropna ( )
左側のデータの位置と右側のデータの <C> カラムをキーとして、表データ <A> と <B> 表データをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> ( データフレーム ) の表属性 <B> を小さい順に並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
データフレーム <A> 内のカラム <B> とカラム <C> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の <B> コラムとコラム <C> を逆順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
同じグラフ内で表 <A> の <B> 表属性と表 <A> の表属性 <C> と <A> 表の <D> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 中の未入力の値が存在する行を落として、インプレースする	<A> . dropna ( inplace = True )	'words' <A> . dropna ( inplace = True )
そこで、目印は四角	marker = 's'	marker = 's'
データフレーム <A> 中の欠損値の合計を確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
同じ x 軸と y 軸で <A> 表データのカラム <B> と <C> カラムとカラム <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> を <B> ファイルパスという名前で CSV ファイルで保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<A> ( データフレーム ) の表属性 <B> を昇順にし、インプレースする	<A> . sort_values ( <B> , inplace = True )	for <A> . sort_values ( <B> , inplace = True )
<A> 表の内容をチェックする	<A> . head ( )	pd . head ( <A> )
データフレーム <B> の列名を <C> から <D> に、 <E> から <F> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
データフレーム <A> を <B> でグループ化し、 <C> 列とカラム '' 出現数 'で集約し、' 出現数'列で並べ直す	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , '出現数' : sum } ) . sort_values ( by = '出現数' )	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , '出現数' : sum } ) . sort_values ( by = '出現数' )
表データ <A> 中の未記入の値を <A> データフレームの平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
<B> の <C> コラムの値を昇順でソートを <A> とする	<A> = <B> . sort_values ( <C> )	<A> = <B> . sort_values ( <C> )
<A> のカラム <B> とカラム <C> を消し、置き換える	<A> . drop ( [ <B> , <C> ] , axis = 1 , inplace = True )	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )
<A> のカラム <B> をソートし、置き換える	<A> = <A> . sort_values ( <B> )	plt . sort_values ( <A> , <B> , inplace = True )
2 次元配列 <B> を <C> をコラム名としてデータフレームに変換し、 <A> にする	<A> = pd . DataFrame ( <B> , columns = <C> )	<A> = pd . DataFrame ( <B> , columns = <C> )
表 <A> 中の欠損を <B> に置き換える	<A> . fillna ( <B> )	'words' <A> . fillna ( <B> )
表データ <A> 全体を <B> 表属性を軸にソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> のカラム <B> についての箱ひげ図を描く	plt . boxplot ( <A> [ <B> ] )	fontsize . boxplot ( <A> [ <B> ] )
表データ <A> 内の列 <B> と列 <C> に重複を判定する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> のコラム <B> を昇順にソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<A> の <B> コラムを並び替え、置き換える	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
表データ <A> と <B> 表を縦に一つにまとめる	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
分割数を <C> 、ビンのラベルを <D> リストとして、データフレーム <A> の <B> 表属性をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	for pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> の <B> コラムが <C> 以上のデータを計算する	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
表 <A> の <B> コラムの時間	<A> [ <B> ] . dt . hour	<A> [ <B> ] . dt . hour
表データ <A> と <B> データフレームを縦結合する	pd . concat ( [ <A> , <B> ] )	<A> . concat ( [ <B> , <C> ] )
表データ <A> とデータフレーム <B> を縦にくっつける	pd . concat ( [ <A> , <B> ] )	<A> . concat ( [ <B> , <C> ] )
<B> 番目の列を位置と設定して、ファイル名 <A> から読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
棒グラフの位置を真ん中として、 <A> 軸を <A> とした <B> の棒グラフを描画する	plt . bar ( <A> , <B> , align = 'center' )	plt . bar ( <A> , <B> , align = 'center' )
<A> の列 <B> を並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
データフレーム <A> カラム <B> とデータフレーム <A> カラム <C> と <A> データフレーム <D> カラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表属性 <A> に重複があるのかチェックを表示する	df . duplicated ( subset = <A> )	df . duplicated ( subset = <A> )
<A> という軸ラベルを x 軸に付ける	plt . xlabel ( <A> )	X . xlabel ( <A> )
<A> 内の NaN を <B> で埋め、インプレースする	<A> . fillna ( <B> , inplace = True )	'words' <A> . fillna ( <B> , inplace = True )
<A> の列 <B> についてのヒストグラムを描写する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
表 <B> のカラム名を <C> から <D> に、 <E> から <F> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )	markeredgecolor = <B> . rename ( columns = { <C> : <D> , <E> : <F> } )
<A> の <B> 表属性と表属性 <C> ごとに表属性 <D> の値の和	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> 中の <B> 表属性と表属性 <C> に重複はあるかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 中の重複している行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<A> 軸ラベルをグラフの x 軸に付ける	plt . xlabel ( <A> )	sklearn . xlabel ( <A> )
分割数を <D> 、ビンの名前を 0 始まりの連番として、データフレーム <B> の <C> コラムを分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	df = pd . cut ( <A> [ <B> ] , <C> , label = False )
表 <A> の <B> 列の要素	<A> [ <B> ] . values	<A> [ <B> ] . values
<A> の表属性 <B> の未記入の値を <B> 表属性の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
<A> コラムに重複はあるかどうか調べる	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
<A> ( データフレーム ) の <B> コラムを昇順にする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
データフレーム <A> の中の表属性 <B> と <C> 表属性に重複はあるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表 <A> のインデックス名を <B> から <C> にリネームして、再代入する	<A> = <A> . rename ( index = { <B> : <C> } )	index = <A> . rename ( index = { <B> : <C> } )
表 <A> の <B> コラムごとに <C> コラムの平均	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
表 <A> 内の未入力の値を削除	<A> . dropna ( )	marker . dropna ( )
そこで、 <A> を開始とする	start = <A>	sort_index = <A>
同じグラフ内で表 <A> の列 <B> と表 <A> の列 <C> と <A> 表の <D> 列を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> を表属性 <B> を元にソート	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
分割数を <C> 、ビンのラベルを整数値として、データフレーム <A> の <B> コラムを分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
表 <A> の <B> 行から <C> 行まで	<A> [ <B> : <C> ]	'words' <A> [ <B> : <C> ]
<A> の行名を <B> から <C> にリネームする	<A> . rename ( index = { <B> : <C> } )	rename <A> . rename ( index = { <B> : <C> } )
表 <A> を <B> コラムの値に基づいてソートして、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表 <A> の <B> 表属性と表属性 <C> と <D> 表属性について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	. sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
同じ軸のセットで表 <A> <B> 列と <A> 表列 <C> と <A> 表 <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
左側のデータのインデックスと右側のデータの <C> カラムを項目名として、データフレーム <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> 内の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
表データ <A> 中の <B> 表属性に重複はあるのか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
データフレーム <A> の重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
列 <A> をソート	df . sort_values ( <A> )	df . sort_values ( <A> )
表 <A> の中のコラム <B> に重複はあるか	<A> . duplicated ( subset = <B> )	'words' <A> . duplicated ( subset = <B> )
列名を指定せずに <A> ファイル名を読む	pd . read_csv ( <A> , header = None )	pd . read_csv ( <A> , header = None )
データフレーム <A> の <B> コラムとコラム <C> を降順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	x <A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> 内の <B> コラムに重複があるのか確認する	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
データフレームをファイル名 <B> から読んで、 <A> とする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
一番左の列を位置に設定して、 <B> ファイルパスを表に格納して、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<A> ( データフレーム ) の <B> 表属性を順番になるようにし、 <A> にする	<A> = <A> . sort_values ( <B> )	start <A> = <B> . sort_values ( <B> )
<A> 列という列をドロップし、インプレースする	df . drop ( <A> , axis = 1 , inplace = True )	. drop ( <A> , axis = 1 , inplace = True )
表データ <A> の <B> カラムの日にちを見る	<A> [ <B> ] . dt . day	for <A> [ <B> ] . dt . day
同じ軸のセットで <A> 表データの <B> カラムと <A> 表データのカラム <C> と <A> 表データの <D> カラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内で重複する行数の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> 内の重複する行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
データフレーム <A> 中の列 <B> に重複がある行を落として、インプレースする	<A> . drop_duplicates ( subset = <B> , inplace = True )	<A> . drop_duplicates ( subset = <B> , inplace = True )
<A> の中の重複を確認する	<A> . duplicated ( )	'words' <A> . duplicated ( )
データフレーム <A> を位置で並び替える	<A> . sort_index ( )	<A> . sort_index ( )
列番号 <B> を位置にして、 <A> ファイルを表データに格納する	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
同じグラフ内で <A> 表列 <B> と <A> 表列 <C> と表 <A> <D> 列を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> ( データフレーム ) のカラム <C> とカラム <D> を大きい順にソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
タイトルを <A> とする	plt . title ( <A> )	df . title ( <A> )
表 <A> において、 <B> カラムから箱ひげ図を描画する	plt . boxplot ( <A> [ <B> ] )	kind = plt . boxplot ( <A> [ <B> ] )
表 <B> とデータフレーム <C> を縦向きにくっつけて、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
そこで、赤色をマーカーの種類のエッジ色とする	markeredgecolor = 'red'	markeredgecolor = 'red'
表 <A> の列の名前を <B> から <C> に変更し、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
左側のデータのインデックスと右側のデータのカラム <D> を項目名として、 <B> 表データと <C> 表データをマージし、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> 内の <B> カラムと <C> カラムに重複はあるのか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> 内の NaN の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
分割数を <C> 、ビンの名前をリスト <D> として、データフレーム <A> のカラム <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	for pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> のコラム <B> を軸にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	plt . sort_values ( <A> , <B> , inplace = True )
表データ <A> の <B> 行目を削除を <A> とする	<A> = <A> . drop ( <B> )	X = <A> . drop ( <B> )
表データ <A> の NaN の合計	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、打点の色はマゼンタを使う	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
データフレーム <A> の最後の 5 行を調べる	<A> . tail ( )	<A> . tail ( )
同じ x 軸と y 軸で <A> データフレームの <B> 表属性と <A> データフレームの <C> 表属性とデータフレーム <A> の表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> についての中央値を抽出する	<A> [ <B> ] . median ( )	pd . median ( <A> [ <B> ] )
表データ <A> を数値データに変換する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
データフレーム <B> のカラム <C> とカラム <D> を大から小へとソートを <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> のコラム <B> の名前を <C> に、 <D> コラムの名前を <E> にリネームして、 <A> にする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	range = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
表データ <A> 中の <B> コラムに重複がある行を落として、 <A> とする	<A> = <A> . drop_duplicates ( subset = <B> )	X = <A> . drop_duplicates ( subset = <B> )
表 <A> 中の NaN を含む行を落として、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> の <B> 列が <C> 以下データを抽出する	<A> [ <A> [ <B> ] <= <C> ]	if <A> [ <B> ] <= <C> ]
<A> の重複をチェックを確認する	<A> . duplicated ( )	X . duplicated ( )
表属性 <B> に重複がある行をドロップを <A> にする	<A> = df . drop_duplicates ( subset = <B> )	X = df . drop_duplicates ( subset = <B> )
表 <A> 内の欠損の合計を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
同じグラフ内で <A> データフレームの <B> 表属性と <A> データフレームの <C> 表属性と <A> データフレームの <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の <E> カラムについて、 <C> カラムをインデックス、 <D> カラムをカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	index = <B> , columns = <C> , values = <D> , values = <E> )
<A> コラムに重複がある行を削除する	df . drop_duplicates ( subset = <A> )	<A> . drop_duplicates ( subset = <A> )
表属性 <A> を値が小さい順にし、インプレースする	df . sort_values ( <A> , inplace = True )	X . sort_values ( <A> , inplace = True )
表 <A> 内の <B> を NaN に置換し、 NaN がある行を落とし、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <A> の全ての列の重複する行を取り除いて、インプレースする	<A> . drop_duplicates ( inplace = True )	'words' <A> . drop_duplicates ( inplace = True )
そこで、マーカーの形状はひし形を用いる	marker = 'D'	marker = 'D'
そこで、四角の目印を使用する	marker = 's'	marker = 's'
表 <A> のカラム <B> とカラム <C> ごとに <D> カラムの値の和	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> 中に存在する <B> を未記入の値とする	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
<B> 区切りでデータフレームをファイル <A> から読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
同じ x 軸と y 軸でデータフレーム <A> 列 <B> とデータフレーム <A> <C> 列とデータフレーム <A> <D> 列を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> の中の <C> を未記入の値に置換し、未記入の値が存在する行を落とし、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
表 <B> 内の欠損をデータフレーム <B> の平均値で補い、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
そこで、目印のエッジ色はグレーにする	markeredgecolor = 'gray'	markeredgecolor = 'gray'
<A> の列 <B> を軸にソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
一番左の列を位置にして、 <A> ファイルパスから読み込む	pd . read_csv ( <A> , index_col = 0 )	pd . read_csv ( <A> , index_col = 0 )
エクセルファイル <B> のシート名 <C> を読み込んで、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	= pd . read_excel ( <B> , sheet_name = <C> )
2 次元配列 <B> を <C> を表属性名として表データに変換して、 <A> に代入する	<A> = pd . DataFrame ( <B> , columns = <C> )	= pd . DataFrame ( <A> , columns = <B> , 'label2' = <C> )
<A> 表属性という列を削除して、置き換える	df = df . drop ( <A> , axis = 1 )	<A> . drop ( <A> , axis = 1 , inplace = True )
同じ軸のセットで <A> データフレームの <B> カラムとデータフレーム <A> のカラム <C> と <A> データフレームのカラム <D> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の列 <B> についての分散を得る	<A> [ <B> ] . var ( )	markerfacecolor = <A> [ <B> ] )
<A> をファイルパス <B> という名前で CSV ファイルに書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
<A> のインデックスを昇順でソートする	<A> . sort_index ( )	index = <A> . sort_index ( )
データフレーム <A> の <B> 列と列 <C> を降順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
左側のデータに合わせてデータを結合する	pd . merge ( df1 , df2 , how = 'left' )	pd . merge ( df1 , df2 , how = 'left' )
データフレーム <A> の欠損値を <B> として、 <A> とする	<A> = <A> . fillna ( <B> )	X = <A> . fillna ( <B> )
<A> の <B> 列を軸にソートを <A> にする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
列番号 <C> をインデックスとして、 <B> ファイルパスを表データに格納し、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> をインデックスを元に昇順でソートする	<A> . sort_index ( )	X . sort_index ( )
表データ <A> において、コラム <B> と <C> と <D> の関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> 中の欠損の数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の全ての列の重複する値がある行を取り除いて、置き換える	<A> . drop_duplicates ( inplace = True )	inplace = <A> . drop_duplicates ( )
表データ <A> の <B> カラムのユニーク値	<A> [ <B> ] . unique ( )	<A> [ <B> ] . unique ( )
データフレーム <A> の中の <B> コラムに重複がある行を消す	<A> . drop_duplicates ( subset = <B> )	dropna <A> . drop_duplicates ( subset = <B> )
<B> を <C> をカラム名として表にして、 <A> にする	<A> = pd . DataFrame ( <B> , columns = <C> )	plt . pd . DataFrame ( <A> , columns = <B> , 'label2' = <C> )
データフレーム <A> 全体をインデックスを軸にソートして、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<A> を位置を元に昇順で並び替え、 <A> とする	<A> = <A> . sort_index ( )	sort_index <A> = <A> . sort_index ( )
表データ <A> のカラム <B> とカラム <C> を降順に並び替え、 <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	ascending = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
データフレーム <A> 内の NaN を表データ <A> の平均値で補い、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
<A> を位置で並び替え、 <A> に代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
データフレーム <A> の <B> 列をソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
表データ <B> の <C> を NaN に置換し、 NaN が存在する行を削除し、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
そこで、目印の輪郭色は紺色をする	markeredgecolor = 'navy'	markeredgecolor = 'navy'
そこで、ラインスタイルは転戦を用いる	linestyle = 'dotted'	kind = 'dotted'
そこで、マーカーの色は紺色をする	markerfacecolor = 'navy'	markerfacecolor = 'navy'
表 <A> 全体を <B> 表属性の値を元に並び替えて、 <A> に代入する	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
データフレーム <A> において、 <B> カラムと <C> と <D> の関係性を一度に描写する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> の未入力の値を平均値で補完する	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
<A> の表属性 <B> の時間を表示する	<A> [ <B> ] . dt . hour	<A> [ <B> ] . dt . hour
左側のデータの位置と右側のデータの列 <D> を項目名として、データフレーム <B> と <C> データフレームを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> という名前のエクセル <A> のシート全部を表に格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
データフレーム <B> とデータフレーム <C> に対して、 <D> コラムを項目名としてデータを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
表 <A> 中の <B> を欠損に置換し、欠損が存在する行を落とし、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表データ <A> のコラム <B> についての分散を取得する	<A> [ <B> ] . var ( )	plt . var ( <A> [ <B> ] )
データフレーム <A> 中の <B> カラムに重複がある行を消して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <B> )	X = <A> . drop_duplicates ( subset = <B> )
棒グラフの位置を真ん中として、 <A> と <B> の棒グラフを作図する	plt . bar ( <A> , <B> , align = 'center' )	plt . bar ( <A> , <B> , align = 'center' )
表データ <A> の欠損値を表データ <A> の平均値で補って、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> のコラム <B> とコラム <C> と <D> コラムについての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<C> 表属性をキーとして、 <A> 表と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
データフレーム <A> のカラム <B> の NaN をカラム <B> の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
データフレーム <A> をファイル名 <B> という名前で CSV ファイルに書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
<C> 区切りでデータフレームをファイル名 <B> から読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表データ <A> の <B> を欠損に置換し、欠損が存在する行をドロップする	<A> . replace ( <B> , np . nan ) . dropna ( )	<A> . replace ( <B> , np . nan ) . dropna ( )
表データ <B> と <C> 表を縦結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
データフレーム <B> の重複する値がある行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	start = <B> . drop_duplicates ( )
データフレーム <A> と表 <B> を縦に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> と表 <B> に対して、 <C> 表属性を項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
そこで、隠れ層として <A> , <B> 層を用いる	hidden_layer_sizes = ( <A> , <B> )	kind = ( <A> , <B> )
データフレーム <A> 中のコラム <B> に重複があるか	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データ <A> 列 <B> と <A> データフレーム列 <C> と <A> データフレーム列 <D> の箱ひげ図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の表属性 <B> と表属性 <C> を降順にソートする	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
表データ <A> の <B> コラムの年を表示する	<A> [ <B> ] . dt . year	<A> [ <B> ] . dt . year
タイトルを <A> に設定する	plt . title ( <A> )	pd . title ( <A> )
インデックスと表属性 <D> をキーとして <B> 表と <C> 表をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> の中の欠損が存在する行を削除して、インプレースする	<A> . dropna ( inplace = True )	'words' <A> . dropna ( inplace = True )
表データ <A> <B> カラムと <A> 表データカラム <C> と <A> 表データ <D> カラムの箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムを昇順にソート	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> 全体を列 <B> の値を元に昇順でソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	'words' <A> . sort_values ( <B> , inplace = True )
<A> 内にある <B> を欠損値に置き換えて、 <A> に代入する	<A> = <A> . replace ( <B> , np . nan )	X = <A> . replace ( <B> , np . nan )
表データ <A> と <B> 表に対して、カラム <C> をキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
一番左の列を位置と設定して、 <A> ファイルパスからデータフレームとを読み込む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
y 軸にラベル <A> をつける	plt . ylabel ( <A> )	plt . ylabel ( <A> )
表としてカンマ区切りでファイルパス <B> を読み込み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
<A> のコラム <C> に <D> 関数を適用して、新しくコラム <B> にする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の <C> を欠損値に置換し、欠損値がある行を削除して、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
表データをカンマ区切りで CSV ファイル <B> から読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
<A> 中の欠損を <A> 表の平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
<A> 番目までの列を表示させる	pd . set_option ( 'display.max_columns' , <A> )	pd . set_option ( 'display.max_columns' , <A> )
データフレーム <A> の <C> カラムの曜日を  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name	markeredgewidth = <A> [ <B> ] . dt . weekday_name
<A> の列 <B> が <C> より大きいデータを取得する	<A> [ <A> [ <B> ] >  <C> ]	df [ <A> [ <B> ] > <C> ]
<A> 列と <B> 列に重複はあるかどうか確認する	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
列 <A> を one - hot 表現にする	pd . get_dummies ( df [ <A> ] )	pd . get_dummies ( df [ <A> ] )
表データ <A> から重複する行を取り除く	<A> . drop_duplicates ( )	pd . drop_duplicates ( )
データフレーム <A> 内の未入力の値を <A> データフレームの平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
左側のデータのインデックスと右側のデータのカラム <C> をキーとして、 <A> 表データと表データ <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> の中の重複しているデータ	<A> [ <A> . duplicated ( ) ]	<A> [ <A> . duplicated ( ) ]
データフレーム <A> の <B> コラムの名前を <C> に、コラム <D> の名前を <E> に変更して、インプレースする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
表 <A> の上 5 行を確認する	<A> . head ( )	df . head ( <A> )
<A> のインデックスをソートし、置き換える	<A> = <A> . sort_index ( )	df . sort_index ( inplace = True )
そこで、グラフの種類として度数分布図を用いる	kind = 'hist'	kind = 'hist'
データフレーム <A> の <B> 列を位置に設定し、 <A> とする	<A> = <A> . set_index ( <B> )	X = <A> . set_index ( <B> )
<A> をエクセルファイル <B> というファイル名で書き出す	<A> . to_excel ( <B> )	X <A> . to_excel ( <B> )
表 <A> 内に重複はあるのか表示する	<A> . duplicated ( )	<A> . duplicated ( )
そこで、打点の色として紺色を使う	markerfacecolor = 'navy'	markerfacecolor = 'navy'
データフレーム <A> 中の列 <B> に重複がある行をドロップする	<A> . drop_duplicates ( subset = <B> )	'words' <A> . drop_duplicates ( subset = <B> )
<A> の列 <B> と <C> 列に重複はあるか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の NaN を <B> に置き換えて、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
同じグラフ内で <A> 表データ <B> カラムと <A> 表データカラム <C> と <A> 表データ <D> カラムを箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の <B> カラムと <C> カラムに重複が存在するのかを表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
とりあえずデータフレーム <A> の内容を確認を確認する	<A> . head ( )	df . head ( <A> )
表データ <A> 中の <B> を NaN に置換し、 NaN が存在する行を落とし、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
インデックスとコラム <C> をキーとして表 <A> と表 <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> のカラム <B> と <C> カラムに重複は存在するのかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<C> コラムを項目名として、データフレーム <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> 中の重複する行を落として、再代入する	<A> = <A> . drop_duplicates ( )	drop_duplicates = <A> . drop_duplicates ( )
列番号 <C> をインデックスとして、ファイルパス <B> を読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
同じ軸で <A> 表データの列 <B> と列 <C> と <D> 列を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
一番左の列をインデックスにして、 <B> ファイルパスをデータフレームとして読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<B> という名前のエクセルの <C> シート名をデータフレームに格納して、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
<A> の <B> コラムが <C> より少ないデータを取得する	<A> [ <A> [ <B> ] <  <C> ]	<A> [ <A> [ <B> ] < <C> ]
<A> を位置で並び替え、インプレースする	<A> . sort_index ( inplace = True )	df . sort_index ( inplace = True )
<A> 全体を <B> カラムでソートして、置き換える	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
そこで、マーカーの形状の色を赤色とする	markerfacecolor = 'red'	marker = 'red'
表 <A> のコラム <B> とコラム <C> と <D> コラムのボックスチャートを一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
左側のデータフレームに合わせてデータを一つにまとめて、 <A> とする	<A> = pd . merge ( df1 , df2 , how = 'left' )	df1 <A> = pd . read_csv ( df1 , df2 , how = 'left' )
表 <A> 内のカテゴリ変数を数値データで置き換える	pd . get_dummies ( <A> )	<A> = pd . get_dummies ( <A> )
CSV ファイル <B> をカンマ区切りで表データとして読んで、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
データフレーム <A> のコラム <B> の出現回数を調べる	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
表データ <A> 全体をカラム <B> を軸にソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	start <A> = <B> . sort_values ( <B> )
データフレーム <A> に重複があるかどうかを真偽値で返す	<A> . duplicated ( )	<A> . duplicated ( )
<A> の NaN を <A> 表データの平均値で補う	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
表データ <A> 中の重複する行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
<A> を <B> でグループ化し、 <C> カラムと <D> カラム 'で集約し、カラム' 出現数'で並べ直す	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , <D> : sum } ) . sort_values ( by = <D> )	<A> . groupby ( <B> ) . agg ( { <C> : np . mean , <D> : sum } ) . sort_values ( by = <D> )
表データ <A> 内の重複している行をドロップして、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> の表属性 <B> の月を表示する	<A> [ <B> ] . dt . month	<A> [ <B> ] . dt . month
データフレーム <A> のそれぞれの行に対して重複があるかどうかを確認する	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <A> 中の <B> を欠損に置換し、欠損がある行をドロップを <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
データフレーム <A> を位置でソートして、インプレースする	<A> . sort_index ( inplace = True )	np <A> . sort_index ( inplace = True )
<A> の列名を <B> から <C> に、 <D> から <E> にリネームし、インプレースする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
エクセルデータ <A> を表データに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
<A> 内の欠損を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	method . fillna ( method = 'ffill' )
そこで、色は赤で表示する	color = 'red'	markerfacecolor = 'red'
表データ <A> と <B> 表を横に一つにまとめる	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
一番左の列を位置と設定して、ファイル名 <B> からデータフレームとを読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表データ <A> のコラム <B> を位置として設定して、置き換える	<A> = <A> . set_index ( <B> )	df . set_index ( <A> , <B> , inplace = True )
データフレーム <A> の表属性 <B> の欠損を <C> で穴埋めする	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
<A> を <B> をコラム名として表に変換する	pd . pd . DataFrame ( <A> , columns = <B> )	<A> . pd . DataFrame ( <B> , columns = <C> )
表データ <A> の <C> 列の中の前後の行の差分を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )
同じグラフ内で表データ <A> の <B> 表属性と <C> 表属性と表属性 <D> を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> 内の欠損値が存在する行をドロップを <A> にする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
データフレームを <C> 区切りでファイルパス <B> から読み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
表データ <A> で重複した行の合計を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <B> 全体を表属性 <C> を元にソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
新しい表属性を表 <A> に追加し、名前を <B> とする	<A> [ <B> ] = [ 0 ] * len ( <A> )	plt . boxplot ( <A> [ <B> ] )
表 <A> の列 <B> に重複は存在するのかを表示する	<A> . duplicated ( subset = <B> )	encoding = <A> . duplicated ( subset = <B> )
<A> の重複する行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
位置と表属性 <D> をキーとして <B> データフレームと <C> データフレームを一つにまとめ、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> から重複する行を取り除き、 <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表データ <A> 全体をコラム <B> に基づいてソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
そこで、マーカーの輪郭色は紫色を用いる	markeredgecolor = 'purple'	markeredgewidth = 'purple'
表 <B> の列 <C> をソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	x <A> = <B> . sort_values ( <C> )
表データ <A> 中の <B> コラムに重複があるならば	if <A> . duplicated ( subset = <B> ) :	duplicated if <A> . duplicated ( subset = <B> ) :
<A> のカラム <B> の未記入の値をカラム <B> の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
<B> と <C> 表を縦結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
同じ x 軸と y 軸で表データ <A> <B> コラムと <A> 表データ <C> コラムと表データ <A> <D> コラムを箱ひげ図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> のコラム <B> を箱ひげ図に描画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
表データ <B> 全体を <C> コラムの値を元に並び替えて、 <A> に代入する	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表 <A> の <B> コラムと表データ <A> のコラム <C> と表データ <A> の <D> コラムの箱髭図を一枚のグラフで作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレームとして <C> 区切りで CSV ファイル <B> を読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
一番左の列をインデックスに、ファイル <B> を読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表 <A> 中の重複を見る	<A> . duplicated ( )	X . duplicated ( )
同じ軸でデータフレーム <A> 表属性 <B> と <A> データフレーム <C> 表属性とデータフレーム <A> 表属性 <D> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<C> 列を項目名として、 <A> 表と表 <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> を縦軸、 <B> を横軸として、散布図を描画する	plt . scatter ( <A> , <B> )	scatter = <A> . plot ( <B> )
表 <A> の中の重複する行を取り除く	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
データフレーム <A> 全体を <B> 列の値に沿ってソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	<B> <A> = <A> . sort_values ( <B> )
カンマ区切りで表データをファイル名 <B> から読み、 <A> にする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
列番号 <C> を位置として、ファイル名 <B> を読んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<B> というエクセルファイルのシート全てからデータフレームを読み込んで、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> のコラム <B> と <C> コラムの相関係数を見る	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
<B> の <C> コラムとコラム <D> を大きい順に並び替え、 <A> に代入する	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
表データ <A> を <B> パスという名前で書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
データフレーム <A> のカラム <B> と <C> カラムごとにカラム <D> の値の和を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
<B> というエクセルデータ <B> のシート全部をデータフレームに格納し、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	df = pd . read_excel ( <B> , sheet_name = None )
表 <A> を列 <B> の値に基づいてソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
<A> という名前のエクセル <A> の全てのシートを表に格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表データ <A> の <B> カラムを中央値でビン分割する	pd . qcut ( <A> [ <B> ] , 2 )	pd . qcut ( <A> [ <B> ] , 2 )
<A> を <B> 区切りで読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<C> 番目の列を位置にして、 <B> パスから読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> の中の欠損したセル数をカウントする	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
位置と表属性 <C> をキーとしてデータフレーム <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
y 軸に <A> 軸ラベルを付ける	plt . ylabel ( <A> )	plt . ylabel ( <A> )
データフレーム <A> の <B> コラムとコラム <C> と <D> コラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の表属性 <B> に重複があるのか表示する	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
<A> 内の重複している行をドロップし、 <A> に代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<A> ( データフレーム ) の <B> 列をダミー変数にして、 <A> とする	<A> = pd . get_dummies ( <A> [ <B> ] )	X = pd . get_dummies ( <A> [ <B> ] )
表 <A> の重複している行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	inplace <A> . drop_duplicates ( inplace = True )
表 <A> <B> 表属性と <A> データフレーム表属性 <C> とデータフレーム <A> 表属性 <D> についての箱ひげ図を作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> の表属性 <B> と表属性 <C> を消す	<A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 )
<A> のインデックスを昇順でソート	<A> . sort_index ( )	sort_index . sort_index ( )
データフレーム <A> から重複する値がある行をドロップして、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
分割数を <D> 、ビンのラベルをインデックスとして、 <B> データフレームの表属性 <C> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	X = pd . cut ( <A> [ <B> ] , <C> , label = False )
<A> ( データフレーム ) の <B> カラムを順番になるようにソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<D> コラムをキーとして、表 <B> と表 <C> をマージして、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
表データ <A> の <B> カラムの各要素の出現回数を確認する	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
表データ <B> と <C> 表データを横方向にくっつけ、 <A> にする	<A> = pd . merge ( <B> , <C> )	X = pd . merge ( <B> , <C> )
<B> を <C> コラムの値を元にソートして、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
表データ <A> 中の重複する値がある行を削除し、インプレースする	<A> . drop_duplicates ( inplace = True )	'words' <A> . drop_duplicates ( inplace = True )
<A> 内の <B> コラムに重複がある行をドロップを <A> とする	<A> = <A> . drop_duplicates ( subset = <B> )	<A> = <A> . drop_duplicates ( subset = <B> )
表データ <A> の表属性 <B> と表 <A> の <C> 表属性と表 <A> の <D> 表属性についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> からファイル <B> という CSV ファイルを書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
インデックスなしで <A> データフレームを <B> ファイルに書き出す	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
表 <A> をインデックスに基づいてソートして、置き換える	<A> = <A> . sort_index ( )	df . sort_index ( inplace = True )
<A> から <B> ファイル名という CSV ファイルを書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
<A> の <B> 表属性と表属性 <C> と表属性 <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
エンコーディングを shift_jis として、 <B> パスを読み、 <A> とする	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )	<A> = pd . read_csv ( <B> , encoding = 'shift_jis' )
データフレーム <A> のカラム <B> とカラム <C> ごとにカラム <D> の値の合計を算出する	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )	<A> . groupby ( [ <B> , <C> ] ) [ <D> ] . sum ( )
表 <A> の <B> コラムと <C> コラムと <D> コラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> の <C> 行目をドロップし、 <A> とする	<A> = <B> . drop ( <C> )	<B> <A> = <C> . drop ( <C> )
データフレーム <B> 中に存在する <C> を欠損とし、 <A> にする	<A> = <B> . replace ( <C> , np . nan )	<B> <A> = <C> . replace ( <C> , np . nan )
そこで、丸のマーカーを表示する	marker = 'o'	marker = 'o'
<A> のコラム <B> が <C> 以上のデータを算出する	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
表データ <A> の <B> カラムの日にち	<A> [ <B> ] . dt . day	for <A> [ <B> ] . dt . day
表 <A> 中の未入力の値を削除する	<A> . dropna ( )	<A> . dropna ( )
データフレーム <A> を数値データで置き換えて、 <A> にする	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
<A> の重複している行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	start = <A> . drop_duplicates ( )
カラム <B> をソートし、 <A> とする	<A> = df . sort_values ( <B> )	<B> <A> = df . sort_values ( <B> )
同じグラフ内で <A> 表コラム <B> と表 <A> コラム <C> と表 <A> <D> コラムを箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> を one - hot 表現に変換し、 <A> に代入する	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
そこで、マーカーは四角を使う	marker = 's'	marker = 's'
表データ <A> のコラム <B> の要素	<A> [ <B> ] . values	range = ( <A> [ <B> ] )
データフレーム <A> の欠損値が存在する行をドロップ	<A> . dropna ( )	<A> . dropna ( )
そこで、横棒グラフを用いる	kind = 'barh'	kind = 'bar'
表 <A> 内の <B> を未記入の値に置換し、未記入の値が存在する行を落として、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
そこで、マゼンタを打点の色とする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
エクセルファイル <B> の <C> のシートを読み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	= pd . read_excel ( <B> , sheet_name = <C> )
データフレーム <A> の <B> 行目の <C> 表属性	<A> . iloc [ <B> ] [ <C> ]	<A> . iloc [ <B> ] [ <C> ]
重複する行を削除を <A> に代入する	<A> = df . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<A> の表属性 <B> の一意の値を確認する	<A> [ <B> ] . unique ( )	<A> [ <B> ] . unique ( )
データフレーム <A> 中の欠損をデータフレーム <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> を位置を軸にソートを <A> に代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
データフレーム <A> の中で重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> の表属性 <B> の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
<A> 内の NaN を <A> データフレームの平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	unique = <A> . fillna ( <A> . mean ( ) )
表データ <A> を BOM 付きで <B> ファイル名に書き出す	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
表データ <A> をインデックスに基づいてソートして、再代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
データフレーム <A> の <B> 列の欠損値を <B> 列の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
表 <A> の重複している行を取り除いて、 <A> とする	<A> = <A> . drop_duplicates ( )	start = <A> . drop_duplicates ( )
そこで、打点としてダイヤモンドを用いる	marker = 'D'	marker = 'D'
表 <A> をインデックスを元に昇順でソートする	<A> . sort_index ( )	X . sort_index ( )
そこで、活性化として tanh を使用する	activation = 'tanh'	activation = 'tanh'
表データ <A> の未入力の値の合計を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> を位置を元に並び替える	<A> . sort_index ( )	<A> . sort_index ( )
表データ <B> 内の欠損値をドロップし、 <A> とする	<A> = <B> . dropna ( )	alpha = <B> )
<A> の <C> 表属性の曜日を  <A> [ <B> ] にする	<A> [ <B> ] = <A> [ <C> ] . dt . weekday_name	markeredgewidth = <A> [ <B> ] . dt . weekday_name
<B> 区切りで表を CSV ファイル <A> から読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
表データ <A> についてダミー変数を生成し、 <A> とする	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
<A> 表属性と表属性 <B> に重複はあるのかどうかチェックする	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
単語リスト <A> の出現頻度	pd . DataFrame ( { 'words' : <A> } ) . value_counts ( )	<A> . value_counts ( )
列番号 <B> をインデックスに、 <A> パスを読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
列番号 <C> をインデックスとして、 <B> ファイル名から読み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
左側のデータのインデックスと右側のデータのカラム <C> を項目名として、 <A> 表データと表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
同じ軸のセットで <A> 表 <B> コラムと表 <A> コラム <C> と <A> 表コラム <D> を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> の重複した行を消して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <A> の未入力の値を含む行を落として、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> カラム <B> と <A> 表 <C> カラムと <A> 表 <D> カラムの箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> 内の <B> を未記入の値に置換し、未記入の値が存在する行を消す	<A> . replace ( <B> , np . nan ) . dropna ( )	plt . replace ( <A> , <B> , np . nan ) . dropna ( )
表データ <A> を <B> コラムを元にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> = <A> . sort_values ( <B> )
同じ軸でデータフレーム <A> <B> カラムと <A> データフレーム <C> カラムとデータフレーム <A> カラム <D> をボックスチャートで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 列を値が小さい順にソートする	df . sort_values ( <A> )	X . sort_values ( <A> )
表データ df の <A> コラムのデータをひとつずつ繰り返す	for name in data [ <A> ] :	for name in data [ <A> ] :
先頭の列をインデックスに、 <B> パスを読み込み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<A> について円グラフをプロットする	plt . pie ( <A> )	kind = plt . pie ( <A> )
同じ軸のセットで表データ <A> の <B> コラムと <C> コラムと <D> コラムを箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> 中に存在する <C> を NaN とし、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	<B> <A> = <C> . replace ( <C> , np . nan )
データフレーム <A> の列 <D> について、列 <B> をインデックス、列 <C> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
データフレーム <A> 内の表属性 <B> と <C> 表属性に重複があるのかチェック	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
凡例をグラフ要素に付ける	plt . legend ( )	color = plt . legend ( )
データフレーム <A> の <B> 表属性を位置に設定し、 <A> にする	<A> = <A> . set_index ( <B> )	X = <A> . set_index ( <B> )
列番号 <C> を位置と設定して、ファイル <B> を読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表データ <A> <B> カラムと <A> 表 <C> カラムと表 <A> カラム <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内に重複はあるのか調べる	<A> . duplicated ( )	<A> . duplicated ( )
<A> ( データフレーム ) の <B> 列と列 <C> を降順にし、再代入する	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	{ <A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )
<A> ( データフレーム ) の表属性 <B> を値が小さい順にする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
描画した図を <A> というファイル名で出力する	plt . savefig ( <A> )	sklearn . savefig ( <A> )
表 <A> 中の未記入の値の数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> の <B> 表属性の各要素の出現回数	<A> [ <B> ] . value_counts ( )	'words' <A> [ <B> ] . value_counts ( )
左側のデータのインデックスと右側のデータの列 <A> を項目名として 2 つのデータを一つにまとめる	pd . merge ( df1 , df2 , left_index = True , right_on = <A> )	pd . merge ( df1 , df2 , left_index = True , right_on = <A> )
表示するグラフの大きさを縦 <B> 横 <A> にセットする	plt . figure ( figsize = ( <A> , <B> ) )	figsize = plt . figure ( <A> , <B> ) )
表データ <B> と表データ <C> を縦向きに連結を <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
そこで、色は赤色をする	color = 'red'	markerfacecolor = 'red'
表 <A> <B> カラムと <A> データフレームカラム <C> とデータフレーム <A> カラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> の欠損値を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	method . fillna ( method = 'ffill' )
データフレーム <A> の列 <B> をソートする	<A> . sort_values ( <B> )	df . sort_values ( <B> )
<A> のコラム <B> の曜日	<A> [ <B> ] . dt . weekday_name	<A> [ <B> ] . dt . weekday_name
表データ <A> 内の重複している行を削除を <A> とする	<A> = <A> . drop_duplicates ( )	X = <A> . drop_duplicates ( )
ピボット操作で表データ <A> の行を列に変更する	<A> . unstack ( )	<A> . unstack ( )
列番号 <C> をインデックスとして、 <B> ファイルパスを読み込んで、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表データ <B> の行の名前を <C> から <D> に変更して、 <A> にする	<A> = <B> . rename ( index = { <C> : <D> } )	= <B> . rename ( index = { <C> : <D> } )
<A> 表属性と <B> 表属性を大から小へとする	df . sort_values ( [ <A> , <B> ] , ascending = False )	df . sort_values ( [ <A> , <B> ] , ascending = False )
データフレーム <A> の中の未入力の値を表データ <A> の平均値で補って、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	df = <A> . fillna ( <A> . mean ( ) )
そこで、目印は★にする	marker = '*'	marker = '*'
表データ <A> 中に存在する <B> を NaN に置き換えて、 <A> とする	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
同じ軸のセットで <A> 表データの列 <B> と表データ <A> の <C> 列と <A> 表データの <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> のカラム <B> の未入力の値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
データフレーム <A> と表データ <B> を縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
データフレームとしてファイル名 <B> を <C> 区切りで読んで、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> 内の <B> 列に重複がある行を消し、再代入する	<A> = <A> . drop_duplicates ( subset = <B> )	encoding = <A> . drop_duplicates ( subset = <B> )
表 <A> 中の未入力の値を削除し、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<A> コラムと <B> コラムに重複はあるのかどうか確認	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
データフレーム <A> 内で重複している行の数を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> と <B> の折れ線グラフを RGBc で描写する	plt . plot ( <A> , <B> , color = c )	plt . plot ( <A> , <B> , color = c )
<A> の中の未入力の値の個数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> のコラム <B> と <C> コラムとコラム <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 全体を <B> カラムの値を軸に並び替えて、インプレースする	<A> . sort_values ( <B> , inplace = True )	'words' <A> . sort_values ( <B> , inplace = True )
表データ <A> 内の <B> を未入力の値に置換し、未入力の値がある行をドロップして、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
表 <A> のカラム <B> と <C> を確認する	<A> [ [ <B> , <C> ] ]	fillchar [ <A> , <B> , <C> ] ]
表 <A> をインデックスでソートして、置き換える	<A> = <A> . sort_index ( )	df . sort_index ( inplace = True )
そこで、最適化手法は <A> にする	solver = <A>	solver = <A>
データフレーム <B> 全体を <C> コラムを軸にソートを <A> に代入する	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<A> 全体を表属性 <B> を軸にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
同じグラフ内でデータフレーム <A> のコラム <B> とデータフレーム <A> のコラム <C> とデータフレーム <A> のコラム <D> を箱髭図で表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、 <A> で埋める	fillchar = <A>	buffering = <A>
<A> の <B> 位置の名前を <C> に変更して、 <A> とする	<A> = <A> . rename ( index = { <B> : <C> } )	<A> = <A> . rename ( index = { <B> : <C> } )
列番号 <B> を位置として、ファイルパス <A> を読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
<A> 内の重複する行を消し、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表属性 <A> と <B> 表属性を逆順にして、インプレースする	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
表 <B> 中の欠損を <B> データフレームの平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
表データ <B> とデータフレーム <C> に対して、 <D> 列を項目名としてデータを内部結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	<C> <A> = pd . merge ( <B> , <C> , on = <D> )
そこで、ラインスタイルは一点鎖線にする	linestyle = 'dashbot'	activation = 'dashbot'
<A> の <B> コラムとコラム <C> とコラム <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、活性化関数は、ロジスティック関数を用いる	activation = 'logistic'	activation = 'logistic'
列番号 <C> をインデックスに、 <B> パスを読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> 中の欠損を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
同じグラフ内で <A> データフレームコラム <B> とデータフレーム <A> コラム <C> とデータフレーム <A> コラム <D> を箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> 中に存在する <C> を欠損値とし、 <A> に代入する	<A> = <B> . replace ( <C> , np . nan )	x <A> = <B> . replace ( <C> , np . nan )
<A> の <B> 表属性を並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	X = <A> . sort_values ( <B> )
<A> 中の列 <B> と列 <C> に重複は存在するのか確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> を <B> ファイルパスという名前にして CSV ファイルで保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
同じ軸のセットで <A> 表データ <B> 表属性と表データ <A> <C> 表属性と <A> 表データ <D> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> 内の <C> を未入力の値に置換し、未入力の値がある行をドロップし、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
表 <A> の NaN を含む行を削除して、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
そこで、色を赤紫とする	color = 'magenta'	markerfacecolor = 'magenta'
ビン数を <C> 、ビンの名前をリスト <D> として、 <A> 表データの <B> コラムを分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
データフレーム <A> 内の重複している行を消す	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
<A> のカラム <B> と <C> カラムとカラム <D> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表データ <A> の表属性 <B> と表属性 <C> を落とし、置き換える	<A> = <A> . drop ( [ <B> , <C> ] , axis = 1 )	df . drop ( [ <A> , <B> , <C> ] , axis = 1 , inplace = True )
データフレーム <A> の重複を確認を見る	<A> . duplicated ( )	<A> . duplicated ( )
<A> というエクセルファイルのシート名 <B> を読む	pd . read_excel ( <A> , sheet_name = <B> )	pd . read_excel ( <A> , sheet_name = <B> )
<A> の <B> 列と <C> 列の相関係数を表示する	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
<A> と <B> 表データに対して、 <C> コラムをキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
データフレーム ( <A> ) のコラム <C> をグラフの <B> 軸、 <E> コラムをグラフの <D> 軸として、散布図をプロットする	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )	<A> . plot ( kind = 'scatter' , <B> = <C> , <D> = <E> )
データフレーム <A> の列 <B> の名前を <C> に、 <D> 列の名前を <E> にリネームして、置き換える	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
そこで、目印の色は紫色とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
左外部結合で <B> 表データと表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	X = pd . merge ( <A> , <B> , <C> , how = 'left' )
データフレーム <B> のインデックス <C> の名前を <D> に変更し、 <A> にする	<A> = <B> . rename ( index = { <C> : <D> } )	<A> = <B> . rename ( index = { <C> : <D> } )
<A> を縦軸、 <B> をグラフの x 軸として、折れ線グラフを作画する	plt . plot ( <A> , <B> )	<A> . plot ( kind = 'scatter' )
表 <A> の中の <B> カラムに重複がある行を消して、置き換える	<A> . drop_duplicates ( subset = <B> , inplace = True )	encoding = <A> . drop_duplicates ( subset = <B> )
表データ <A> を <B> ファイルパスに書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
ビン数を <D> として、 <B> 表の <C> カラムをビンに含まれる個数が等しくなるようにビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
<D> カラムを項目名として、 <B> 表データと表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
そこで、＊の目印を用いる	marker = '*'	marker = '*'
表データ <A> の <B> 列と表データ <A> の <C> 列と <A> 表データの <D> 列の箱ひげ図を一枚のグラフで作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
インデックスと表属性 <D> をキーとして <B> 表データと表データ <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> 軸ラベルを y 座標につける	plt . ylabel ( <A> )	plt . ylabel ( <A> )
表 <A> の <B> 表属性の未記入の値を <B> 表属性の中央値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
データフレーム <B> の <C> カラムと <D> カラムを大きい順に並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	range = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
データフレーム <A> の表属性 <B> と <A> 表データの <C> 表属性と表データ <A> の表属性 <D> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、活性化は、双曲線正接関数を用いる	activation = 'tanh'	sort_index = 'tanh'
<A> のカラム <B> と <C> カラムの相関を調べる	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
表データ <A> の <B> コラムの欠損値をコラム <B> の平均値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . mean ( ) )
表 <B> と <C> 表データを横方向に一つにまとめ、 <A> に代入する	<A> = pd . merge ( <B> , <C> )	alpha = pd . merge ( <B> , <C> )
表 <A> のそれぞれの行について重複があるかどうかを検出する	<A> . duplicated ( )	<A> . duplicated ( )
表データ <A> の <B> 行目の <C> カラムを得る	<A> . iloc [ <B> ] [ <C> ]	<A> . iloc [ <B> ] [ <C> ]
表データ <A> の <B> を欠損に置換し、欠損が存在する行をドロップし、置き換える	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
<A> の <B> 表属性の名前を <C> にリネームし、再代入する	<A> = <A> . rename ( columns = { <B> : <C> } )	<A> = <A> . rename ( columns = { <B> : <C> } )
データフレーム <A> 中の列 <B> と列 <C> に重複はあるのかどうか調べる	<A> . duplicated ( subset = [ <B> , <C> ] )	<C> <A> . duplicated ( subset = [ <B> , <C> ] )
<A> の <B> コラムについての箱ひげ図を描く	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
新しいカラムを <A> 表に追加し、 <B> とする	<A> [ <B> ] = [ 0 ] * len ( <A> )	<A> [ <B> ] = [ 0 ] * len ( <A> )
<A> 中の欠損をデータフレーム <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	'words' <A> . fillna ( <A> . mean ( ) )
表 <A> の元のインデックスを振り直し、インプレースする	<A> . reset_index ( drop = True , inplace = True )	<A> . reset_index ( drop = True , inplace = True )
表 <A> の重複した行数の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> の表属性 <B> の名前を <C> に、 <D> 表属性の名前を <E> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	{ <A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
<A> のカラム <B> と <C> カラムと <D> カラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> カラムごとに <C> カラムの個数を求める	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . count ( )
インデックスと <C> カラムをキーとして表データ <A> と <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> の <B> 表属性と表属性 <C> と表属性 <D> について関係性を一度に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> 中の欠損の数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <A> 中の <B> を NaN に置換し、 NaN が存在する行を落とし、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	replace <A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<C> 番目の列を位置に、 <B> ファイルパスを読み込み、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
表データ <A> の <B> コラムの未記入の値を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
<A> の <B> カラムの中の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
表データ <A> <B> 表属性と <A> データフレーム表属性 <C> と <A> データフレーム表属性 <D> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <B> をインデックスにして、 <A> ファイルを読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
データフレーム <A> と表 <B> に対して、表属性 <C> を項目名としてデータを結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> の表属性 <B> と表属性 <C> を値が大きい順にソート	<A> . sort_values ( [ <B> , <C> ] , ascending = False )	df . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
<B> というエクセルのシート名 <C> からデータフレームを読み込み、 <A> にする	<A> = pd . read_excel ( <B> , sheet_name = <C> )	X = pd . read_excel ( <B> , sheet_name = <C> )
<A> 全体を位置を元に昇順でソート	<A> . sort_index ( )	df . sort_index ( )
データフレーム <A> の列の名前を表示する	<A> . columns	columns
表 <A> の <B> コラムをソートを <A> とする	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<A> ( データフレーム ) の列 <B> を one - hot 表現にする	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
<A> 内の重複している行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表データ <B> 中にある <C> を未記入の値に置換し、 <A> とする	<A> = <B> . replace ( <C> , np . nan )	alpha = <B> . replace ( <C> , np . nan )
データフレーム <A> 内にある <B> を NaN に置換し、インプレースする	<A> . replace ( <B> , np . nan , inplace = True )	df . replace ( <A> , <B> , np . nan , inplace = True )
そこで、文字コードとして <A> を用いる	encoding = <A>	encoding = <A>
表 <A> 中のそれぞれのカラムに存在する <B> の個数の合計値を確認する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
重複する最後の行を残して <A> ( データフレーム ) の重複する行を削除して、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	<A> . drop_duplicates ( keep = False , inplace = True )
表 <A> のコラム <B> をダミー変数化する	pd . get_dummies ( <A> [ <B> ] )	pd . get_dummies ( <A> [ <B> ] )
表 <A> 内の <B> を未入力の値に置換し、未入力の値がある行をドロップして、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> から <B> という名前のエクセルファイルに変換する	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
<A> の <B> コラムが <C> 以上のデータを得る	<A> [ <A> [ <B> ] >= <C> ]	<A> [ <A> [ <B> ] >= <C> ]
表 <A> コラム <B> と表 <A> <C> コラムと表 <A> <D> コラムについての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
横軸を <A> として、 <B> の縦棒グラフを作図する	plt . barh ( <A> , <B> )	plt . barh ( <A> , <B> )
データフレーム ( <A> ) をカラム <B> ごとにグループ化し繰り返し	for i , df in enumerate ( <A> . groupby ( <B> ) ) :	for i , df in enumerate ( <A> . groupby ( <B> ) ) :
インデックスと <D> カラムをキーとして <B> データフレームと <C> データフレームを一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
<A> ファイル名から <B> 区切りで表を読み込む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
<B> 中の欠損値を含む行をドロップして、 <A> にする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
データフレーム <A> の振り直して、元のインデックスを削除する	<A> . reset_index ( drop = True )	marker = <A> . reset_index ( drop = True )
そこで、目印はバツ印とする	marker = 'x'	marker = 'x'
表 <A> をカラム <B> を元に昇順で並び替えて、 <A> にする	<A> = <A> . sort_values ( <B> )	start <A> = <B> . sort_values ( <B> )
<A> の <B> 行目を消す	<A> . drop ( <B> )	X <A> = <A> . drop ( <B> )
<B> と表データ <C> を縦向きに一つにまとめて、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表データ <B> 全体を <C> カラムの値を元に昇順でソートし、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
<B> の <C> を欠損に置換し、欠損が存在する行を削除し、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
ファイルパス <B> に表データ <A> を BOM 付きで保存する	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )	<A> . to_csv ( <B> , encoding = 'utf_8_sig' )
インデックスと <D> コラムをキーとして表 <B> と表 <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <D> )
そこで、折れ線グラフをする	kind = 'line'	kind = 'line'
データフレーム <A> のコラム <B> を位置とし、置き換える	<A> = <A> . set_index ( <B> )	<A> . set_index ( <B> , inplace = True )
データフレーム <B> の中の <C> を NaN に置換し、 NaN がある行を削除して、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
<A> をインデックスなしでファイル <B> に書き出す	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
表データ <A> のコラム <B> と <C> コラムの相関を表示する	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
表 <A> 中にある <B> を NaN に置換する	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
表 <A> をインデックスを元に並び替える	<A> . sort_index ( )	X . sort_index ( )
表データ <A> の '名前' 列を全て <B> ( 文字列 ) にする	<A> [ '性別' ] = [ <B> ] * len ( <A> )	fillchar = <A> [ <B> ] * len ( <A> )
<A> 中の重複している行を落として、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
<B> ( データフレーム ) のコラム <C> を小さい順にソートして、 <A> にする	<A> = <B> . sort_values ( <C> )	<B> <A> = <C> . sort_values ( <C> )
表データ <A> 全体を <B> 表属性の値を軸に並び替えて、置き換える	<A> . sort_values ( <B> , inplace = True )	sort_index = <A> . sort_values ( <B> )
表 <A> の <B> カラムをグループ化して、値ごとのデータ数を計算する	<A> . groupby ( <B> ) . size ( )	df . groupby ( <A> , <B> ) . size ( )
表データ <A> と <B> 表をマージする	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
そこで、グラフの種類としてカーネル密度推定図を用いる	kind = 'kde'	kind = 'kde'
表データ <A> から重複する値がある行を削除して、インプレースする	<A> . drop_duplicates ( inplace = True )	'words' <A> . drop_duplicates ( inplace = True )
表 <A> の列 <D> について、列 <B> を位置、列 <C> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
表 <A> のコラム <B> ごとに <C> コラムの平均値	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )	<A> . groupby ( [ <B> ] ) [ <C> ] . mean ( )
データフレーム <B> 内の欠損値を直前の行の値で埋めて、 <A> にする	<A> = <B> . fillna ( method = 'ffill' )	<A> = <B> . fillna ( method = 'ffill' )
同じグラフ内で <A> 表データの <B> 列と <A> 表データの列 <C> と表データ <A> の列 <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ビン数を <C> 、ビンの名前を <D> リストとして、 <A> データフレームのカラム <B> を分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表 <A> 中で重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> の <B> 表属性と <C> 表属性と <D> 表属性の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> カラムを並び替える	df . sort_values ( <A> )	df . sort_values ( <A> )
エクセル <A> のシート全てをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
一番左の列を位置に設定して、 <A> ファイル名から読む	pd . read_csv ( <A> , index_col = 0 )	read_csv pd . read_csv ( <A> , index_col = 0 )
データフレーム <A> の元の位置をリセットして、インプレースする	<A> . reset_index ( drop = True , inplace = True )	<A> . reset_index ( drop = True , inplace = True )
表 <A> を <B> コラムの値に基づいてソートし、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
<A> の表属性 <B> を柱状グラフでプロットする	plt . hist ( <A> [ <B> ] )	hist plt . hist ( <A> [ <B> ] )
表 <A> の <C> カラムの日にちを確認し、  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . day	<A> [ <B> ] = <A> [ <C> ] . dt . day
表データ <A> の <B> 表属性についての分散を得る	<A> [ <B> ] . var ( )	plt . var ( <A> [ <B> ] )
データフレーム <A> に存在する <B> を欠損として、インプレースする	<A> . replace ( <B> , np . nan , inplace = True )	df . replace ( <A> , <B> , np . nan , inplace = True )
そこで、目印のエッジ色は赤色を使う	markeredgecolor = 'red'	markeredgecolor = 'red'
表 <A> の <B> 列と表データ <A> の列 <C> と <A> 表データの列 <D> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行をドロップし、 <A> にする	<A> = <A> . drop_duplicates ( keep = False )	y <A> = <A> . drop_duplicates ( keep = False )
表 df の <A> コラムのデータをひとつずつ繰り返す	for name in data [ <A> ] :	for name in data [ <A> ] :
表 <A> の <D> カラムについて、 <B> カラムを位置、 <C> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )	<A> . pivot_table ( index = <B> , columns = <C> , values = <D> )
ビン数を <C> として、 <A> 表の <B> 列を分割する	pd . cut ( <A> [ <B> ] , <C> )	pd . cut ( <A> [ <B> ] , <C> )
データフレーム <A> と <B> 表を縦方向に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<B> 番目の列を位置に設定して、ファイル名 <A> をデータフレームとして読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
表 <A> 内の重複を調べる	<A> . duplicated ( )	X . duplicated ( )
左側のデータの位置と右側のデータの表属性 <C> をキーとして、 <A> 表と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム df の表属性 <A> のデータ列をひとつずつ繰り返す	for name in data [ <A> ] :	for name in data [ <A> ] :
データフレーム <A> と表 <B> を縦に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <B> 全体を <C> コラムを軸に並び替え、 <A> とする	<A> = <B> . sort_values ( <C> )	<B> = <C> . sort_values ( <C> )
カンマ区切りで <B> を読み、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
そこで、マーカーの種類の色をグレーとする	markerfacecolor = 'gray'	markerfacecolor = 'gray'
データフレーム <A> 中に重複があるのかどうか確認を確認する	<A> . duplicated ( )	<A> . duplicated ( )
<A> の NaN の個数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
同じ軸のセットで表 <A> カラム <B> と表 <A> カラム <C> と <A> 表 <D> カラムを箱ひげ図で作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、折れ線グラフを用いる	kind = 'line'	kind = 'line'
<A> のカラム名を <B> から <C> に、 <D> から <E> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )	plt . rename ( <A> , columns = { <B> : <C> , <D> : <E> } )
そこで、マーカーの形を六角形とする	marker = 'h'	marker = 'h'
表属性 <B> と表属性 <C> を逆順に並び替えて、 <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	X = df . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> 内のカラム <B> に重複があるか否か	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
分割数を <D> 、ビンの名前を <E> リストとして、 <B> データフレームのコラム <C> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	X = pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> を one - hot 表現に変換し、 <A> とする	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
<A> を y 座標、 <B> を x 軸として、散布図を描く	plt . scatter ( <A> , <B> )	<A> . scatter ( <B> )
データフレーム <A> の <B> カラムの曜日	<A> [ <B> ] . dt . weekday_name	<A> [ <B> ] . dt . weekday_name
<A> の <B> コラムを日付型に変換する	pd . to_datetime ( <A> [ <B> ] )	to_datetime pd . to_datetime ( <A> [ <B> ] )
データフレーム <B> の中の NaN がある行を削除して、 <A> にする	<A> = <B> . dropna ( )	alpha = <B> . dropna ( )
<A> という軸ラベルを y 軸に付ける	plt . ylabel ( <A> )	plt . ylabel ( <A> )
円グラフを真円にする	plt . axis ( 'equal' )	sns . axis ( 'equal' )
データフレーム <A> 中の NaN を消し、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
データフレーム <A> 中の <B> 列に重複があるのかどうか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表データを CSV ファイル <B> から読み込み、 <A> にする	<A> = pd . read_csv ( <B> )	<A> = pd . read_csv ( <B> )
<A> と表 <B> に対して、 <C> コラムをキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
<A> の <B> 列と <A> 表の <C> 列と <A> 表の <D> 列についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> をインデックスを元に昇順でソートを <A> にする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
そこで、グラフの種類は、折れ線グラフを用いる	kind = 'line'	kind = 'line'
データフレーム <B> 内の重複した行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	start = <B> . drop_duplicates ( )
表データ <A> 内のそれぞれのカラムにある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
<A> をコラム <B> の値を元に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
ファイル名 <B> に表 <A> を書き出す	<A> . to_csv ( <B> )	to_csv <A> . to_csv ( <B> )
データフレーム <A> を <B> カラムの値を軸にソートし、置き換える	<A> . sort_values ( <B> , inplace = True )	<A> . sort_values ( <B> , inplace = True )
表 <B> 内に存在する <C> を未記入の値に置き換えて、 <A> にする	<A> = <B> . replace ( <C> , np . nan )	= <B> . replace ( <C> , np . nan )
データフレーム <A> 内の重複している行を消して、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
そこで、六角ビニングを使う	kind = 'hexbin'	kind = 'hexbin'
表 <A> 内の NaN を落として、 <A> とする	<A> = <A> . dropna ( )	dropna <A> = <A> . dropna ( )
<A> を <B> 列で並び替え、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
<A> を列 <B> の値を元に昇順で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> の <B> 列と列 <C> に重複は存在するのか表示してみる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
カラム <B> とカラム <C> を降順にソートを <A> にする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	plt . sort_values ( [ <A> , <B> , <C> ] , ascending = False )
データフレーム <B> と表 <C> を縦にくっつけ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表 <A> の欠損が存在する行を落として、再代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <A> 内の未記入の値を <B> に置換し、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
そこで、マーカーは星をする	marker = '*'	marker = '*'
<A> ( データフレーム ) のカラム <B> を順にし、再代入する	<A> = <A> . sort_values ( <B> )	start = <A> . sort_values ( <B> )
一番左の列を位置に設定して、 <B> ファイルパスを表データに格納して、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表データ <A> の形状	<A> . shape	pd . read_csv ( <A> )
<A> の末尾の 5 行を表示する	<A> . tail ( )	<A> . tail ( )
<A> の <B> コラムを削除	<A> . drop ( <B> , axis = 1 )	df1 <A> . drop ( <B> , axis = 1 )
リスト <A> から新しい表を作成する	pd . DataFrame ( { 'words' : <A> } )	'words' pd . DataFrame ( { 'words' : <A> } )
データフレーム <B> と <C> 表データを縦向きにくっつけ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	X = pd . concat ( [ <B> , <C> ] )
表 <A> のカラム <B> を位置として設定する	<A> . set_index ( <B> )	<A> . set_index ( <B> )
表データ <A> において、カラム <B> と <C> と <D> の関係性を一度に作図する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	pairplot . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
データフレーム <A> 内に重複があるか見る	<A> . duplicated ( )	<A> . duplicated ( )
ビン数を <C> 、ビンのラベルを <D> リストとして、 <A> データフレームの <B> カラムをビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = <D> )	cut pd . cut ( <A> [ <B> ] , <C> , label = <D> )
表 <A> の <B> を NaN に置換し、 NaN がある行を消し、再代入する	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<A> 列に重複は存在するのか調べる	df . duplicated ( subset = <A> )	X df . duplicated ( subset = <A> )
データフレーム <A> の <B> コラムをインデックスに設定し、インプレースする	<A> . set_index ( <B> , inplace = True )	'words' <A> . set_index ( <B> , inplace = True )
表データ <A> 内の欠損値を <A> 表データの平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	df = <A> . fillna ( <A> . mean ( ) )
表データ <A> のコラム <B> とデータフレーム <A> のコラム <C> とデータフレーム <A> のコラム <D> の箱髭図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> についての平均値	<A> [ <B> ] . mean ( )	'words' <A> [ <B> ] . mean ( )
カンマ区切りでファイル名 <A> からデータフレームを読む	pd . read_csv ( <A> , sep = ',' )	pd . read_csv ( <A> , sep = ',' )
データフレーム <A> 中の未入力の値が存在する行を削除を <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<B> の欠損を <B> 表の平均値で埋めて、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
新しい表属性を <A> 表データに追加し、名前を <B> とする	<A> [ <B> ] = [ 0 ] * len ( <A> )	plt . boxplot ( <A> [ <B> ] )
そこで、グラフ種類としてカーネル密度推定図を使用する	kind = 'kde'	kind = 'kde'
同じ軸のセットで <A> 表の <B> コラムとコラム <C> と <D> コラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> コラムと <B> コラムを値が大きい順にして、インプレースする	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
表データ <A> 中のコラム <B> と <C> コラムに重複があるのかどうかチェックを確認する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> のコラム <B> の時間を確認する	<A> [ <B> ] . dt . hour	<A> [ <B> ] . dt . hour
エクセルデータ <B> を表に格納して、 <A> とする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> , sheet_name = None )
同じ軸のセットで表データ <A> <B> 列と表データ <A> 列 <C> と <A> 表データ <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> の <B> コラムについてのボックスチャートを描画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
ビン数を <C> として、 <A> 表のカラム <B> を要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	qcut pd . qcut ( <A> [ <B> ] , <C> )
<A> 内に重複が存在するのか確認を調べる	<A> . duplicated ( )	<A> . duplicated ( )
列番号 <C> を位置にして、 <B> ファイルパスをデータフレームに格納して、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
一番左の列を位置として、ファイル名 <B> から読み込み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表データ <A> のコラム <C> の年を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . dt . year	<A> [ <B> ] = <A> [ <C> ] . dt . year
左側のデータフレームに合わせてデータをマージし、 <A> にする	<A> = pd . merge ( df1 , df2 , how = 'left' )	df1 <A> = pd . read_csv ( df1 , df2 , how = 'left' )
<B> のインデックスを軸に並び替えて、 <A> とする	<A> = <B> . sort_index ( )	sort_index = <B> . sort_index ( )
データフレーム <A> 中のコラム <B> に重複はあるのかどうか調べる	<A> . duplicated ( subset = <B> )	markeredgecolor = <A> . duplicated ( subset = <B> )
列番号 <C> を位置として、 <B> ファイルパスを読み込み、 <A> に代入する	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
データフレーム <B> のカラム <E> について、 <C> カラムを位置、 <D> カラムをカラムとしたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <C> , columns = <D> , values = <E> )	index = <B> , columns = <C> , values = <D> , values = <E> )
データフレーム <A> の未入力の値を <B> として、 <A> とする	<A> = <A> . fillna ( <B> )	X = <A> . fillna ( <B> )
そこで、○のマーカーの種類を用いる	marker = 'o'	marker = 'o'
データフレーム <A> の <B> コラムのそれぞれのデータの出現回数を確認する	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
列番号 <B> を位置に、ファイル <A> から読む	pd . read_csv ( <A> , index_col = <B> )	pd . read_csv ( <A> , index_col = <B> )
左側のデータの位置と右側のデータの列 <C> を項目名として、データフレーム <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	<A> . merge ( <B> , <C> , left_index = True , right_on = <D> )
そこで、マーカーの色を赤色とする	markerfacecolor = 'red'	marker = 'red'
表 <A> 中にある <B> を欠損値とする	<A> . replace ( <B> , np . nan )	<A> . replace ( <B> , np . nan )
同じグラフ内で <A> 表データ列 <B> と <A> 表データ列 <C> と表データ <A> <D> 列を箱髭図で描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 中の NaN を <B> として、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表データ <A> をインデックスを元にソートし、再代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
<A> の <B> カラム中の前後の行の差分	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
そこで、マーカーの形の色は青を用いる	markerfacecolor = 'blue'	markerfacecolor = 'blue'
データフレーム <A> の列 <C> の前後の行の差分を  <A> [ <B> ] とする	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )	<A> [ <B> ] = <A> [ <C> ] . diff ( periods = 1 )
そこで、打点として四角形を使用する	marker = 's'	marker = 's'
<A> の中の欠損値を <B> に置換して、再代入する	<A> = <A> . fillna ( <B> )	'words' <A> = <A> . fillna ( <B> )
分割数を <D> 、ビンのラベルをリスト <E> として、 <B> データフレームのコラム <C> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	df = pd . cut ( <A> [ <B> ] , <C> , label = <D> )
そこで、マーカーの形状の大きさは <A> である	markersize = <A>	hidden_layer_sizes = ( <A> )
コラム <A> という列を消して、置き換える	df = df . drop ( <A> , axis = 1 )	. drop ( <A> , axis = 1 , inplace = True )
表データ <A> の行と列を入れ替える	<A> . T	<A> . T
データフレーム <B> 内の未記入の値を直前の行の値で補い、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	method = <B> . fillna ( method = 'ffill' )
表 <A> のコラム <B> と表データ <A> の <C> コラムと <A> 表データのコラム <D> についての箱ひげ図を作画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> をインデックスを元に昇順でソートして、再代入する	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
<A> の中のカラムに存在する <B> の個数の合計値を調べる	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表 <A> 中の <B> を欠損に置換し、欠損がある行を消し、 <A> とする	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )	<A> = <A> . replace ( <B> , np . nan ) . dropna ( )
<B> 表属性と表属性 <C> を逆順にして、 <A> とする	<A> = <A> . sort_values ( [ <B> , <C> ] , ascending = False )	X = df . sort_values ( [ <B> , <C> ] , ascending = False )
<A> コラムとコラム <B> を値が大きい順に並び替えて、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	X = df . sort_values ( [ <A> , <B> ] , ascending = False )
表 <A> を <B> コラムに基づいてソートして、再代入する	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <A> 内にある <B> を NaN に置き換え、 <A> に代入する	<A> = <A> . replace ( <B> , np . nan )	df = <A> . replace ( <B> , np . nan )
<A> 内に重複はあるかどうか見る	<A> . duplicated ( )	<A> . duplicated ( )
左側のデータのインデックスと右側のデータの <B> コラムをキーとして 2 つのデータを一つにまとめて、 <A> に代入する	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <B> )
ビン数を <C> として、 <A> 表のコラム <B> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . qcut ( <A> [ <B> ] , <C> )
そこで、散布図をグラフ種類にする	kind = 'scatter'	kind = 'scatter'
表 <A> 中の列 <B> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
<A> 全体を表属性 <B> の値を軸にソートを <A> に代入する	<A> = <A> . sort_values ( <B> )	'words' <A> = <A> . sort_values ( <B> )
<B> 表属性という列を削除を <A> にする	<A> = df . drop ( <B> , axis = 1 )	= <A> . drop ( <B> , axis = 1 )
表データ <A> 全体を <B> コラムの値を元に並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表データ <A> 中の欠損値の個数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> <B> 表属性とデータフレーム <A> 表属性 <C> と <A> データフレーム表属性 <D> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、赤紫を目印の色とする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
<B> とデータフレーム <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> )	alpha = pd . merge ( <B> , <C> )
リスト <B> を <C> をコラム名として表にして、 <A> にする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	X = pd . pd . DataFrame ( <B> , columns = <C> )
同じグラフ内で <A> 表データのコラム <B> と <C> コラムとコラム <D> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <A> 内の <B> 表属性と表属性 <C> に重複はあるのかどうか表示する	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> の <B> 表属性についての箱ひげ図を描画する	plt . boxplot ( <A> [ <B> ] )	plt . boxplot ( <A> [ <B> ] )
<A> のカラムそれぞれに存在する <B> の個数	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表 <A> の <B> 表属性と <C> 表属性と <D> 表属性についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
同じ軸のセットで表 <A> の表属性 <B> と表 <A> の表属性 <C> と <A> 表の表属性 <D> を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列 <A> と列 <B> に重複はあるかどうか確認	df . duplicated ( subset = [ <A> , <B> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
そこで、水平棒グラフを用いる	kind = 'barh'	kind = 'barh'
データフレーム <A> の行ごとに重複があるか	<A> . duplicated ( )	<A> . duplicated ( )
<A> コラムを順にソート	df . sort_values ( <A> )	df . sort_values ( <A> )
データフレーム <A> の <B> インデックスの名前を <C> にリネームする	<A> . rename ( index = { <B> : <C> } )	<A> . rename ( index = { <B> : <C> } )
表データ <A> を列 <B> を元に並び替え、インプレースする	<A> . sort_values ( <B> , inplace = True )	for <A> . sort_values ( <B> , inplace = True )
一番左の列をインデックスに設定して、 <B> ファイル名をデータフレームとして読み、 <A> とする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
表 <A> の <B> カラム	<A> [ <B> ]	plt . boxplot ( <A> [ <B> ] )
表 <A> を位置に基づいてソートし、 <A> とする	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
左外部結合で <A> 表データと表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'left' )	pd . merge ( <A> , <B> , how = 'left' )
<A> の <B> 列の NaN を <B> 列の最頻値で補完する	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
表 <B> の欠損値を <C> で埋め、 <A> とする	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
データフレーム <A> の <B> カラムの欠損を <B> カラムの最頻値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )	for <A> [ <B> ] . fillna ( <A> [ <B> ] . mode ( ) )
<A> というエクセルデータ <A> のシート全てをデータフレームに格納する	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表 <A> のカラム <B> をインデックスに設定する	<A> . set_index ( <B> )	<A> . set_index ( <B> )
そこで、目印は六角形を用いる	marker = 'h'	marker = 'h'
<B> 区切りで表データとして <A> ファイルパスを読む	pd . read_csv ( <A> , sep = <B> )	pd . read_csv ( <A> , sep = <B> )
データフレーム <A> を <B> カラムの値を元に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<A> 内の欠損を <B> で埋め、再代入する	<A> = <A> . fillna ( <B> )	= <A> . fillna ( <B> )
<A> において、コラム <B> と <C> と <D> の関係性を一気に描写する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
表 <A> 全体を列 <B> の値を元に昇順でソートして、 <A> にする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <A> 中のカラム <B> とカラム <C> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
表データ <A> の <B> コラムの名前を <C> に、 <D> コラムの名前を <E> に変更する	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } )
表データ <A> 内の列 <B> に重複があるのかどうか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
カラム <A> とカラム <B> を大から小へとし、置き換える	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <A> , <B> ] , ascending = False )
縦軸にラベル <A> を付ける	plt . ylabel ( <A> )	plt . ylabel ( <A> )
<A> 内の欠損値を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> をグラフの y 軸、 <B> を x 座標として、折れ線グラフを表示する	plt . plot ( <A> , <B> )	color = <A> . plot ( <B> )
そこで、マーカーはひし形をする	marker = 'D'	marker = 'D'
<A> 全体をカラム <B> の値を軸に並び替えて、 <A> とする	<A> = <A> . sort_values ( <B> )	X = <A> . sort_values ( <B> )
表 <A> を列 <B> に沿ってソートして、 <A> とする	<A> = <A> . sort_values ( <B> )	start <A> = <B> . sort_values ( <B> )
分割数を <C> として、表 <A> のカラム <B> を要素数が等しくなるように分割する	pd . qcut ( <A> [ <B> ] , <C> )	pd . qcut ( <A> [ <B> ] , <C> )
表データ <A> の列 <B> を昇順に並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
<B> という名前のエクセルファイルのシート全てからデータフレームを読み込んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
<A> を位置で並び替える	<A> . sort_index ( )	<A> . sort_index ( )
<B> 中の重複する行を消し、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
横軸を <A> とした <B> の棒グラフを描く	plt . barh ( <A> , <B> )	. bar ( <A> , <B> )
そこで、区間は <A> にする	bins = <A>	range = ( <A> )
表 <A> の表属性 <B> と表 <A> の <C> 表属性と表 <A> の表属性 <D> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> のコラム <C> と <D> コラムをドロップを <A> にする	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )	<A> = <B> . drop ( [ <C> , <D> ] , axis = 1 )
エクセルファイル <A> の全部のシートを読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表 <A> の中の重複を確認	<A> . duplicated ( )	'words' <A> . duplicated ( )
同じ軸のセットで <A> 表データ表属性 <B> と <A> 表データ <C> 表属性と表データ <A> <D> 表属性を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
リスト <A> を <B> を列名として表に変換する	pd . pd . DataFrame ( <A> , columns = <B> )	. pd . DataFrame ( <A> , columns = <B> )
エクセルデータ <A> をデータフレームとして読む	pd . read_excel ( <A> )	pd . read_csv ( <A> )
<B> というエクセルのシート全てをデータフレームとして読んで、 <A> とする	<A> = pd . read_excel ( <B> , sheet_name = None )	<A> = pd . read_excel ( <B> , sheet_name = None )
そこで、マーカーの形の色を黄緑とする	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
<A> カラムと <B> カラムに重複はあるのかどうか表示してみる	df . duplicated ( subset = [ <A> , <B> ] )	X . duplicated ( subset = [ <A> , <B> ] )
同じ軸のセットで <A> 表の列 <B> と <A> 表の <C> 列と表 <A> の <D> 列を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<B> 中に存在する <C> を未記入の値に置き換え、 <A> に代入する	<A> = <B> . replace ( <C> , np . nan )	= <B> . replace ( <C> , np . nan )
表データを <C> 区切りで <B> ファイルから読んで、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> <B> コラムとデータフレーム <A> コラム <C> とデータフレーム <A> <D> コラムについての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 内の <B> コラムと <C> コラムに重複があるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
フォーマットを指定して、データフレーム <A> の <B> 列を日付型に変換する	pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )	pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )
表データ <A> を位置を元に昇順で並び替えて、インプレースする	<A> . sort_index ( inplace = True )	np <A> . sort_index ( inplace = True )
<B> の未入力の値をデータフレーム <B> の平均値で補い、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
データフレーム <A> 内の重複している行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> 全体を <B> カラムの値に基づいてソートして、インプレースする	<A> . sort_values ( <B> , inplace = True )	X . sort_values ( <A> , <B> , inplace = True )
<A> をダミー変数に変換し、 <A> にする	<A> = pd . get_dummies ( <A> )	X = pd . get_dummies ( <A> )
表データ <A> の <B> 行目を消す	<A> . drop ( <B> )	dropna <A> . drop ( <B> )
列 <B> と <C> 列を値が大きい順にソートを <A> とする	<A> = df . sort_values ( [ <B> , <C> ] , ascending = False )	X = df . sort_values ( [ <B> , <C> ] , ascending = False )
表データ <A> において、全ての要素が <C> の表属性を作り、 <B> とする	<A> [ <B> ] = [ <C> ] * len ( <A> )	<A> [ <B> ] = [ <C> ] * len ( <A> )
データフレーム <A> と <B> データフレームに対して、 <C> 列を項目名としてデータを内部結合する	pd . merge ( <A> , <B> , on = <C> )	pd . merge ( <A> , <B> , on = <C> )
表データ <A> のカラム名を <B> から <C> に、 <D> から <E> に変更し、置き換える	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> = <A> . rename ( columns = { <B> : <C> , <D> : <E> } )
フォーマットを指定して、 <A> 表の <B> 列を日付型に変換する	pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )	pd . to_datetime ( <A> [ <B> ] , format = '%Y-%m-%d' )
そこで、マーカーの種類として四角形を用いる	marker = 's'	marker = 's'
表 <A> の列 <C> に関数 <D> を適用して、 <B> コラムにする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表データ <B> の <C> を欠損に置換し、欠損が存在する行をドロップして、 <A> とする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
インデックスなしでファイルパス <B> に表 <A> を保存する	<A> . to_csv ( <B> , index = False )	<A> . to_csv ( <B> , index = False )
そこで、マーカーの形はバツ印とする	marker = 'x'	marker = 'x'
同じ軸で <A> データフレームの <B> 列と列 <C> と <D> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の列 <B> の欠損を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
一番左の列を位置として、 <B> パスからデータフレームとを読み、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
<C> 区切りでデータフレームを CSV ファイル <B> から読み、 <A> とする	<A> = pd . read_csv ( <B> , sep = <C> )	<A> = pd . read_csv ( <B> , sep = <C> )
<A> の <B> コラムを並び替えて、 <A> に代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
表 <A> の表属性 <B> と表データ <A> の <C> 表属性と表データ <A> の表属性 <D> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の <B> コラムとコラム <C> とコラム <D> について関係性を一気に表示する	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )	sns . pairplot ( <A> [ [ <B> , <C> , <D> ] ] )
<A> の列 <B> を落とし、再代入する	<A> = <A> . drop ( <B> , axis = 1 )	encoding = <A> . drop ( <B> , axis = 1 )
<A> <B> コラムと表 <A> コラム <C> と <A> 表 <D> コラムの箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> 内の重複する行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> の <C> 表属性に <D> 関数を適用して、コラム <B> にする	<A> [ <B> ] = <A> [ <C> ] . map ( <D> )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <B> 内の列 <C> に重複がある行を落として、 <A> にする	<A> = <B> . drop_duplicates ( subset = <C> )	<A> = <B> . drop_duplicates ( subset = <C> )
<A> のヒストグラムを <B> から <C> の間で描画する	plt . hist ( <A> , range = ( <B> , <C> ) )	hist plt . hist ( <A> , range = ( <B> , <C> ) )
データフレーム <A> のカラム <C> の日にちを  <A> [ <B> ] に代入する	<A> [ <B> ] = <A> [ <C> ] . dt . day	<B> <A> [ <C> ] . dt . day
<A> から重複する行を削除して、インプレースする	<A> . drop_duplicates ( inplace = True )	'words' <A> . drop_duplicates ( inplace = True )
そこで、活性化は、 tanh を使う	activation = 'tanh'	activation = 'tanh'
データフレーム <B> の中の未入力の値をデータフレーム <B> の平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
データフレーム <B> とデータフレーム <C> を縦向きに連結を <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<B> 内の未入力の値がある行を落として、 <A> とする	<A> = <B> . dropna ( )	'words' = <B> . dropna ( )
表 <A> を列 <B> の値に基づいてソートして、再代入する	<A> = <A> . sort_values ( <B> )	<A> = <A> . sort_values ( <B> )
一番左の列をインデックスに、ファイル <B> をデータフレームに格納し、 <A> にする	<A> = pd . read_csv ( <B> , index_col = 0 )	<A> = pd . read_csv ( <B> , index_col = 0 )
データフレーム <A> のカラム <B> とカラム <C> に重複はあるか	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> をファイル名 <B> という名前にして保存する	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
表 <A> についてダミー変数を生成する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表データ <B> 内の重複した行を落として、 <A> とする	<A> = <B> . drop_duplicates ( )	'words' = <B> . drop_duplicates ( )
エクセルデータ <B> からデータフレームに読み込んで、 <A> とする	<A> = pd . read_excel ( <B> )	<A> = pd . read_excel ( <B> )
左側のデータの位置と右側のデータの <C> 表属性を項目名として、表 <A> と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
<A> の全ての列の重複する値がある行を取り除く	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
カラム <D> を項目名として、データフレーム <B> とデータフレーム <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <D> )	X = pd . merge ( <A> , <B> , <C> , on = <D> )
カラム <B> という列をドロップし、 <A> にする	<A> = <A> . drop ( <B> , axis = 1 )	X = <A> . drop ( <B> , axis = 1 )
データフレーム <A> 内のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
<A> の <B> 表属性と <A> 表データの <C> 表属性と <A> 表データの <D> 表属性についてのボックスチャートをプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、グラフは水色で表示する	color = 'cyan'	labels = 'cyan'
<A> <B> 列と表データ <A> <C> 列と表データ <A> <D> 列についての箱髭図を描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
列番号 <C> をインデックスと設定して、 <B> ファイルをデータフレームとして読み込んで、 <A> にする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
<A> を表属性 <B> の値で並び替える	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
表 <A> 内で重複している行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> をファイル <B> という名前で CSV ファイルに書き込む	<A> . to_csv ( <B> )	X <A> . to_csv ( <B> )
パス <B> に <A> 表データを書き出す	<A> . to_csv ( <B> )	<A> . to_csv ( <B> )
表 <B> の未入力の値を <B> 表データの平均値で埋めて、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	df = <B> . fillna ( <B> . mean ( ) )
表 <A> をインデックスでソートし、 <A> にする	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
表データ <A> の <B> 列の欠損を <C> で補完する	<A> [ <B> ] . fillna ( <C> )	<A> [ <B> ] . fillna ( <C> )
<A> 表属性と表属性 <B> に重複は存在するのかを調べる	df . duplicated ( subset = [ <A> , <B> ] )	. duplicated ( subset = [ <A> , <B> ] )
グラフの x 軸に <A> という軸ラベルをつける	plt . xlabel ( <A> )	sklearn . xlabel ( <A> )
表 <A> 内の <B> コラムに重複があるならば	if <A> . duplicated ( subset = <B> ) :	duplicated if <A> . duplicated ( subset = <B> ) :
位置と <C> 列をキーとして <A> 表データと <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
データフレーム <A> 内の <B> 列と列 <C> に重複があるならば	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle = <A> . duplicated ( subset = [ <B> , <C> ] ) :
表 <A> を <B> ファイル名という名前で書き出す	<A> . to_csv ( <B> )	savefig <A> . to_csv ( <B> )
データフレーム <B> の <C> コラムと <D> コラムを値が大きい順にソートし、 <A> とする	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )	<A> = <B> . sort_values ( [ <C> , <D> ] , ascending = False )
<A> 番まで列が表示できるようにセットする	pd . set_option ( 'display.max_columns' , <A> )	set_option = pd . set_option ( 'display.max_columns' , <A> )
<B> を <C> を表属性名として表データにし、 <A> とする	<A> = pd . pd . DataFrame ( <B> , columns = <C> )	<A> = pd . pd . DataFrame ( <B> , columns = <C> )
そこで、線は破線と点線とする	linestyle = 'dashbot'	activation = 'dashbot'
<B> 表属性という列を削除して、 <A> とする	<A> = df . drop ( <B> , axis = 1 )	X = df . drop ( <B> , axis = 1 )
表 <A> 全体を表属性 <B> を元にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> を位置を元に並び替え、 <A> とする	<A> = <A> . sort_index ( )	df = <A> . sort_index ( )
エクセルファイル <A> をデータフレームとして読み込む	pd . read_excel ( <A> )	pd . read_excel ( <A> , sheet_name = None )
表データ <A> 表属性 <B> とデータフレーム <A> 表属性 <C> とデータフレーム <A> <D> 表属性の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、文字コードをシフト JIS に設定する	encoding = 'shift_jis'	encoding = 'shift_jis'
ビン数を <D> として、 <B> 表データの表属性 <C> を要素数が等しくなるようにビン分割し、 <A> に代入する	<A> = pd . qcut ( <B> [ <C> ] , <D> )	<C> <A> = pd . qcut ( <B> [ <C> ] , <D> )
<A> というエクセルデータのシート全部を読む	pd . read_excel ( <A> , sheet_name = None )	pd . read_excel ( <A> , sheet_name = None )
表データ <A> <B> 列と表 <A> 列 <C> と <A> 表列 <D> のボックスチャートを一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
そこで、打点は菱形にする	marker = 'D'	marker = 'D'
表 <A> カラム <B> とデータフレーム <A> <C> カラムと <A> データフレーム <D> カラムの箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
表 <A> 全体をインデックスを軸にソートする	<A> . sort_index ( )	X . sort_index ( )
分割数を <C> 、ビンのラベルをインデックスとして、 <A> データフレームのコラム <B> をビン分割する	pd . cut ( <A> [ <B> ] , <C> , label = False )	cut pd . cut ( <A> [ <B> ] , <C> , label = False )
列番号 <C> を位置として、 <B> ファイル名をデータフレームに格納し、 <A> とする	<A> = pd . read_csv ( <B> , index_col = <C> )	<A> = pd . read_csv ( <B> , index_col = <C> )
CSV ファイル <B> をカンマ区切りで読んで、 <A> に代入する	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
同じグラフ内で <A> 表のカラム <B> と表 <A> のカラム <C> と <A> 表のカラム <D> を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
ビン数を <D> 、ビンのラベルを <E> リストとして、 <B> 表の表属性 <C> を分割し、 <A> にする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	= pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> の <B> コラムについての度数分布図を表示する	plt . hist ( <A> [ <B> ] )	plt . hist ( <A> [ <B> ] )
<A> の <B> カラムの中の前後の行の差分を算出する	<A> [ <B> ] . diff ( periods = 1 )	<A> [ <B> ] . diff ( periods = 1 )
データフレーム <A> 中の <B> を欠損に置換し、欠損が存在する行を消し、インプレースする	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
表 <A> 中の <B> 列に重複が存在するのか確認する	<A> . duplicated ( subset = <B> )	X <A> . duplicated ( subset = <B> )
表 <A> 全体を <B> 表属性の値を元に並び替えて、置き換える	<A> = <A> . sort_values ( <B> )	df . sort_values ( <B> , inplace = True )
同じグラフ内でデータフレーム <A> の <B> 列とデータフレーム <A> の列 <C> とデータフレーム <A> の <D> 列を箱ひげ図で作図する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
分割数を <D> 、ビンの名前をリスト <E> として、データフレーム <B> の <C> カラムを分割して、 <A> とする	<A> = pd . cut ( <B> [ <C> ] , <D> , label = <E> )	X = pd . cut ( <A> [ <B> ] , <C> , label = <D> )
<A> をダミー変数にする	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表データ <A> の中のカラムそれぞれに存在する <B> の個数を算出する	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
データフレーム <A> 全体を <B> コラムの値を軸にソートして、置き換える	<A> = <A> . sort_values ( <B> )	<A> . sort_values ( <B> , inplace = True )
<A> 中で重複した行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<B> 列を昇順にし、 <A> にする	<A> = <A> . sort_values ( <B> )	<B> <A> = df . sort_values ( <B> )
そこで、黄色をマーカーの色とする	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
表 <A> のそれぞれのカラムにある <B> の個数の合計値	<A> . isin ( [ <B> ] ) . sum ( )	'words' <A> . isin ( [ <B> ] ) . sum ( )
表データ <A> の中の <B> を未記入の値に置換し、未記入の値が存在する行を落として、置き換える	<A> . replace ( <B> , np . nan ) . dropna ( inplace = True )	replace <A> . replace ( <B> , np . nan ) . dropna ( inplace = True )
カンマ区切りで表データを <B> ファイル名から読み込み、 <A> とする	<A> = pd . read_csv ( <B> , sep = ',' )	<A> = pd . read_csv ( <B> , sep = ',' )
左側のデータのインデックスと右側のデータのコラム <C> を項目名として、 <A> 表データと <B> 表データを一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )
配列 <B> を表データに変換して、 <A> にする	<A> = pd . pd . DataFrame ( <B> , columns = [ 'label' ] )	pd . pd . DataFrame ( <A> , columns = <B> )
表データ <A> のデータの性質を見る	<A> . info ( )	info . info ( <A> )
<A> の位置を昇順でソートして、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
そこで、 <A> をビンにする	bins = <A>	range = ( <A> )
<A> カラムと <B> カラムを逆順にし、インプレースする	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )	df . sort_values ( [ <A> , <B> ] , ascending = False , inplace = True )
<B> 中の <C> を未入力の値に置換し、未入力の値がある行を落として、 <A> にする	<A> = <B> . replace ( <C> , np . nan ) . dropna ( )	<B> <A> = <C> . replace ( <C> , np . nan ) . dropna ( )
表 <A> の未入力の値を <A> 表データの平均値で埋める	<A> . fillna ( <A> . mean ( ) )	df . fillna ( <A> . mean ( ) )
表データ <A> の列 <B> と <C> 列に重複はあるのか見る	<A> . duplicated ( subset = [ <B> , <C> ] )	<A> . duplicated ( subset = [ <B> , <C> ] )
<A> 内の <B> コラムとコラム <C> に重複があるとき	if <A> . duplicated ( subset = [ <B> , <C> ] ) :	linestyle = <A> . duplicated ( subset = [ <B> , <C> ] ) :
そこで、六角形のマーカーを表示する	marker = 'h'	marker = 'h'
表 <A> の最初から <B> 行目まで	<A> [ : <B> ]	<A> [ : <B> ]
そこで、ランダムステートは <A> とする	random_state = <A>	bins = <A>
<A> のインデックスを並び替える	<A> . sort_index ( )	<A> . sort_index ( )
<A> の <B> カラムの名前を <C> に、カラム <D> の名前を <E> にリネームして、インプレースする	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )	<A> . rename ( columns = { <B> : <C> , <D> : <E> } , inplace = True )
表データ <A> 内の重複要素がある行を削除する	<A> . drop_duplicates ( )	'words' <A> . drop_duplicates ( )
そこで、マーカーの種類のエッジ色として赤を使う	markeredgecolor = 'red'	markeredgecolor = 'red'
<A> をエクセルファイル <B> に変換する	<A> . to_excel ( <B> )	<A> . to_excel ( <B> )
表データ <A> の '名前' カラムを全て <B> ( 文字列 ) にする	<A> [ '性別' ] = [ <B> ] * len ( <A> )	fillchar = <A> [ <B> ] * len ( <A> )
データフレーム <A> の <B> コラムと <C> コラムの相関係数	<A> [ [ <B> , <C> ] ] . corr ( )	<A> [ [ <B> , <C> ] ] . corr ( )
<A> の列 <B> の欠損を列 <B> の中央値で穴埋めする	<A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )	'words' <A> [ <B> ] . fillna ( <A> [ <B> ] . median ( ) )
データフレーム <A> 全体をカラム <B> の値を元にソートする	<A> . sort_values ( <B> )	<A> . sort_values ( <B> )
データフレーム <A> と表データ <B> を縦に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
同じ軸のセットでデータフレーム <A> の <B> コラムとコラム <C> と <D> コラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> のカラム <B> の <C> 行目を抽出する	<A> [ <B> ] [ <C> ]	markerfacecolor [ <A> [ <B> ] [ <C> ]
表 <A> の <B> 列をインデックス、 <C> 列を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <B> , columns = <C> )	index . pivot_table ( <A> , columns = <B> , values = <C> )
表 <B> 全体を位置に沿ってソートして、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <A> の <B> コラムについての標準偏差を得る	<A> [ <B> ] . std ( )	alpha = <A> [ <B> ] )
位置とコラム <C> を項目名として <A> データフレームとデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <C> )	plt . merge ( <A> , <B> , left_index = True , right_on = <C> )
表データ <A> の <B> 表属性と表データ <A> の表属性 <C> と表データ <A> の表属性 <D> の箱髭図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
<A> を縦軸、 <B> を x 座標として、線グラフを描写する	plt . plot ( <A> , <B> )	color = <A> . plot ( <B> )
ビンの数を <B> として <A> のヒストグラムを描画する	plt . hist ( <A> , bins = <B> )	plt . hist ( <A> , bins = <B> )
カラム <A> という列を消して、インプレースする	df . drop ( <A> , axis = 1 , inplace = True )	X . drop ( <A> , axis = 1 , inplace = True )
データフレーム <A> の <B> コラムと <C> コラムを値が大きい順にソートし、置き換える	<A> . sort_values ( [ <B> , <C> ] , ascending = False , inplace = True )	plt . sort_values ( [ <A> , <B> , <C> ] , ascending = False , inplace = True )
<A> の <B> コラムと <A> 表データのコラム <C> と <A> 表データのコラム <D> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	sns . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
軸ラベル <A> を y 軸に付ける	plt . ylabel ( <A> )	plt . ylabel ( <A> )
グラフの x 軸のラベルを <A> にする	plt . xlabel ( <A> )	plt . xlabel ( <A> )
<A> を度数分布図でプロットする	plt . hist ( <A> )	sklearn . hist ( <A> )
データフレーム <A> の欠損を平均値で穴埋めして置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> 表属性を順にソートする	df . sort_values ( <A> )	sort_values df . sort_values ( <A> )
表データ <A> の表属性 <B> のそれぞれのデータの出現頻度	<A> [ <B> ] . value_counts ( )	plt . value_counts ( <A> [ <B> ] )
同じグラフ内で <A> 表データの <B> コラムと <A> 表データの <C> コラムと <A> 表データのコラム <D> を箱髭図で描画する	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )	plt . boxplot ( [ <A> [ <B> ] , <A> [ <C> ] , <A> [ <D> ] ] )
データフレーム <A> の行の名前	<A> . index	<A> . index
データフレーム <A> の内容を確認する	<A> . head ( )	df . head ( <A> )
データフレーム <A> の <B> 列についての柱状図を表示する	plt . hist ( <A> [ <B> ] )	hist plt . hist ( <A> [ <B> ] )
ビン数を <D> 、ビンの名前を 0 始まりの連番として、データフレーム <B> のカラム <C> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <C> ] , <D> , label = False )	df = pd . cut ( <A> [ <B> ] , <C> , label = False )
列 <A> を並び替え、インプレースする	df . sort_values ( <A> , inplace = True )	df . sort_values ( <A> , inplace = True )
