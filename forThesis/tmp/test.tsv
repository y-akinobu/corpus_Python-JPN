print ( 'Hello World' )	Hello World と表示する
print ( 'Hello World' )	「ハローワールド」と表示する
print ( 'Hello World' )	何か動かす
print ( 'Hello World' )	最初のプログラム
<A> + <B>	<A> 足す <B>
<A> + <B>	<A> に <B> を加算する
<A> + <B>	<A> と <B> の和
<A> + <B> + <C>	<A> 足す <B> 足す <C>
<A> + <B> + <C>	<A> , <B> , <C> の和
<A> -70	<A> から 70 を引く
<A> * <B>	<A> かける <B>
<A> / <B>	<A> を <B> で割る
<A> // <B>	<A> を <B> で割った商
<A> % <B>	<A> を <B> で割った余り
<A> ** <B>	<A> の <B> 乗
<A> + <B>	<A> と <B> を結合する
str ( <A> )	<A> を文字列にする
str ( <A> )	<A> を変換した文字列
X * <A>	"文字列 ""X"" を <A> 回繰り返す"
x = input ( )	ユーザから入力を得る
<A> = input ( )	ユーザが入力した文字列を <A> とする
x = input ( )	入力された文字列
"x = input ( ""X"" )"	X というプロンプトを表示し、ユーザに文字列を入力させる
"x = input ( ""X"" )"	X という問い合わせに対し、ユーザから入力を得る
float ( <A> )	<A> を浮動小数点数にする
float ( <A> )	<A> を変換した浮動小数点数
int ( <A> )	<A> を整数値にする
int ( <A> )	<A> を変換した数値
<A> = int ( input ( ) )	ユーザが入力した数値を <A> とする
x = int ( input ( ) )	入力された数値
<A> = float ( input ( ) )	ユーザが入力した浮動小数点数を <A> とする
x = float ( input ( ) )	入力された浮動小数点数
type ( <A> )	<A> の型
type ( <A> )	<A> の型を確認する
<A> == <B>	<A> と <B> が等しいか
if <A> == <B> :	<A> と <B> が等しいならば
<A> != <B>	<A> と <B> が等しくないか
if <A> != <B> :	もし <A> と <B> が等しくないとき
while <A> != <B> :	<A> と <B> が等しくない間
<A> == <B>	<A> が <B> と等しいかどうか
if <A> == <B> :	<A> が <B> と等しいならば
<A> != <B>	<A> が <B> と等しくないかどうか
if <A> == <B> :	もし <A> が <B> と等しい場合
if <A> == <B> :	<A> が <B> と等しければ
if <A> == <B> :	もし <A> が <B> と等しかったならば
if <A> != <B> :	もし <A> が <B> と等しくなかったなら
<A> == <B>	<A> が <B> か否か
if <A> == <B> :	もし <A> が <B> ならば
<A> != <B>	<A> が <B> でないかどうか
if <A> == <B> :	<A> が <B> とき
if <A> != <B> :	もし <A> が <B> でないとき
while <A> == <B> :	<A> が <B> 間
<A> >  <B>	<A> が <B> より大きいか否か
if <A> >  <B> :	<A> が <B> より大きいならば
not <A> >  <B>	<A> が <B> より大きくないかどうか
if <A> >  <B> :	<A> が <B> より大きければ
if <A> >  <B> :	もし <A> が <B> より大きかった場合
if not <A> >  <B> :	<A> が <B> より大きくなければ
if not <A> >  <B> :	もし <A> が <B> より大きくなかったならば
while <A> >  <B> :	<A> が <B> より大きい間
while not <A> >  <B> :	<A> が <B> より大きくない間
<A> <  <B>	<A> が <B> より小さいか否か
if <A> <  <B> :	<A> が <B> より小さい場合
not <A> <  <B>	<A> が <B> より小さくないか
if <A> <  <B> :	もし <A> が <B> より小さかった場合
if not <A> <  <B> :	<A> が <B> より小さくないならば
if not <A> <  <B> :	もし <A> が <B> より小さくなければ
if not <A> <  <B> :	もし <A> が <B> より小さくなかったとき
<A> >= <B>	<A> が <B> 以上か否か
if <A> >= <B> :	もし <A> が <B> 以上ならば
not <A> >= <B>	<A> が <B> 以上でないか
if <A> >= <B> :	<A> が <B> 以上場合
if not <A> >= <B> :	もし <A> が <B> 以上でない場合
while <A> >= <B> :	<A> が <B> 以上間
while not <A> >= <B> :	<A> が <B> 以上でない間
<A> <= <B>	<A> が <B> 以下か
if <A> <= <B> :	<A> が <B> 以下ならば
not <A> <= <B>	<A> が <B> 以下でないかどうか
if <A> <= <B> :	<A> が <B> 以下場合
if not <A> <= <B> :	<A> が <B> 以下でない場合
while not <A> <= <B> :	<A> が <B> 以下でない間
<A> % 2 == 0	<A> が偶数か否か
if <A> % 2 == 0 :	<A> が偶数ならば
<A> % 2 != 0	<A> が偶数でないか
if <A> % 2 == 0 :	<A> が偶数とき
if <A> % 2 != 0 :	もし <A> が偶数でない場合
while <A> % 2 != 0 :	<A> が偶数でない間
<A> % 2 == 1	<A> が奇数か
if <A> % 2 == 1 :	<A> が奇数のとき
<A> % 2 != 1	<A> が奇数でないかどうか
if <A> % 2 == 1 :	<A> が奇数とき
if <A> % 2 != 1 :	<A> が奇数でない場合
while <A> % 2 == 1 :	<A> が奇数間
while <A> % 2 != 1 :	<A> が奇数でない間
<A> % <B> == 0	<A> が <B> の倍数か否か
if <A> % <B> == 0 :	もし <A> が <B> の倍数ならば
<A> % <B> != 0	<A> が <B> の倍数でないか
if <A> % <B> == 0 :	<A> が <B> の倍数ならば
if <A> % <B> != 0 :	<A> が <B> の倍数でない場合
while <A> % <B> == 0 :	<A> が <B> の倍数間
<A> % <B> == 0	<A> が <B> で割り切れるか
if <A> % <B> == 0 :	<A> が <B> で割り切れる場合
<A> % <B> != 0	<A> が <B> で割り切れないか
if <A> % <B> == 0 :	もし <A> が <B> で割り切れるならば
if <A> % <B> == 0 :	<A> が <B> で割り切れたなら
if <A> % <B> != 0 :	もし <A> が <B> で割り切れないとき
if <A> % <B> != 0 :	もし <A> が <B> で割り切れなければ
if <A> % <B> != 0 :	<A> が <B> で割り切れなかったら
pass	何もしない
pass	パスする
quit ( )	プログラムの実行を途中で終了する
quit ( )	プログラムの実行を中断する
True	真
False	偽
if <A> <  <B> or <A> >= <C> :	もし <A> が <B> 未満、または <C> 以上のとき
if age <  <A> or age >= <B> :	もし <A> 才未満、または <B> 才以上のとき
if <A> <  <B> and <A> >= <C> :	もし <A> が <B> 未満、かつ <C> 以上のとき
weight / ( height / 100 ) ** 2	BMI を求めたい
<A> / ( <B> / 100 ) ** 2	<A> と <B> から BMI
<A> / ( <B> / 100 ) ** 2	<A> と <B> から BMI を計算する
<A> / ( <B> / 100 ) ** 2	身長 <B> と <A> 体重から BMI
<A> / ( <B> / 100 ) ** 2	身長 <B> と <A> 体重から BMI を算出する
random . randint ( 1 , 6 )	サイコロの目
random . randint ( 1 , 6 )	サイコロを振った値
random . randint ( <A> , <B> )	<A> から <B> までの乱数
time . sleep ( <A> )	<A> 秒、プログラムの実行を停止する
time . sleep ( <A> )	<A> 秒、待つ
time . sleep ( <A> )	<A> 秒、止める
while True : pass	無限ループ
while True : pass	とりあえず、繰り返す
for i in range ( 5 ) :	５回、繰り返す
break	繰り返しを中断する
break	繰り返しから抜け出す
continue	繰り返しの先頭に戻る
continue	もう一度、ループする
[ 0 ] * <A>	大きさ <A> の配列
for a in [ <A> , <B> , <C> ] :	リスト [ <A> , <B> , <C> ] の各要素を処理する
for <A> in [ <B> , <C> , <D> ] :	リスト [ <B> , <C> , <D> ] の要素を繰り返すたびに <A> に代入する
<A> . append ( <B> )	リスト <A> の末尾に <B> を追加する
del ( <A> [ <B> ] )	リスト <A> から <B> 番目の要素を削除する
<A> [ start : end ]	<A> の一部分を取り出す
sum ( <A> )	数列 <A> の合計
sum ( <A> )	<A> の総和
sum ( <A> ) / len ( <A> )	<A> の平均値
random . suffle ( <A> )	リスト <A> をシャッフルする
<A> . keys ( )	<A> のキーの一覧を得る
<A> [ <B> ]	辞書 <A> のキー <B> の値
for key in <A> . keys ( ) : value = <A> [ key ]	辞書 <A> に入っているデータを一つずつ処理する
math . ceil ( <A> )	実数 <A> の小数点以下を切り上げる
math . ceil ( <A> )	<A> の小数点以下を切り上げた整数値
<A> in <B>	<B> に <A> が含まれているか否か
if <A> in <B> :	もし <B> に <A> が含まれているならば
<A> not in date	辞書 d にキー <A> が存在しないか
if <A> not in date :	辞書 d にキー <A> が存在しないとき
<A> . strip ( )	文字列 <A> の前後の空白を除去する
<A> . strip ( )	<A> の余分な改行を取り除く
<A> . split ( ',' )	<A> をカンマで区切る
<A> . split ( ',' )	<A> ( 文字列をカンマで分割した文字列のリスト
<A> . split ( <B> )	<A> を <B> で区切る
<A> . split ( <B> )	<A> を <B> で分割した文字列のリスト
sorted ( <A> )	<A> を並べる
sorted ( <A> )	<A> を並べた列
sorted ( <A> , reverse = True )	<A> を降順に整列する
sorted ( <A> , reverse = True )	<A> を降順に並べ変えた列
<A> = <B>	<A> に <B> を入れる
<A> = <B>	<B> を <A> に入れる
<A> = <B>	数値 <A> を <B> とする
<A> = <B>	数値 <A> に <B> を入れる
<A> = <B>	<B> を <A> 数値に入れる
<A> = <B>	<A> イコール <B>
<A> = <B>	数値 <A> イコール <B> とする
<A> ** <B>	<A> の <B> 乗
<A> ** <B>	<A> の <B> 乗を見る
<A> ** <B>	<A> の <B> 乗を計算する
( <A> + <B> - 1 ) // <B>	<A> を <B> で割った結果の切り上げ
( <A> + <B> - 1 ) // <B>	<A> を <B> で割った結果の切り上げを見る
( <A> + <B> - 1 ) // <B>	<A> を <B> で割った結果の切り上げを求める
( <A> + <B> - 1 ) // <B>	<A> 割る <B> を切り上げる
( <A> + <B> - 1 ) // <B>	<A> わる <B> の切り上げ
( <A> + <B> - 1 ) // <B>	<A> わる <B> の切り上げを確認する
( <A> + <B> - 1 ) // <B>	<A> わる <B> の切り上げを計算する
<A> % <B>	<A> を <B> で割った余りを求める
<A> % <B>	<A> を <B> で剰余を求める
<A> % <B>	<A> と <B> の mod を求める
<A> % <B>	<A> と <B> の割り算のあまりを求める
<A> += <B>	<A> を <B> だけ増加させる
<A> += <B>	<A> に <B> を足して代入
<A> += <B>	<A> と <B> を足して代入する
<A> += <B>	<A> たす <B> の値を <A> に代入する
<A> -= <B>	<A> を <B> だけ減少させる
<A> -= <B>	<A> から <B> を引いて代入する
<A> -= <B>	<A> に <A> と <B> を引いて代入
<A> -= <B>	<A> ひく <B> の値を <A> に代入する
abs ( <A> )	<A> の絶対値
abs ( <A> )	<A> の絶対値を確認する
abs ( <A> )	<A> の絶対値を求める
math . sqrt ( <A> )	<A> の平方根
math . sqrt ( <A> )	<A> の平方根を確認する
math . sqrt ( <A> )	<A> の平方根を計算する
math . sqrt ( <A> )	<A> のルート
math . sqrt ( <A> )	<A> のルートを調べる
math . sqrt ( <A> )	<A> のルートを算出する
math . ciel ( <A> )	<A> の切り上げ
math . ciel ( <A> )	<A> の切り上げを確認する
math . ciel ( <A> )	<A> の切り上げを計算する
math . ciel ( <A> )	<A> に最も近い整数に切り上げ
math . ciel ( <A> )	<A> に最も近い整数に切り上げを見る
math . ciel ( <A> )	<A> に最も近い整数に切り上げを求める
math . floor ( <A> )	<A> の切り捨て
math . floor ( <A> )	<A> の切り捨てを見る
math . floor ( <A> )	<A> の切り捨てを計算する
math . floor ( <A> )	<A> に最も近い整数に切り捨て
math . floor ( <A> )	<A> に最も近い整数に切り捨てを調べる
math . floor ( <A> )	<A> に最も近い整数に切り捨てを算出する
math . gcd ( <A> , <B> )	<A> と <B> の最大公約数
math . gcd ( <A> , <B> )	<A> と <B> の最大公約数を表示する
math . gcd ( <A> , <B> )	<A> と <B> の最大公約数を求める
max ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の中で値
max ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の中で値を表示する
max ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の中で値を算出する
max ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の最大値
max ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の最大値を見る
max ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の最大値を計算する
min ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> のうち ] [ 一番小さい値
min ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> のうち ] [ 一番小さい値を見る
min ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> のうち ] [ 一番小さい値を計算する
min ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の最小値
min ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の最小値を確認する
min ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> の最小値を計算する
for i in range ( <A> ) :	以下の処理を <A> 回繰り返す
for <A> in range ( 10 ) :	<A> に 0 から 9 を代入して、次の命令をループする
for <A> in range ( <B> ) :	<A> に <B> を超えない値までの連続した数値を代入して、次の命令をループする
for <A> in range ( 10 ) :	<A> を 0 から 9 まで 1 つずつ取り出しながら繰り返し処理を行う
for i in range ( <A> ) :	繰り返し処理を <A> 回行う
for i in range ( <A> ) :	<A> 回だけ繰り返し処理を行う
for i in range ( len ( <A> ) ) :	以下の処理を <A> の要素数分繰り返す
print ( <A> )	<A> を出力する
print ( <A> )	<A> を表示する
print ( <A> )	<A> を出力する
print ( <A> , end = '' )	改行なしで <A> を出力する
print ( <A> , end = '' )	<A> を改行なしでプリントする
print ( <A> , end = '' )	<A> の出力を改行しないで行う
print ( <A> )	<A> と出力する
print ( 'Hello World' )	「こんにちは世界」と出力する
print ( 'Hello World' )	試しに何か動かす
print ( 'Hello World' )	最初のプログラム
print ( 'Hello World' )	文章を出力する
print ( '{:.5f}' . format ( <A> ) )	<A> の小数点以下 5 桁までをプリントする
print ( '{:.5f}' . format ( <A> ) )	<A> の小数点以下を 5 桁まで出力する
print ( '{:.5f}' . format ( <A> ) )	<A> の小数点以下を 5 桁で揃える
print ( '{:.5f}' . format ( <A> ) )	<A> の小数部を 5 桁で揃える
input ( )	ユーザから入力を得る
<A> = input ( )	ユーザから入力を得、 <A> に代入する
input ( )	入力値を受け付ける
<A> = input ( )	入力値を受け付けて、 <A> に代入する
input ( )	ユーザが入力した文字列
<A> = input ( )	ユーザが入力した文字列を <A> とする
input ( )	ユーザから入力された文字列
<A> = input ( )	ユーザから入力された文字列を <A> とする
input ( )	文字列を入力する
<A> = input ( )	文字列を入力し、 <A> にする
input ( )	データを入力する
<A> = input ( )	データを入力して、 <A> とする
input ( )	ユーザが入力した文字列を取得する
<A> = input ( )	ユーザが入力した文字列を取得して、 <A> に代入する
input ( )	ユーザから入力された文字列を取得する
<A> = input ( )	ユーザから入力された文字列を取得して、 <A> とする
int ( input ( ) )	ユーザが入力した数
  <A> = int ( input ( ) )	ユーザが入力した数を  <A> に代入する
int ( input ( ) )	数値を得る
  <A> = int ( input ( ) )	数値を得て、  <A> にする
int ( input ( ) )	ユーザから入力された整数
  <A> = int ( input ( ) )	ユーザから入力された整数を  <A> とする
int ( input ( ) )	整数値を入力する
  <A> = int ( input ( ) )	整数値を入力し、  <A> とする
int ( input ( ) )	ユーザが入力した数データを取得する
  <A> = int ( input ( ) )	ユーザが入力した数データを取得して、  <A> にする
int ( input ( ) )	ユーザから入力された数値データを取得する
  <A> = int ( input ( ) )	ユーザから入力された数値データを取得し、  <A> にする
list ( input ( ) )	複数の入力値をリストとして得る
  <A> = list ( input ( ) )	複数の入力値をリストとして得て、  <A> に代入する
list ( input ( ) )	ユーザが入力した文字列をリストに格納する
  <A> = list ( input ( ) )	ユーザが入力した文字列をリストに格納して、  <A> にする
list ( input ( ) )	ユーザから入力された文字列をリストに格納する
  <A> = list ( input ( ) )	ユーザから入力された文字列をリストに格納して、  <A> とする
list ( input ( ) )	入力値をリスト型にする
  <A> = list ( input ( ) )	入力値をリスト型にし、  <A> とする
list ( input ( ) )	入力値をリストに変換する
  <A> = list ( input ( ) )	入力値をリストに変換して、  <A> にする
list ( input ( ) )	入力された文字列をリスト化する
  <A> = list ( input ( ) )	入力された文字列をリスト化して、  <A> とする
list ( input ( ) )	ユーザが入力した値をリスト化する
  <A> = list ( input ( ) )	ユーザが入力した値をリスト化して、  <A> に代入する
list ( input ( ) )	ユーザから入力されたデータをリストに変換する
  <A> = list ( input ( ) )	ユーザから入力されたデータをリストに変換して、  <A> とする
list ( input ( ) )	ユーザが入力したデータをリストに変換する
  <A> = list ( input ( ) )	ユーザが入力したデータをリストに変換して、  <A> とする
list ( map ( int , input ( ) . split ( ) ) )	空白で区切って入力された整数をリストとして受け取る
  <A> = list ( map ( int , input ( ) . split ( ) ) )	空白で区切って入力された整数をリストとして受け取り、  <A> とする
list ( map ( int , input ( ) . split ( ) ) )	入力を空白ごとに数値としてリストに格納する
  <A> = list ( map ( int , input ( ) . split ( ) ) )	入力を空白ごとに数値としてリストに格納し、  <A> にする
list ( map ( int , input ( ) . split ( ) ) )	一行から空白で区切って複数の入力値をリストとして得る
  <A> = list ( map ( int , input ( ) . split ( ) ) )	一行から空白で区切って複数の入力値をリストとして得、  <A> とする
list ( map ( int , input ( ) . split ( ) ) )	一行から複数の入力値を空白で区切ってリストに格納する
  <A> = list ( map ( int , input ( ) . split ( ) ) )	一行から複数の入力値を空白で区切ってリストに格納して、  <A> に代入する
list ( map ( int , input ( ) . split ( ) ) )	入力された数値をスペースで区切ってリストとして得る
  <A> = list ( map ( int , input ( ) . split ( ) ) )	入力された数値をスペースで区切ってリストとして得、  <A> にする
list ( map ( int , input ( ) . split ( ) ) )	ユーザが入力した整数値をスペースで区切ってリストとして受け取る
  <A> = list ( map ( int , input ( ) . split ( ) ) )	ユーザが入力した整数値をスペースで区切ってリストとして受け取り、  <A> にする
<A> , <B> , <C> = input ( ) . split ( )	入力された文字列をスペースで分割し、 <A> 、 <B> 、 <C> 代入する
<A> , <B> , <C> = input ( ) . split ( )	スペースごとに入力文字列を受け取り、 <A> 、 <B> 、 <C> 入れる
<A> , <B> , <C> = input ( ) . split ( )	スペースで区切って入力文字列を受け取り、 <A> 、 <B> 、 <C> 代入する
<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	一行で入力された整数を空白で分割し、 <A> 、 <B> 、 <C> とする
<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	スペースで区切って一行で入力された整数を受け取り、 <A> 、 <B> 、 <C> とする
<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	空白ごとに一行で入力された整数を受け取り、 <A> 、 <B> 、 <C> とする
float ( <A> )	<A> を浮動小数点数にする
float ( <A> )	<A> を変換した浮動小数点数
float ( <A> )	<A> を浮動小数点数として取得する
float ( <A> )	<A> を浮動小数点数型に変換する
int ( <A> )	<A> を数値に変換する
int ( <A> )	<A> を変換した数
int ( <A> )	<A> を整数として取得する
int ( <A> )	<A> を整数型に変換する
<A> == <B>	<A> と <B> が等しいかどうか
if <A> == <B> :	<A> と <B> が等しいとき
<A> != <B>	<A> と <B> が等しくないか
if <A> == <B> :	<A> と <B> が等しければ
if <A> != <B> :	<A> と <B> が等しくなければ
while <A> == <B> :	<A> と <B> が等しい間
while <A> != <B> :	<A> と <B> が等しくない間
<A> == <B>	<A> が <B> と等しいか
if <A> == <B> :	<A> が <B> と等しい場合
<A> != <B>	<A> が <B> と等しくないか
if <A> == <B> :	もし <A> が <B> と等しい場合
if <A> == <B> :	<A> が <B> と等しければ
if <A> == <B> :	<A> が <B> と等しかったならば
if <A> != <B> :	<A> が <B> と等しくなければ
while <A> == <B> :	<A> が <B> と等しい間
while <A> != <B> :	<A> が <B> と等しくない間
<A> == <B>	<A> は <B> と等しいか否か
if <A> == <B> :	もし <A> は <B> と等しいならば
<A> != <B>	<A> は <B> と等しくないか
if <A> == <B> :	<A> は <B> と等しいならば
if <A> == <B> :	もし <A> は <B> と等しければ
if <A> != <B> :	<A> は <B> と等しくなければ
while <A> != <B> :	<A> は <B> と等しくない間
<A> == <B>	<A> が <B> か否か
if <A> == <B> :	もし <A> が <B> ならば
<A> != <B>	<A> が <B> でないかどうか
if <A> == <B> :	もし <A> が <B> とき
if <A> != <B> :	<A> が <B> でないとき
while <A> == <B> :	<A> が <B> 間
<A> >  <B>	<A> が <B> より大きいか否か
if <A> >  <B> :	<A> が <B> より大きいとき
not <A> >  <B>	<A> が <B> より大きくないか
if <A> >  <B> :	もし <A> が <B> より大きいとき
if <A> >  <B> :	<A> が <B> より大きければ
if <A> >  <B> :	もし <A> が <B> より大きかったとき
if not <A> >  <B> :	<A> が <B> より大きくなければ
if not <A> >  <B> :	もし <A> が <B> より大きくなかったなら
while <A> >  <B> :	<A> が <B> より大きい間
while not <A> >  <B> :	<A> が <B> より大きくない間
<A> >  <B>	<A> が <B> よりも大きいか否か
if <A> >  <B> :	<A> が <B> よりも大きいならば
not <A> >  <B>	<A> が <B> よりも大きくないかどうか
if <A> >  <B> :	もし <A> が <B> よりも大きければ
if not <A> >  <B> :	<A> が <B> よりも大きくなかった場合
while <A> >  <B> :	<A> が <B> よりも大きい間
<A> <  <B>	<A> が <B> より小さいかどうか
if <A> <  <B> :	<A> が <B> より小さいとき
not <A> <  <B>	<A> が <B> より小さくないか
if <A> <  <B> :	<A> が <B> より小さいならば
if not <A> <  <B> :	<A> が <B> より小さくないならば
if not <A> <  <B> :	もし <A> が <B> より小さくなければ
if not <A> <  <B> :	<A> が <B> より小さくなかったならば
while <A> <  <B> :	<A> が <B> より小さい間
<A> <  <B>	<A> が <B> よりも小さいかどうか
if <A> <  <B> :	もし <A> が <B> よりも小さいならば
not <A> <  <B>	<A> が <B> よりも小さくないかどうか
if <A> <  <B> :	<A> が <B> よりも小さければ
if <A> <  <B> :	もし <A> が <B> よりも小さかった場合
if not <A> <  <B> :	<A> が <B> よりも小さくなかったならば
<A> >= <B>	<A> が <B> 以上か
if <A> >= <B> :	<A> が <B> 以上ならば
not <A> >= <B>	<A> が <B> 以上でないかどうか
if <A> >= <B> :	もし <A> が <B> 以上ならば
if not <A> >= <B> :	<A> が <B> 以上でない場合
while not <A> >= <B> :	<A> が <B> 以上でない間
<A> >= <B>	<A> が <B> 以上であるか
if <A> >= <B> :	<A> が <B> 以上であるとき
not <A> >= <B>	<A> が <B> 以上であるでないか
if <A> >= <B> :	もし <A> が <B> 以上であるならば
if not <A> >= <B> :	<A> が <B> 以上であるでないならば
while <A> >= <B> :	<A> が <B> 以上である間
while not <A> >= <B> :	<A> が <B> 以上であるでない間
<A> <= <B>	<A> が <B> 以降かどうか
if <A> <= <B> :	<A> が <B> 以降のとき
not <A> <= <B>	<A> が <B> 以降でないか
if <A> <= <B> :	<A> が <B> 以降ならば
if not <A> <= <B> :	<A> が <B> 以降でない場合
while <A> <= <B> :	<A> が <B> 以降間
while not <A> <= <B> :	<A> が <B> 以降でない間
<A> <= <B>	<A> が <B> 以下であるか
if <A> <= <B> :	<A> が <B> 以下であるならば
not <A> <= <B>	<A> が <B> 以下であるでないか
if <A> <= <B> :	もし <A> が <B> 以下であるとき
if not <A> <= <B> :	もし <A> が <B> 以下であるでないとき
while not <A> <= <B> :	<A> が <B> 以下であるでない間
<A> % 2 == 0	<A> が偶数か否か
if <A> % 2 == 0 :	<A> が偶数のとき
<A> % 2 != 0	<A> が偶数でないかどうか
if <A> % 2 == 0 :	もし <A> が偶数ならば
if <A> % 2 != 0 :	<A> が偶数でないならば
while <A> % 2 == 0 :	<A> が偶数間
while <A> % 2 != 0 :	<A> が偶数でない間
<A> % 2 == 0	<A> が偶数であるか
if <A> % 2 == 0 :	<A> が偶数であるとき
<A> % 2 != 0	<A> が偶数であるでないか
if <A> % 2 == 0 :	もし <A> が偶数であるとき
if <A> % 2 != 0 :	もし <A> が偶数であるでない場合
while <A> % 2 == 0 :	<A> が偶数である間
while <A> % 2 != 0 :	<A> が偶数であるでない間
<A> % <B> == <C>	<A> が <B> で割った時の余りが <C> であるか否か
if <A> % <B> == <C> :	<A> が <B> で割った時の余りが <C> であるならば
<A> % <B> != <C>	<A> が <B> で割った時の余りが <C> であるでないかどうか
if <A> % <B> == <C> :	<A> が <B> で割った時の余りが <C> であるならば
if <A> % <B> != <C> :	<A> が <B> で割った時の余りが <C> であるでない場合
while <A> % <B> != <C> :	<A> が <B> で割った時の余りが <C> であるでない間
<A> % 2 == 1	<A> が奇数か
if <A> % 2 == 1 :	<A> が奇数のとき
<A> % 2 != 1	<A> が奇数でないか
if <A> % 2 == 1 :	<A> が奇数場合
if <A> % 2 != 1 :	<A> が奇数でないとき
while <A> % 2 == 1 :	<A> が奇数間
while <A> % 2 != 1 :	<A> が奇数でない間
<A> % 2 == 1	<A> が奇数であるか
if <A> % 2 == 1 :	<A> が奇数である場合
<A> % 2 != 1	<A> が奇数であるでないかどうか
if <A> % 2 == 1 :	もし <A> が奇数である場合
if <A> % 2 != 1 :	<A> が奇数であるでないとき
<A> % <B> == <C>	<A> が <B> で割った時の余りが <C> であるか否か
if <A> % <B> == <C> :	<A> が <B> で割った時の余りが <C> であるならば
<A> % <B> != <C>	<A> が <B> で割った時の余りが <C> であるでないかどうか
if <A> % <B> == <C> :	<A> が <B> で割った時の余りが <C> であるならば
if <A> % <B> != <C> :	<A> が <B> で割った時の余りが <C> であるでない場合
while <A> % <B> != <C> :	<A> が <B> で割った時の余りが <C> であるでない間
<A> % <B> == 0	<A> が <B> の倍数か
if <A> % <B> == 0 :	<A> が <B> の倍数の場合
<A> % <B> != 0	<A> が <B> の倍数でないかどうか
if <A> % <B> == 0 :	<A> が <B> の倍数とき
if <A> % <B> != 0 :	もし <A> が <B> の倍数でないとき
<A> % <B> == 0	<A> が <B> で割り切れるか
if <A> % <B> == 0 :	<A> が <B> で割り切れるとき
<A> % <B> != 0	<A> が <B> で割り切れないか
if <A> % <B> == 0 :	<A> が <B> で割り切れれば
if <A> % <B> == 0 :	もし <A> が <B> で割り切れたならば
while <A> % <B> == 0 :	<A> が <B> で割り切れる間
pass	何もしない
pass	何も行わない
pass	パスする
break	抜ける
break	ループを終了する
break	ループを抜ける
break	ループ処理から抜ける
break	ループ文を抜け出す
break	ループから抜け出す
break	繰り返し処理を終了する
break	繰り返し処理から抜ける
if <A> <  <B> or <A> >= <C> :	もし <A> が <B> 未満、または <C> 以上のとき
if age <  <A> or age >= <B> :	もし <A> 才未満、または <B> 才以上のとき
if <A> <  <B> and <A> >= <C> :	もし <A> が <B> 未満、かつ <C> 以上のとき
if age <  <A> and age >= <B> :	もし <A> 才未満、かつ <B> 才以上のとき
sorted ( <A> )	<A> を整列する
sorted ( <A> )	<A> を並べ変えた列
sorted ( <A> , reverse = True )	<A> を降順に並べ変える
sorted ( <A> , reverse = True )	<A> を降順にソートした列
<A> [ 0 ]	<A> の最初
<A> [ -1 ]	<A> の末尾の要素
<A> [ start : end ]	<A> の一部分を取り出す
<A> [ <B> : <C> ]	<A> の <B> 番目から <C> 番目の値を取り出す
<A> [ <B> : ]	<A> の <B> 番目から末尾までの要素を取り出す
<A> [ <B> : ]	<A> の <B> 番目以降の要素を取り出す
<A> [ : end ]	<A> の一部分を取り出す
<A> [ : <B> ]	<A> の先頭から <B> 番目の値を取り出す
<A> [ : : -1 ]	<A> の逆順
<A> [ : : -1 ]	<A> 内の要素の順番を逆転する
len ( <A> )	<A> の要素数
len ( <A> )	<A> の要素数を調べる
len ( <A> )	<A> の要素数を算出する
sum ( <A> )	<A> の合計値
sum ( <A> )	<A> の合計値を見る
sum ( <A> )	<A> の合計値を求める
sum ( <A> )	数列 <A> の総和
sum ( <A> )	数列 <A> の総和を確認する
sum ( <A> )	数列 <A> の総和を求める
min ( <A> )	リスト <A> の最小値
min ( <A> )	リスト <A> の最小値を見る
min ( <A> )	リスト <A> の最小値を求める
max ( <A> )	リスト <A> の最大値
max ( <A> )	リスト <A> の最大値を調べる
max ( <A> )	リスト <A> の最大値を計算する
sum ( <A> ) / len ( <A> )	数列 <A> の平均値
sum ( <A> ) / len ( <A> )	数列 <A> の平均値を調べる
sum ( <A> ) / len ( <A> )	数列 <A> の平均値を計算する
range ( <A> )	0 から <A> -1 までの数列
range ( <A> )	0 から <A> -1 の範囲の数列
range ( <A> )	0 から <A> -1 の範囲で 1 ずつ増える数列
range ( <A> )	0 ~ <A> -1 の範囲の数列
range ( <A> )	0 ~ <A> -1 の範囲で 1 ずつ増える数列
range ( <A> )	0 以上 <A> 未満で 1 ずつ増える数列
range ( <A> )	0 以上 <A> 未満の範囲の数列
range ( <A> , <B> + <A> )	<A> から <B> までの数列
range ( <A> , <B> + <A> )	<A> から <B> の範囲の数列
range ( <A> , <B> + <A> )	<A> から <B> の範囲で <A> ずつ増える数列
range ( <A> , <B> + <A> )	<A> ~ <B> の範囲の数列
range ( <A> , <B> + <A> )	<A> ~ <B> の範囲で <A> ずつ増える数列
range ( <A> , <B> + <A> )	<A> 以上 <B> + <A> 未満の範囲で <A> ずつ増える数列
[ ]	空のリストを作る
  <A> = [ ]	空のリストを作って、  <A> とする
<A> . append ( <B> )	リスト <A> に <B> を加える
<A> . append ( <B> )	<A> の末尾に <B> を加える
<A> . append ( <B> )	<B> を追加する要素としてリスト <A> の末尾に値を付加する
<A> . pop ( )	<A> の末尾から要素を取り出す
<A> . pop ( <B> )	<A> の <B> 番目から要素を取り出す
[ <A> for i in range ( <B> ) ]	<B> 個の <A> が含まれるリスト
  <A> = [ <B> for i in range ( <C> ) ]	<C> 個の <B> が含まれるリストを  <A> に代入する
[ i for i in range ( <A> , 101 ) ]	<A> から 100 までの数が並んだリスト
  <A> = [ i for i in range ( <B> , 101 ) ]	<B> から 100 までの数が並んだリストを  <A> とする
[ i for i in range ( <A> , <B> ) ]	<A> 以上 <B> 未満の数が並んだリスト
  <A> = [ i for i in range ( <B> , <C> ) ]	<B> 以上 <C> 未満の数が並んだリストを  <A> にする
<A> . replace ( <B> , <C> )	文字列 <A> 内の <B> を <C> に置き換えた文字列
  <A> = <B> . replace ( <C> , <D> )	文字列 <B> 内の <C> を <D> に置き換えた文字列を  <A> とする
<A> . upper ( )	<A> を英大文字に変換した文字列
  <A> = <B> . upper ( )	<B> を英大文字に変換した文字列を  <A> とする
<A> . upper ( )	文字列 <A> 内の小文字を大文字に変換する
  <A> = <B> . upper ( )	文字列 <B> 内の小文字を大文字に変換し、  <A> とする
<A> . upper ( )	<A> を全て大文字に変換する
  <A> = <B> . upper ( )	<B> を全て大文字に変換して、  <A> にする
<A> . upper ( )	<A> を全て大文字にする
  <A> = <B> . upper ( )	<B> を全て大文字にし、  <A> とする
<A> . upper ( )	文字列 <A> の全ての文字を大文字にする
  <A> = <B> . upper ( )	文字列 <B> の全ての文字を大文字にして、  <A> に代入する
<A> . upper ( )	<A> の全ての英字を大文字にする
  <A> = <B> . upper ( )	<B> の全ての英字を大文字にし、  <A> に代入する
<A> . upper ( )	<A> の英字全てを大文字にする
  <A> = <B> . upper ( )	<B> の英字全てを大文字にし、  <A> とする
<A> . lower ( )	文字列 <A> を英小文字に変換した文字列
  <A> = <B> . lower ( )	文字列 <B> を英小文字に変換した文字列を  <A> とする
<A> . lower ( )	文字列 <A> の中の大文字を小文字に変換する
  <A> = <B> . lower ( )	文字列 <B> の中の大文字を小文字に変換して、  <A> とする
<A> . lower ( )	<A> を全て小文字に変換する
  <A> = <B> . lower ( )	<B> を全て小文字に変換して、  <A> とする
<A> . lower ( )	<A> を全て小文字にする
  <A> = <B> . lower ( )	<B> を全て小文字にして、  <A> にする
<A> . lower ( )	文字列 <A> の全ての英字を小文字に変換する
  <A> = <B> . lower ( )	文字列 <B> の全ての英字を小文字に変換し、  <A> とする
<A> . lower ( )	<A> の全ての文字を小文字にして返す
  <A> = <B> . lower ( )	<B> の全ての文字を小文字にして返して、  <A> とする
<A> . lower ( )	<A> の英字全てを小文字に変換する
  <A> = <B> . lower ( )	<B> の英字全てを小文字に変換し、  <A> にする
list ( <A> )	文字列 <A> の文字リスト
  <A> = list ( <B> )	文字列 <B> の文字リストを  <A> にする
<A> . split ( <B> )	文字列 <A> を <B> で分割した文字列のリスト
  <A> = <B> . split ( <C> )	文字列 <B> を <C> で分割した文字列のリストを  <A> とする
<A> . split ( <B> )	<A> を <B> で分割してリストを返す
  <A> = <B> . split ( <C> )	<B> を <C> で分割してリストを返して、  <A> とする
<A> . split ( <B> )	<B> を区切り文字に指定して <A> を分割してリスト型にする
  <A> = <B> . split ( <C> )	<C> を区切り文字に指定して <B> を分割してリスト型にして、  <A> に代入する
<A> . count ( <B> )	<A> 内の <B> の出現回数
<A> . count ( <B> )	<A> 内の <B> の出現回数を確認する
<A> . count ( <B> )	<A> 内の <B> の登場回数
<A> . count ( <B> )	<A> 内の <B> の登場回数を調べる
<A> . startswith ( <B> )	文字列 <A> が <B> で始まるか
if <A> . startswith ( <B> ) :	もし文字列 <A> が <B> で始まるならば
if <A> . startswith ( <B> ) :	もし文字列 <A> が <B> で始まれば
if <A> . startswith ( <B> ) :	文字列 <A> が <B> で始まったら
<A> . startswith ( <B> )	文字列 <A> の先頭が <B> であるどうか
if <A> . startswith ( <B> ) :	文字列 <A> の先頭が <B> であるどう場合
<A> . endswith ( <B> )	<A> が <B> で終わるかどうか
if <A> . endswith ( <B> ) :	<A> が <B> で終わるとき
if <A> . endswith ( <B> ) :	<A> が <B> で終われば
<A> . endswith ( <B> )	文字列 <A> の末尾が <B> であるどうか
if <A> . endswith ( <B> ) :	文字列 <A> の末尾が <B> であるどうとき
<A> . isupper ( )	文字列 <A> が英大文字か
if <A> . isupper ( ) :	文字列 <A> が英大文字ならば
if <A> . isupper ( ) :	もし文字列 <A> が英大文字ならば
<A> . isupper ( )	<A> 中の全ての文字が英大文字か
if <A> . isupper ( ) :	もし <A> 中の全ての文字が英大文字ならば
if <A> . isupper ( ) :	もし <A> 中の全ての文字が英大文字とき
<A> . isupper ( )	文字列 <A> 中の全ての英字が大文字か否か
if <A> . isupper ( ) :	文字列 <A> 中の全ての英字が大文字のとき
if <A> . isupper ( ) :	文字列 <A> 中の全ての英字が大文字とき
<A> . isupper ( )	文字列 <A> 中の英字全てが大文字か
if <A> . isupper ( ) :	文字列 <A> 中の英字全てが大文字ならば
if <A> . isupper ( ) :	もし文字列 <A> 中の英字全てが大文字とき
<A> . islower ( )	<A> が英小文字か
if <A> . islower ( ) :	<A> が英小文字の場合
if <A> . islower ( ) :	<A> が英小文字場合
<A> . islower ( )	<A> 中の全ての文字が英小文字か否か
if <A> . islower ( ) :	<A> 中の全ての文字が英小文字のとき
if <A> . islower ( ) :	もし <A> 中の全ての文字が英小文字とき
<A> . islower ( )	文字列 <A> 中の全ての英字が小文字か
if <A> . islower ( ) :	文字列 <A> 中の全ての英字が小文字の場合
if <A> . islower ( ) :	もし文字列 <A> 中の全ての英字が小文字ならば
<A> . islower ( )	<A> 中の英字全てが小文字か否か
if <A> . islower ( ) :	もし <A> 中の英字全てが小文字ならば
if <A> . islower ( ) :	もし <A> 中の英字全てが小文字ならば
<A> . isdigit ( )	<A> が数字かどうか
if <A> . isdigit ( ) :	<A> が数字のとき
if <A> . isdigit ( ) :	もし <A> が数字場合
<A> . isdigit ( )	文字列 <A> 中の全ての文字が数字か
if <A> . isdigit ( ) :	文字列 <A> 中の全ての文字が数字ならば
if <A> . isdigit ( ) :	もし文字列 <A> 中の全ての文字が数字とき
<A> . isdigit ( )	<A> 全てが数字かどうか
if <A> . isdigit ( ) :	<A> 全てが数字の場合
if <A> . isdigit ( ) :	もし <A> 全てが数字ならば
<A> . isdigit ( )	文字列 <A> が数字であるか
if <A> . isdigit ( ) :	文字列 <A> が数字である場合
if <A> . isdigit ( ) :	文字列 <A> が数字である場合
