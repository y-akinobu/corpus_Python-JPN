sum = 0	sumに0を代入
sum = 0	sumに0を入れる
sum = 0	0をsumに入れる
sum = 0	0をsumに代入
sum = 0	sumに0を代入する
sum = 0	0をsumに代入する
sum = 0	sumを0とする
sum = 0	sumイコール0
sum = 0	sumイコール0とする
x = y	xにyを代入する
x = y	xにyを代入
x = y	xにyを入れる
x = y	yをxに代入する
x = y	yをxに代入
x = y	yをxに入れる
x = y	yをxに代入する
x = y	xにyを入れる
x = y	xにyを代入する
x = y	yをxに入れる
x = y	yをxに代入
x = y	xにyを代入
x + y	xにyを加えた値
x + y	yをxに加えた値
x + y	xにyを加えた値を計算する
x + y	yをxに加えた値を算出する
x + y	xたすy
x + y	x足すy
x + y	xプラスy
x + y	xたすyを計算する
x + y	x足すyを算出する
x + y	xプラスyを計算する
x + y	xとyの和
x + y	xとyの和を算出する
x - y	xからyを引いた値
x - y	xからyを引いた値を求める
x - y	x引くy
x - y	xマイナスy
x - y	xひくy
x - y	xマイナスyを算出する
x - y	xひくyを算出する
x - y	x引くyを計算する
x - y	xとyの差
x - y	xとyの差を算出する
x * y	xにyをかけた値
x * y	yをxにかけた値
x * y	xにyをかけた値を求める
x * y	yをxにかけた値を算出する
x * y	xかけるy
x * y	x掛けるy
x * y	x掛けるyを計算する
x * y	xかけるyを計算する
x * y	xとyの積
x * y	xとyの積を算出する
x / y	xをyでわった値
x / y	xをyでわった値を計算する
x / y	x割るy
x / y	xわるy
x / y	x割るyを計算する
x / y	xわるyを計算する
x / y	xとyの商
x / y	xとyの商を求める
x / y	y分のx
x / y	y分のxを求める
x // y	xをyでわった値の整数部分
x // y	xをyでわった値の整数部分を求める
x ** 2	xの二乗
x ** 2	xの2乗
x ** 2	xの2乗を計算する
x ** 2	xの二乗を計算する
x % y	xをyで割ったあまり
x % y	xをyで割った余り
x % y	xをyで割ったあまりを算出する
x % y	xをyで割った余りを算出する
x % y	xをyで剰余
x % y	yでxを剰余
x % y	xをyで剰余を求める
x % y	yでxを剰余を算出する
x % y	xとyのmod
x % y	xとyのmodを算出する
x % y	xとyの割り算の余り
x % y	xとyの割り算のあまり
x % y	xとyの割り算の余りを算出する
x % y	xとyの割り算のあまりを求める
(x + y - 1) // y	xをyで割った結果の切り上げ
(x + y - 1) // y	yでxを割った結果の切り上げ
(x + y - 1) // y	xをyでわった結果の切り上げ
(x + y - 1) // y	yでxをわった結果の切り上げ
(x + y - 1) // y	xをyで割った結果の切り上げを計算する
(x + y - 1) // y	xをyでわった結果の切り上げを算出する
(x + y - 1) // y	yでxをわった結果の切り上げを算出する
(x + y - 1) // y	yでxを割った結果の切り上げを計算する
(x + y - 1) // y	x割るyを切り上げる
(x + y - 1) // y	xわるyを切り上げる
(x + y - 1) // y	xわるyの切り上げ
(x + y - 1) // y	x割るyの切り上げ
(x + y - 1) // y	xわるyの切り上げを求める
(x + y - 1) // y	x割るyの切り上げを計算する
(x + y - 1) // y	xをyでわった値を切り上げる
(x + y - 1) // y	xをyで割った値を切り上げる
(x + y - 1) // y	割った値をxをyで切り上げる
(x + y - 1) // y	わった値をyでxを切り上げる
(x + y - 1) // y	yでxをわった値を切り上げる
(x + y - 1) // y	yでxを割った値を切り上げる
(x + y - 1) // y	yで割った値をxを切り上げる
(x + y - 1) // y	割った値をyでxを切り上げる
(x + y - 1) // y	xをわった値をyで切り上げる
(x + y - 1) // y	yでわった値をxを切り上げる
(x + y - 1) // y	わった値をxをyで切り上げる
(x + y - 1) // y	xを割った値をyで切り上げる
x & y	xとyの論理積
x & y	xとyの論理積を求める
x | y	xとyの論理和
x | y	xとyの論理和を計算する
x ^ y	aとyの排他的論理和
x ^ y	aとyの排他的論理和を計算する
x << y	xをyだけシフトした左シフト値
x << y	xをyだけシフトした左シフト値を計算する
x >> y	xをyだけシフトした右シフト値
x >> y	xをyだけシフトした右シフト値を求める
x += y	xをyだけ増加させる
x += y	xをyだけ増やす
x += y	xをyだけ大きくする
x += y	xにyを足して代入する
x += y	yをxに足して代入する
x += y	xにyを足して入れる
x += y	yをxに足して入れる
x += y	yをxに足して代入
x += y	xにyを足して代入
x += y	xとyの値を足してxに代入する
x += y	xとyの値を足してxに代入
x += y	xとyの値を足してxに入れる
x += y	xたすyの値をxに代入する
x += y	xたすyの値をxに入れる
x += y	xたすyの値をxに代入
x += y	x足すyの値をxに代入
x += y	x足すyの値をxに入れる
x += y	x足すyの値をxに代入する
x -= y	xをyだけ減少させる
x -= y	xをyだけ小さくする
x -= y	xをyだけ減らす
x -= y	xからyの値を引いてxに代入する
x -= y	xからyを引いてxに代入
x -= y	xからyの値を引いてxに入れる
x -= y	xからyの値を引いてxに代入
x -= y	xからyを引いてxに入れる
x -= y	xからyを引いてxに代入する
x -= y	x引くyの値をxに代入する
x -= y	xひくyの値をxに代入する
x -= y	xひくyの値をxに代入
x -= y	xひくyの値をxに入れる
x -= y	x引くyの値をxに代入
x -= y	x引くyの値をxに入れる
x *= y	xをy倍にする
x *= y	y倍にxをする
x *= y	xにyをかけた値をxに代入する
x *= y	yをxにかけた値をxに入れる
x *= y	xにxにyをかけた値を代入
x *= y	xにyをxにかけた値を代入する
x *= y	xにyをかけた値をxに入れる
x *= y	xにyをxにかけた値を代入
x *= y	xにyをxにかけた値を入れる
x *= y	yをxにかけた値をxに代入
x *= y	xにyをかけた値をxに代入
x *= y	yをxにかけた値をxに代入する
x *= y	xにxにyをかけた値を代入する
x *= y	xにxにyをかけた値を入れる
x **= y	xをy乗する
x /= y	xをy分の一にする
x //= y	xをy分の一にする
x %= y	xをyで割った余りをxに代入する
x %= y	xにxをyでわったあまりを代入
x %= y	xをyで割った余りをxに入れる
x %= y	xにxをyで割った余りを代入する
x %= y	xをyでわったあまりをxに代入
x %= y	xにxをyでわったあまりを入れる
x %= y	xをyでわったあまりをxに入れる
x %= y	xにxをyで割った余りを入れる
abs(x)	xの絶対値
abs(x)	xの絶対値を求める
complex(x)	xの複素数
complex(x)	xの複素数を計算する
complex(x, y)	xを実部yを虚部とした複素数
complex(x, y)	実部yをxを虚部とした複素数
complex(x, y)	xを実部yを虚部とした複素数を算出する
complex(x, y)	実部yをxを虚部とした複素数を求める
divmod(x, y)	xをyで割ったときの商と剰余の組
divmod(x, y)	xをyでわったときの商とあまりの組
divmod(x, y)	xをyでわったときの商と剰余の組
divmod(x, y)	xをyで割ったときの商と余りの組
divmod(x, y)	xをyで割ったときの商とあまりの組
divmod(x, y)	xをyでわったときの商と余りの組
divmod(x, y)	xをyで割ったときの商とあまりの組を求める
divmod(x, y)	xをyでわったときの商と剰余の組を計算する
divmod(x, y)	xをyで割ったときの商と余りの組を計算する
divmod(x, y)	xをyでわったときの商と余りの組を計算する
divmod(x, y)	xをyでわったときの商とあまりの組を算出する
divmod(x, y)	xをyで割ったときの商と剰余の組を算出する
divmod(x, y)	xとyの商と剰余の組
divmod(x, y)	xとyの商とあまりの組
divmod(x, y)	xとyの商と剰余の組を求める
divmod(x, y)	xとyの商とあまりの組を求める
hash(x)	xのハッシュ値
hash(x)	xのハッシュ値を求める
pow(x, y)	xのy乗
pow(x, y)	xのy乗を計算する
pow(x, y, z)	xのy乗に対するzの剰余
pow(x, y, z)	xのy乗に対するzのあまり
pow(x, y, z)	xのy乗に対するzの剰余を算出する
pow(x, y, z)	xのy乗に対するzのあまりを計算する
pow(x, y, z)	xのy乗をzで割った余り
pow(x, y, z)	xのy乗をzでわったあまり
pow(x, y, z)	xのy乗をzで割った余りを計算する
pow(x, y, z)	xのy乗をzでわったあまりを求める
round(x)	xの小数点を丸めた値
round(x)	xの小数点を丸めた値を求める
round(x)	xの整数値
round(x)	xの整数値を計算する
round(x, 1)	xを小数点第一位までに丸めた値
round(x, 1)	小数点第一位までにxを丸めた値
round(x, 1)	xを小数点第一位までに丸めた値を算出する
round(x, 1)	小数点第一位までにxを丸めた値を算出する
round(x, -1)	xを十の位までに丸めた値
round(x, -1)	十の位までにxを丸めた値
round(x, -1)	xを十の位までに丸めた値を求める
round(x, -1)	十の位までにxを丸めた値を求める
max(x, y, z)	x、y、zの中で一番大きい値
max(x, y, z)	x、y、zのうち最大の値
max(x, y, z)	x、y、zの中でもっとも大きい値
max(x, y, z)	x、y、zのうちもっとも大きい値
max(x, y, z)	x、y、zの中で一番大きい値を算出する
max(x, y, z)	x、y、zのうち最大の値を計算する
max(x, y, z)	x、y、zのうちもっとも大きい値を算出する
max(x, y, z)	x、y、zの中でもっとも大きい値を算出する
max(x, y, z)	x、y、zの最大値
max(x, y, z)	x、y、zの最大値を求める
min(x, y, z)	x、y、zの中で一番小さい値
min(x, y, z)	x、y、zのうち最小の値
min(x, y, z)	x、y、zの中でもっとも小さい値
min(x, y, z)	x、y、zのうちもっとも小さい値
min(x, y, z)	x、y、zの中で一番小さい値を算出する
min(x, y, z)	x、y、zの中でもっとも小さい値を求める
min(x, y, z)	x、y、zのうちもっとも小さい値を求める
min(x, y, z)	x、y、zのうち最小の値を算出する
min(x, y, z)	x、y、zの最小値
min(x, y, z)	x、y、zの最小値を求める
del num	numをデリートする
del num	numを消す
del num	numを削除する
global num	numをグローバル変数とする
nonlocal num	numを非ローカル変数とする
float(x)	xを浮動小数点数に変換する
float(x)	xを浮動小数点数型に直す
float(x)	浮動小数点数にxを置き換える
float(x)	xを浮動小数点数にする
float(x)	xを浮動小数点数型にする
float(x)	xを浮動小数点数に直す
float(x)	浮動小数点数にxを直す
float(x)	xを浮動小数点数に置き換える
float(x)	浮動小数点数にxをする
float(x)	浮動小数点数型にxを変換する
float(x)	浮動小数点数型にxを直す
float(x)	xを浮動小数点数型に置き換える
float(x)	浮動小数点数にxを変換する
float(x)	浮動小数点数型にxをする
float(x)	浮動小数点数型にxを置き換える
float(x)	xを浮動小数点数型に変換する
X = float(x)	xを浮動小数点数型にして、Xにする
X = float(x)	xを浮動小数点数型にされた結果をXにする
X = float(x)	浮動小数点数にxを変換して、Xに代入する
X = float(x)	浮動小数点数にxを変換された結果をXとする
X = float(x)	xを浮動小数点数に直し、Xに代入する
X = float(x)	xを浮動小数点数に直した結果をXに代入する
X = float(x)	浮動小数点数型にxを直して、Xとする
X = float(x)	浮動小数点数型にxを直した結果をXにする
X = float(x)	xを浮動小数点数型に変換し、Xにする
X = float(x)	xを浮動小数点数型に変換した結果をXに代入する
X = float(x)	xを浮動小数点数型に置き換え、Xにする
X = float(x)	xを浮動小数点数型に置き換えた結果をXに代入する
X = float(x)	xを浮動小数点数にして、Xにする
X = float(x)	xを浮動小数点数にした結果をXにする
X = float(x)	浮動小数点数にxを直し、Xとする
X = float(x)	浮動小数点数にxを直した結果をXに代入する
X = float(x)	xを浮動小数点数に置き換え、Xにする
X = float(x)	xを浮動小数点数に置き換えた結果をXとする
X = float(x)	xを浮動小数点数型に直し、Xに代入する
X = float(x)	xを浮動小数点数型に直された結果をXとする
X = float(x)	浮動小数点数にxをして、Xに代入する
X = float(x)	浮動小数点数にxをされた結果をXに代入する
X = float(x)	浮動小数点数にxを置き換えて、Xに代入する
X = float(x)	浮動小数点数にxを置き換えた結果をXとする
X = float(x)	xを浮動小数点数に変換し、Xとする
X = float(x)	xを浮動小数点数に変換した結果をXにする
X = float(x)	浮動小数点数型にxを置き換えて、Xにする
X = float(x)	浮動小数点数型にxを置き換えた結果をXとする
X = float(x)	浮動小数点数型にxを変換し、Xにする
X = float(x)	浮動小数点数型にxを変換された結果をXに代入する
X = float(x)	浮動小数点数型にxをし、Xとする
X = float(x)	浮動小数点数型にxをされた結果をXに代入する
float(x)	xを変換した浮動小数点数
X = float(x)	xを変換した浮動小数点数をXとする
float(x)	xを浮動小数点数型として取得する
float(x)	xを浮動小数点数型として得る
float(x)	浮動小数点数としてxを得る
float(x)	浮動小数点数型としてxを得る
float(x)	xを浮動小数点数として得る
float(x)	xを浮動小数点数として取得する
float(x)	浮動小数点数としてxを取得する
float(x)	浮動小数点数型としてxを取得する
X = float(x)	xを浮動小数点数型として得て、Xにする
X = float(x)	xを浮動小数点数型として得た結果をXとする
X = float(x)	xを浮動小数点数として得、Xにする
X = float(x)	xを浮動小数点数として得られた結果をXに代入する
X = float(x)	浮動小数点数としてxを得て、Xとする
X = float(x)	浮動小数点数としてxを得た結果をXにする
X = float(x)	xを浮動小数点数型として取得して、Xに代入する
X = float(x)	xを浮動小数点数型として取得した結果をXにする
X = float(x)	浮動小数点数としてxを取得し、Xに代入する
X = float(x)	浮動小数点数としてxを取得した結果をXに代入する
X = float(x)	浮動小数点数型としてxを得て、Xとする
X = float(x)	浮動小数点数型としてxを得られた結果をXとする
X = float(x)	xを浮動小数点数として取得し、Xとする
X = float(x)	xを浮動小数点数として取得した結果をXにする
X = float(x)	浮動小数点数型としてxを取得し、Xにする
X = float(x)	浮動小数点数型としてxを取得した結果をXとする
int(x)	xを整数型に直す
int(x)	xを整数に置き換える
int(x)	整数にxをする
int(x)	xを整数型に置き換える
int(x)	xを整数型に変換する
int(x)	整数にxを変換する
int(x)	xを整数に直す
int(x)	整数にxを直す
int(x)	xを整数にする
int(x)	xを整数に変換する
int(x)	整数にxを置き換える
int(x)	整数型にxをする
int(x)	整数型にxを変換する
int(x)	整数型にxを直す
int(x)	xを整数型にする
int(x)	整数型にxを置き換える
X = int(x)	xを整数型に変換して、Xにする
X = int(x)	xを整数型に変換した結果をXに代入する
X = int(x)	xを整数にして、Xにする
X = int(x)	xを整数にされた結果をXにする
X = int(x)	整数にxを置き換え、Xとする
X = int(x)	整数にxを置き換えた結果をXにする
X = int(x)	整数にxを直し、Xとする
X = int(x)	整数にxを直された結果をXとする
X = int(x)	xを整数に置き換え、Xとする
X = int(x)	xを整数に置き換えた結果をXにする
X = int(x)	xを整数型にして、Xとする
X = int(x)	xを整数型にした結果をXとする
X = int(x)	整数にxをして、Xに代入する
X = int(x)	整数にxをされた結果をXに代入する
X = int(x)	xを整数型に置き換えて、Xとする
X = int(x)	xを整数型に置き換えられた結果をXとする
X = int(x)	整数型にxを直し、Xに代入する
X = int(x)	整数型にxを直された結果をXにする
X = int(x)	xを整数に直して、Xにする
X = int(x)	xを整数に直した結果をXに代入する
X = int(x)	xを整数型に直して、Xとする
X = int(x)	xを整数型に直した結果をXとする
X = int(x)	整数にxを変換し、Xにする
X = int(x)	整数にxを変換した結果をXとする
X = int(x)	整数型にxを変換し、Xに代入する
X = int(x)	整数型にxを変換された結果をXに代入する
X = int(x)	整数型にxを置き換え、Xとする
X = int(x)	整数型にxを置き換えられた結果をXにする
X = int(x)	整数型にxをし、Xにする
X = int(x)	整数型にxをした結果をXとする
X = int(x)	xを整数に変換して、Xとする
X = int(x)	xを整数に変換された結果をXとする
int(x)	xを変換した整数
X = int(x)	xを変換した整数をXとする
int(x)	xを整数型として得る
int(x)	整数としてxを得る
int(x)	整数型としてxを得る
int(x)	整数としてxを取得する
int(x)	xを整数として得る
int(x)	整数型としてxを取得する
int(x)	xを整数として取得する
int(x)	xを整数型として取得する
X = int(x)	xを整数型として得、Xに代入する
X = int(x)	xを整数型として得た結果をXとする
X = int(x)	整数型としてxを取得して、Xにする
X = int(x)	整数型としてxを取得した結果をXとする
X = int(x)	xを整数として得て、Xにする
X = int(x)	xを整数として得られた結果をXとする
X = int(x)	xを整数型として取得して、Xとする
X = int(x)	xを整数型として取得した結果をXにする
X = int(x)	整数型としてxを得、Xとする
X = int(x)	整数型としてxを得られた結果をXとする
X = int(x)	xを整数として取得し、Xとする
X = int(x)	xを整数として取得した結果をXとする
X = int(x)	整数としてxを得て、Xに代入する
X = int(x)	整数としてxを得られた結果をXにする
X = int(x)	整数としてxを取得して、Xにする
X = int(x)	整数としてxを取得した結果をXに代入する
str(x)	xを文字列に変換する
str(x)	文字列型にxを置き換える
str(x)	文字列にxを直す
str(x)	xを文字列にする
str(x)	xを文字列型に置き換える
str(x)	文字列型にxをする
str(x)	文字列にxをする
str(x)	xを文字列型に変換する
str(x)	xを文字列に直す
str(x)	文字列型にxを直す
str(x)	文字列にxを変換する
str(x)	xを文字列型にする
str(x)	xを文字列に置き換える
str(x)	文字列にxを置き換える
str(x)	文字列型にxを変換する
str(x)	xを文字列型に直す
X = str(x)	xを文字列型に変換し、Xに代入する
X = str(x)	xを文字列型に変換した結果をXとする
X = str(x)	xを文字列に直し、Xとする
X = str(x)	xを文字列に直された結果をXにする
X = str(x)	xを文字列に変換して、Xに代入する
X = str(x)	xを文字列に変換した結果をXとする
X = str(x)	文字列にxをして、Xとする
X = str(x)	文字列にxをされた結果をXにする
X = str(x)	文字列にxを直し、Xに代入する
X = str(x)	文字列にxを直された結果をXにする
X = str(x)	xを文字列型に直して、Xに代入する
X = str(x)	xを文字列型に直された結果をXとする
X = str(x)	xを文字列にして、Xとする
X = str(x)	xを文字列にした結果をXに代入する
X = str(x)	文字列型にxをして、Xにする
X = str(x)	文字列型にxをした結果をXにする
X = str(x)	xを文字列に置き換えて、Xに代入する
X = str(x)	xを文字列に置き換えた結果をXにする
X = str(x)	文字列にxを変換し、Xに代入する
X = str(x)	文字列にxを変換された結果をXに代入する
X = str(x)	xを文字列型に置き換えて、Xに代入する
X = str(x)	xを文字列型に置き換えた結果をXとする
X = str(x)	文字列にxを置き換え、Xに代入する
X = str(x)	文字列にxを置き換えた結果をXにする
X = str(x)	文字列型にxを変換して、Xとする
X = str(x)	文字列型にxを変換された結果をXに代入する
X = str(x)	xを文字列型にし、Xにする
X = str(x)	xを文字列型にした結果をXにする
X = str(x)	文字列型にxを直して、Xにする
X = str(x)	文字列型にxを直した結果をXとする
X = str(x)	文字列型にxを置き換え、Xにする
X = str(x)	文字列型にxを置き換えた結果をXとする
str(x)	xを変換した文字列
X = str(x)	xを変換した文字列をXとする
str(x)	xを文字列型として取得する
str(x)	文字列としてxを取得する
str(x)	文字列型としてxを取得する
str(x)	xを文字列として取得する
str(x)	文字列型としてxを得る
str(x)	文字列としてxを得る
str(x)	xを文字列として得る
str(x)	xを文字列型として得る
X = str(x)	xを文字列型として取得して、Xに代入する
X = str(x)	xを文字列型として取得した結果をXにする
X = str(x)	文字列型としてxを得て、Xにする
X = str(x)	文字列型としてxを得られた結果をXに代入する
X = str(x)	文字列型としてxを取得して、Xとする
X = str(x)	文字列型としてxを取得した結果をXに代入する
X = str(x)	xを文字列として得、Xとする
X = str(x)	xを文字列として得た結果をXとする
X = str(x)	xを文字列型として得て、Xにする
X = str(x)	xを文字列型として得られた結果をXにする
X = str(x)	文字列としてxを得て、Xに代入する
X = str(x)	文字列としてxを得られた結果をXとする
X = str(x)	文字列としてxを取得して、Xに代入する
X = str(x)	文字列としてxを取得した結果をXとする
X = str(x)	xを文字列として取得し、Xに代入する
X = str(x)	xを文字列として取得した結果をXに代入する
list(x)	xのリスト
X = list(x)	xのリストをXにする
list(x)	xをリストに変換する
list(x)	リストにxを置き換える
list(x)	リスト型にxをする
list(x)	xをリストに直す
list(x)	リストにxをする
list(x)	xをリストにする
list(x)	xをリスト型に直す
list(x)	リスト型にxを置き換える
list(x)	xをリストに置き換える
list(x)	リストにxを変換する
list(x)	リストにxを直す
list(x)	リスト型にxを変換する
list(x)	xをリスト型に変換する
list(x)	xをリスト型に置き換える
list(x)	xをリスト型にする
list(x)	リスト型にxを直す
X = list(x)	xをリストに変換し、Xに代入する
X = list(x)	xをリストに変換した結果をXとする
X = list(x)	リスト型にxを直して、Xに代入する
X = list(x)	リスト型にxを直された結果をXにする
X = list(x)	リストにxを直し、Xにする
X = list(x)	リストにxを直した結果をXに代入する
X = list(x)	xをリスト型に置き換えて、Xにする
X = list(x)	xをリスト型に置き換えられた結果をXとする
X = list(x)	xをリスト型に直し、Xとする
X = list(x)	xをリスト型に直した結果をXにする
X = list(x)	リストにxを置き換え、Xに代入する
X = list(x)	リストにxを置き換えられた結果をXに代入する
X = list(x)	xをリストにして、Xにする
X = list(x)	xをリストにされた結果をXとする
X = list(x)	リストにxをし、Xにする
X = list(x)	リストにxをした結果をXにする
X = list(x)	リストにxを変換して、Xとする
X = list(x)	リストにxを変換した結果をXとする
X = list(x)	xをリストに直して、Xにする
X = list(x)	xをリストに直した結果をXに代入する
X = list(x)	リスト型にxを置き換えて、Xにする
X = list(x)	リスト型にxを置き換えられた結果をXに代入する
X = list(x)	xをリストに置き換えて、Xにする
X = list(x)	xをリストに置き換えた結果をXとする
X = list(x)	xをリスト型にし、Xに代入する
X = list(x)	xをリスト型にした結果をXとする
X = list(x)	リスト型にxを変換し、Xとする
X = list(x)	リスト型にxを変換した結果をXにする
X = list(x)	xをリスト型に変換して、Xとする
X = list(x)	xをリスト型に変換された結果をXとする
X = list(x)	リスト型にxをし、Xにする
X = list(x)	リスト型にxをした結果をXに代入する
list(x)	xをリスト型として取得する
list(x)	リストとしてxを得る
list(x)	xをリストとして得る
list(x)	リスト型としてxを得る
list(x)	xをリスト型として得る
list(x)	リスト型としてxを取得する
list(x)	xをリストとして取得する
list(x)	リストとしてxを取得する
X = list(x)	xをリスト型として取得して、Xとする
X = list(x)	xをリスト型として取得した結果をXに代入する
X = list(x)	リスト型としてxを取得し、Xにする
X = list(x)	リスト型としてxを取得した結果をXにする
X = list(x)	リスト型としてxを得、Xにする
X = list(x)	リスト型としてxを得られた結果をXとする
X = list(x)	リストとしてxを得て、Xに代入する
X = list(x)	リストとしてxを得た結果をXに代入する
X = list(x)	xをリストとして得、Xにする
X = list(x)	xをリストとして得た結果をXに代入する
X = list(x)	xをリストとして取得し、Xにする
X = list(x)	xをリストとして取得した結果をXに代入する
X = list(x)	xをリスト型として得、Xにする
X = list(x)	xをリスト型として得た結果をXに代入する
X = list(x)	リストとしてxを取得し、Xに代入する
X = list(x)	リストとしてxを取得された結果をXにする
type(x)	xの型
type(x)	xのタイプ
type(x)	xのタイプを得る
type(x)	xの型を取得する
type(x)	xの型を確認する
type(x)	xのタイプを確認する
a == b	aとbが等しいかどうか
a != b	aとbが等しくないかどうか
if a == b :	もしaとbが等しいならば
if a != b :	aとbが等しくない場合
while a == b :	aとbが等しい間
while a != b :	aとbが等しくない間
a == b	aがbと等しいかどうか
a != b	aがbと等しくないかどうか
if a == b :	もしaがbと等しい場合
if a != b :	aがbと等しくないならば
while a == b :	aがbと等しい間
while a != b :	aがbと等しくない間
a == b	aがbかどうか
a != b	aがbでないかどうか
if a == b :	aがbなら
if a != b :	aがbでないなら
while a == b :	aがbの間
while a != b :	aがbでない間
a > b	aがbより大きいかどうか
not a > b	aがbより大きくないかどうか
if a > b :	aがbより大きい場合
if not a > b :	もしaがbより大きくない場合
while a > b :	aがbより大きい間
while not a > b :	aがbより大きくない間
a > b	aがbよりも大きいかどうか
not a > b	aがbよりも大きくないかどうか
if a > b :	もしaがbよりも大きい場合
if not a > b :	もしaがbよりも大きくないとき
while a > b :	aがbよりも大きい間
while not a > b :	aがbよりも大きくない間
a < b	aがbより小さいかどうか
not a < b	aがbより小さくないかどうか
if a < b :	aがbより小さいとき
if not a < b :	もしaがbより小さくない場合
while a < b :	aがbより小さい間
while not a < b :	aがbより小さくない間
a < b	aがbよりも小さいかどうか
not a < b	aがbよりも小さくないかどうか
if a < b :	もしaがbよりも小さいならば
if not a < b :	aがbよりも小さくないならば
while a < b :	aがbよりも小さい間
while not a < b :	aがbよりも小さくない間
a >= b	aがb以上かどうか
not a >= b	aがb以上でないかどうか
if a >= b :	もしaがb以上の場合
if not a >= b :	もしaがb以上でないなら
while a >= b :	aがb以上の間
while not a >= b :	aがb以上でない間
a <= b	aがb以下かどうか
not a <= b	aがb以下でないかどうか
if a <= b :	aがb以下ならば
if not a <= b :	aがb以下でないなら
while a <= b :	aがb以下の間
while not a <= b :	aがb以下でない間
a % 2 == 0	aが偶数かどうか
a % 2 != 0	aが偶数でないかどうか
if a % 2 == 0 :	もしaが偶数の場合
if a % 2 != 0 :	もしaが偶数でないとき
a % 2 == 0	aが2で割った時の余りが0であるかどうか
a % 2 == 0	aが2でわった時のあまりが0であるかどうか
a % 2 != 0	aが2で割った時の余りが0であるでないかどうか
a % 2 != 0	aが2でわった時のあまりが0であるでないかどうか
if a % 2 == 0 :	もしaが2で割った時の余りが0であるの場合
if a % 2 == 0 :	aが2でわった時のあまりが0であるのとき
if a % 2 != 0 :	aが2で割った時の余りが0であるでないとき
if a % 2 != 0 :	aが2でわった時のあまりが0であるでない場合
a % 2 == 1	aが奇数かどうか
a % 2 != 1	aが奇数でないかどうか
if a % 2 == 1 :	もしaが奇数ならば
if a % 2 != 1 :	aが奇数でないならば
a % 2 == 1	aが2で割った時の余りが1かどうか
a % 2 == 1	aが2でわった時のあまりが1かどうか
a % 2 != 1	aが2で割った時の余りが1でないかどうか
a % 2 != 1	aが2でわった時のあまりが1でないかどうか
if a % 2 == 1 :	aが2で割った時の余りが1のとき
if a % 2 == 1 :	aが2でわった時のあまりが1の場合
if a % 2 != 1 :	もしaが2で割った時の余りが1でないならば
if a % 2 != 1 :	aが2でわった時のあまりが1でないとき
a % n == 0	aがnの倍数かどうか
a % n != 0	aがnの倍数でないかどうか
if a % n == 0 :	もしaがnの倍数なら
if a % n != 0 :	aがnの倍数でないとき
a % n == 0	aがnで割り切れるかどうか
a % n != 0	aがnで割り切れるでないかどうか
if a % n == 0 :	aがnで割り切れるならば
if a % n != 0 :	もしaがnで割り切れるでないなら
a and b	aかつb
not a and b	aかつbでない
if a and b :	aかつbの場合
if not a and b :	もしaかつbでないなら
a or b	aまたはb
not a or b	aまたはbでない
if a or b :	もしaまたはbなら
if not a or b :	もしaまたはbでないならば
not a	aではない
not not a	aではなくない
if not a :	aではないなら
if not not a :	もしaではなくないとき
True	真
False	偽
None	未定値
print()	改行を表示する
print()	改行を出力する
print()	改行をプリントする
print()	空行を出力する
print()	空行を表示する
print()	空行をプリントする
print(sum)	sumをプリントする
print(sum)	sumを出力する
print(sum)	sumを表示する
print(sum, end='')	改行なしでsumをプリントする
print(sum, end='')	改行なしでsumを表示する
print(sum, end='')	改行なしでsumを出力する
print(sum, end='')	sumの出力を改行しないで行う
print(sum, sep='')	区切りなしでsumをプリントする
print(sum, sep='')	区切りなしでsumを表示する
print(sum, sep='')	区切りなしでsumを出力する
print(sum, sep='')	sumの出力を区切らないで行う
print(sum, sep=',')	カンマ区切りでsumをプリントする
print(sum, sep=',')	カンマ区切りでsumを出力する
print(sum, sep=',')	カンマ区切りでsumを表示する
print(sum, sep=',')	','区切りでsumをプリントする
print(sum, sep=',')	','区切りでsumを表示する
print(sum, sep=',')	','区切りでsumを出力する
print(sum, sep=',')	sumの出力をカンマ区切りで行う
print('Hello World')	'Hello World'とプリントする
print('Hello World')	'Hello World'と表示する
print('Hello World')	'Hello World'と出力する
print('Hello World')	「こんにちは世界」とプリントする
print('Hello World')	「こんにちは世界」と表示する
print('Hello World')	「こんにちは世界」と出力する
print('Hello World')	「ハローワールド」と表示する
print('Hello World')	「ハローワールド」とプリントする
print('Hello World')	「ハローワールド」と出力する
print('Hello World')	試しに何か動かす
print('Hello World')	何か動かす
print('Hello World')	最初のプログラム
print('{:.5f}'.format(dist))	distの小数点以下5桁までをプリントする
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下5桁までを表示する
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下5桁までを表示する
print('{:.5f}'.format(dist))	distの小数点以下5桁までを表示する
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下5桁までを出力する
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下5桁までをプリントする
print('{:.5f}'.format(dist))	distの小数点以下5桁までを出力する
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下5桁までをプリントする
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下5桁までを出力する
print('{:.5f}'.format(dist))	distの小数点以下を5桁までプリントする
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下を5桁まで表示する
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下を5桁まで出力する
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下を5桁までプリントする
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下を5桁までプリントする
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下を5桁まで出力する
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下を5桁まで表示する
print('{:.5f}'.format(dist))	distの小数点以下を5桁まで表示する
print('{:.5f}'.format(dist))	distの小数点以下を5桁まで出力する
print('{:.5f}'.format(dist))	distの小数点以下を5桁で揃える
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下を5桁で丸める
print('{:.5f}'.format(dist))	distの小数点以下を5桁で丸める
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下を5桁で丸める
print('{:.5f}'.format(dist))	浮動小数点数distの小数点以下を5桁で揃える
print('{:.5f}'.format(dist))	dist浮動小数点数の小数点以下を5桁で揃える
print('{:.5f}'.format(dist))	distの小数部を5桁で丸める
print('{:.5f}'.format(dist))	dist浮動小数点数の小数部を5桁で揃える
print('{:.5f}'.format(dist))	浮動小数点数distの小数部を5桁で丸める
print('{:.5f}'.format(dist))	dist浮動小数点数の小数部を5桁で丸める
print('{:.5f}'.format(dist))	distの小数部を5桁で揃える
print('{:.5f}'.format(dist))	浮動小数点数distの小数部を5桁で揃える
print(*l)	lを展開してプリントする
print(*l)	リストlを展開して出力する
print(*l)	lリストを展開してプリントする
print(*l)	lリストを展開して表示する
print(*l)	lを展開して表示する
print(*l)	リストlを展開してプリントする
print(*l)	リストlを展開して表示する
print(*l)	lを展開して出力する
print(*l)	lリストを展開して出力する
input()	ユーザから入力を受け取る
X = input()	ユーザから入力を受け取り、Xにする
X = input()	ユーザから入力を受け取った結果をXとする
input()	入力値を得る
input()	入力値を取得する
input()	入力値を受け取る
X = input()	入力値を受け取って、Xに代入する
X = input()	入力値を受け取られた結果をXに代入する
X = input()	入力値を得、Xにする
X = input()	入力値を得た結果をXにする
X = input()	入力値を取得して、Xにする
X = input()	入力値を取得した結果をXとする
input()	ユーザが入力した文字列
X = input()	ユーザが入力した文字列をXとする
input()	ユーザから入力された文字列
X = input()	ユーザから入力された文字列をXにする
input()	入力された文字列
X = input()	入力された文字列をXにする
input()	文字列を入力する
X = input()	文字列を入力し、Xとする
X = input()	文字列を入力した結果をXにする
input()	データを入力する
X = input()	データを入力して、Xにする
X = input()	データを入力した結果をXとする
int(input())	ユーザから入力を数値として受け取る
int(input())	ユーザから入力を数字として得る
int(input())	数値としてユーザから入力を得る
int(input())	数値としてユーザから入力を受け取る
int(input())	ユーザから入力を数値として得る
int(input())	数字としてユーザから入力を得る
int(input())	ユーザから入力を整数値として受け取る
int(input())	ユーザから入力を整数値として得る
int(input())	ユーザから入力を数字として受け取る
int(input())	数字としてユーザから入力を受け取る
int(input())	整数値としてユーザから入力を得る
int(input())	整数値としてユーザから入力を受け取る
X = int(input())	ユーザから入力を数字として受け取り、Xに代入する
X = int(input())	ユーザから入力を数字として受け取った結果をXに代入する
X = int(input())	数字としてユーザから入力を得、Xにする
X = int(input())	数字としてユーザから入力を得られた結果をXにする
X = int(input())	数値としてユーザから入力を受け取って、Xに代入する
X = int(input())	数値としてユーザから入力を受け取られた結果をXとする
X = int(input())	ユーザから入力を数値として得、Xに代入する
X = int(input())	ユーザから入力を数値として得た結果をXにする
X = int(input())	ユーザから入力を数字として得、Xに代入する
X = int(input())	ユーザから入力を数字として得た結果をXに代入する
X = int(input())	ユーザから入力を数値として受け取って、Xに代入する
X = int(input())	ユーザから入力を数値として受け取られた結果をXにする
X = int(input())	数字としてユーザから入力を受け取り、Xにする
X = int(input())	数字としてユーザから入力を受け取った結果をXに代入する
X = int(input())	ユーザから入力を整数値として得、Xにする
X = int(input())	ユーザから入力を整数値として得た結果をXにする
X = int(input())	整数値としてユーザから入力を得、Xとする
X = int(input())	整数値としてユーザから入力を得た結果をXとする
X = int(input())	ユーザから入力を整数値として受け取って、Xとする
X = int(input())	ユーザから入力を整数値として受け取った結果をXとする
X = int(input())	数値としてユーザから入力を得、Xとする
X = int(input())	数値としてユーザから入力を得た結果をXとする
X = int(input())	整数値としてユーザから入力を受け取り、Xに代入する
X = int(input())	整数値としてユーザから入力を受け取った結果をXにする
int(input())	整数値を受け取る
int(input())	数値を受け取る
int(input())	数値を得る
int(input())	数字を得る
X = int(input())	整数値を受け取り、Xに代入する
X = int(input())	整数値を受け取られた結果をXとする
X = int(input())	数値を受け取り、Xにする
X = int(input())	数値を受け取った結果をXとする
X = int(input())	数字を得て、Xにする
X = int(input())	数字を得た結果をXに代入する
X = int(input())	数値を得、Xに代入する
X = int(input())	数値を得られた結果をXにする
int(input())	ユーザが入力した整数値
int(input())	ユーザが入力した数値
int(input())	ユーザが入力した数字
X = int(input())	ユーザが入力した整数値をXにする
X = int(input())	ユーザが入力した数字をXに代入する
X = int(input())	ユーザが入力した数値をXに代入する
int(input())	ユーザから入力された整数値
int(input())	ユーザから入力された数値
int(input())	ユーザから入力された数字
X = int(input())	ユーザから入力された整数値をXにする
X = int(input())	ユーザから入力された数値をXに代入する
X = int(input())	ユーザから入力された数字をXとする
int(input())	入力された整数値
int(input())	入力された数値
int(input())	入力された数字
X = int(input())	入力された整数値をXにする
X = int(input())	入力された数字をXに代入する
X = int(input())	入力された数値をXにする
int(input())	整数値を入力する
int(input())	数値を入力する
int(input())	数字を入力する
X = int(input())	整数値を入力し、Xにする
X = int(input())	整数値を入力した結果をXに代入する
X = int(input())	数値を入力して、Xに代入する
X = int(input())	数値を入力された結果をXにする
X = int(input())	数字を入力し、Xとする
X = int(input())	数字を入力した結果をXにする
int(input())	数値データを入力する
X = int(input())	数値データを入力して、Xとする
X = int(input())	数値データを入力した結果をXにする
list(input())	複数の入力値をリストとして受け取る
list(input())	複数の入力値をリストとして得る
list(input())	リストとして複数の入力値を得る
list(input())	リストとして複数の入力値を受け取る
X = list(input())	複数の入力値をリストとして受け取り、Xに代入する
X = list(input())	複数の入力値をリストとして受け取られた結果をXとする
X = list(input())	複数の入力値をリストとして得て、Xにする
X = list(input())	複数の入力値をリストとして得た結果をXにする
X = list(input())	リストとして複数の入力値を受け取り、Xにする
X = list(input())	リストとして複数の入力値を受け取った結果をXにする
X = list(input())	リストとして複数の入力値を得、Xとする
X = list(input())	リストとして複数の入力値を得た結果をXに代入する
list(input())	ユーザが入力したデータをリストに入れる
list(input())	ユーザが入力した値をリストに突っ込む
list(input())	入力されたデータをリストに突っ込む
list(input())	ユーザから入力された値をリストに入れる
list(input())	ユーザが入力した値をリストに格納する
list(input())	ユーザが入力した文字列をリストに格納する
list(input())	ユーザが入力したデータをリストに格納する
list(input())	ユーザが入力した文字列をリストに突っ込む
list(input())	ユーザが入力した文字列をリストに入れる
list(input())	ユーザが入力したデータをリストに突っ込む
list(input())	ユーザが入力した値をリストに入れる
X = list(input())	ユーザが入力した値をリストに入れ、Xにする
X = list(input())	ユーザが入力した値をリストに入れた結果をXとする
X = list(input())	入力されたデータをリストに突っ込んで、Xにする
X = list(input())	入力されたデータをリストに突っ込まれた結果をXにする
X = list(input())	ユーザが入力したデータをリストに格納し、Xに代入する
X = list(input())	ユーザが入力したデータをリストに格納した結果をXとする
X = list(input())	ユーザが入力した値をリストに格納して、Xとする
X = list(input())	ユーザが入力した値をリストに格納した結果をXとする
X = list(input())	ユーザから入力された値をリストに入れて、Xとする
X = list(input())	ユーザから入力された値をリストに入れた結果をXにする
X = list(input())	ユーザが入力した文字列をリストに突っ込んで、Xとする
X = list(input())	ユーザが入力した文字列をリストに突っ込んだ結果をXとする
X = list(input())	ユーザが入力したデータをリストに突っ込み、Xに代入する
X = list(input())	ユーザが入力したデータをリストに突っ込まれた結果をXとする
X = list(input())	ユーザが入力した文字列をリストに入れて、Xとする
X = list(input())	ユーザが入力した文字列をリストに入れた結果をXとする
X = list(input())	ユーザが入力したデータをリストに入れて、Xにする
X = list(input())	ユーザが入力したデータをリストに入れられた結果をXに代入する
X = list(input())	ユーザが入力した文字列をリストに格納して、Xに代入する
X = list(input())	ユーザが入力した文字列をリストに格納された結果をXとする
X = list(input())	ユーザが入力した値をリストに突っ込んで、Xに代入する
X = list(input())	ユーザが入力した値をリストに突っ込んだ結果をXとする
list(input())	ユーザが入力した値をリストに変換する
list(input())	入力されたデータをリストに変換する
list(input())	ユーザから入力された値をリストに変換する
list(input())	入力された値をリストに直す
list(input())	ユーザから入力された値をリストにする
list(input())	ユーザから入力された値をリストに直す
list(input())	ユーザが入力した文字列をリストにする
list(input())	入力されたデータをリストにする
list(input())	ユーザが入力したデータをリストに直す
list(input())	入力された値をリストに変換する
list(input())	入力された値をリストにする
list(input())	ユーザが入力したデータをリストに変換する
list(input())	ユーザが入力したデータをリストにする
list(input())	ユーザが入力した値をリストにする
list(input())	ユーザが入力した値をリストに置き換える
list(input())	ユーザが入力した値をリストに直す
list(input())	入力されたデータをリストに置き換える
list(input())	ユーザから入力された値をリストに置き換える
list(input())	ユーザが入力したデータをリストに置き換える
list(input())	入力されたデータをリストに直す
list(input())	ユーザが入力した文字列をリストに直す
list(input())	ユーザが入力した文字列をリストに置き換える
list(input())	入力された値をリストに置き換える
list(input())	ユーザが入力した文字列をリストに変換する
X = list(input())	ユーザが入力した値をリストに変換し、Xにする
X = list(input())	ユーザが入力した値をリストに変換した結果をXとする
X = list(input())	入力された値をリストに直して、Xにする
X = list(input())	入力された値をリストに直した結果をXにする
X = list(input())	入力されたデータをリストに変換し、Xにする
X = list(input())	入力されたデータをリストに変換した結果をXにする
X = list(input())	ユーザが入力した文字列をリストにして、Xにする
X = list(input())	ユーザが入力した文字列をリストにした結果をXとする
X = list(input())	ユーザから入力された値をリストにして、Xにする
X = list(input())	ユーザから入力された値をリストにした結果をXとする
X = list(input())	ユーザから入力された値をリストに直して、Xにする
X = list(input())	ユーザから入力された値をリストに直した結果をXとする
X = list(input())	ユーザが入力した文字列をリストに変換し、Xにする
X = list(input())	ユーザが入力した文字列をリストに変換した結果をXにする
X = list(input())	入力された値をリストに変換して、Xにする
X = list(input())	入力された値をリストに変換した結果をXにする
X = list(input())	入力されたデータをリストにし、Xにする
X = list(input())	入力されたデータをリストにされた結果をXに代入する
X = list(input())	ユーザが入力した文字列をリストに置き換え、Xにする
X = list(input())	ユーザが入力した文字列をリストに置き換えられた結果をXにする
X = list(input())	入力された値をリストに置き換え、Xにする
X = list(input())	入力された値をリストに置き換えた結果をXとする
X = list(input())	入力された値をリストにし、Xとする
X = list(input())	入力された値をリストにされた結果をXにする
X = list(input())	ユーザが入力したデータをリストに置き換えて、Xに代入する
X = list(input())	ユーザが入力したデータをリストに置き換えた結果をXに代入する
X = list(input())	ユーザから入力された値をリストに変換し、Xとする
X = list(input())	ユーザから入力された値をリストに変換した結果をXとする
X = list(input())	ユーザから入力された値をリストに置き換え、Xにする
X = list(input())	ユーザから入力された値をリストに置き換えられた結果をXとする
X = list(input())	入力されたデータをリストに直し、Xにする
X = list(input())	入力されたデータをリストに直した結果をXにする
X = list(input())	入力されたデータをリストに置き換え、Xとする
X = list(input())	入力されたデータをリストに置き換えた結果をXに代入する
X = list(input())	ユーザが入力した値をリストに置き換え、Xにする
X = list(input())	ユーザが入力した値をリストに置き換えられた結果をXに代入する
X = list(input())	ユーザが入力したデータをリストにして、Xにする
X = list(input())	ユーザが入力したデータをリストにした結果をXとする
X = list(input())	ユーザが入力した値をリストにし、Xにする
X = list(input())	ユーザが入力した値をリストにした結果をXに代入する
X = list(input())	ユーザが入力した値をリストに直し、Xにする
X = list(input())	ユーザが入力した値をリストに直された結果をXに代入する
X = list(input())	ユーザが入力したデータをリストに変換して、Xにする
X = list(input())	ユーザが入力したデータをリストに変換した結果をXにする
X = list(input())	ユーザが入力したデータをリストに直し、Xとする
X = list(input())	ユーザが入力したデータをリストに直した結果をXに代入する
X = list(input())	ユーザが入力した文字列をリストに直し、Xに代入する
X = list(input())	ユーザが入力した文字列をリストに直した結果をXにする
list(input())	ユーザが入力した値をリスト化する
list(input())	入力されたデータをリスト化する
list(input())	ユーザが入力した文字列をリスト化する
list(input())	ユーザが入力したデータをリスト化する
list(input())	入力された値をリスト化する
list(input())	ユーザから入力された値をリスト化する
list(input())	ユーザから入力されたデータをリスト化する
X = list(input())	ユーザが入力した文字列をリスト化して、Xとする
X = list(input())	ユーザが入力した文字列をリスト化された結果をXに代入する
X = list(input())	入力された値をリスト化して、Xとする
X = list(input())	入力された値をリスト化した結果をXにする
X = list(input())	ユーザが入力したデータをリスト化して、Xに代入する
X = list(input())	ユーザが入力したデータをリスト化した結果をXにする
X = list(input())	ユーザが入力した値をリスト化して、Xとする
X = list(input())	ユーザが入力した値をリスト化した結果をXに代入する
X = list(input())	入力されたデータをリスト化して、Xに代入する
X = list(input())	入力されたデータをリスト化された結果をXに代入する
X = list(input())	ユーザから入力されたデータをリスト化して、Xにする
X = list(input())	ユーザから入力されたデータをリスト化した結果をXにする
X = list(input())	ユーザから入力された値をリスト化して、Xに代入する
X = list(input())	ユーザから入力された値をリスト化した結果をXとする
list(map(int, input().split()))	空白ごとに入力された複数の整数をリストとして受け取る
list(map(int, input().split()))	空白ごとに入力された複数の整数をリストとして得る
list(map(int, input().split()))	空白で区切って入力された複数の整数をリストとして得る
list(map(int, input().split()))	半角スペースで区切って入力された複数の整数をリストとして得る
list(map(int, input().split()))	スペース区切りで入力された複数の整数をリストとして得る
list(map(int, input().split()))	空白で区切って入力された複数の整数をリストとして受け取る
list(map(int, input().split()))	半角スペースごとに入力された複数の整数をリストとして得る
list(map(int, input().split()))	半角スペース区切りで入力された複数の整数をリストとして得る
list(map(int, input().split()))	半角スペースごとに入力された複数の整数をリストとして受け取る
list(map(int, input().split()))	スペース区切りで入力された複数の整数をリストとして受け取る
list(map(int, input().split()))	半角スペースで区切って入力された複数の整数をリストとして受け取る
list(map(int, input().split()))	半角スペース区切りで入力された複数の整数をリストとして受け取る
X = list(map(int, input().split()))	空白ごとに入力された複数の整数をリストとして受け取って、Xにする
X = list(map(int, input().split()))	空白ごとに入力された複数の整数をリストとして受け取った結果をXに代入する
X = list(map(int, input().split()))	半角スペースごとに入力された複数の整数をリストとして受け取って、Xとする
X = list(map(int, input().split()))	半角スペースごとに入力された複数の整数をリストとして受け取った結果をXとする
X = list(map(int, input().split()))	スペース区切りで入力された複数の整数をリストとして受け取り、Xに代入する
X = list(map(int, input().split()))	スペース区切りで入力された複数の整数をリストとして受け取った結果をXにする
X = list(map(int, input().split()))	半角スペースごとに入力された複数の整数をリストとして得、Xとする
X = list(map(int, input().split()))	半角スペースごとに入力された複数の整数をリストとして得られた結果をXとする
X = list(map(int, input().split()))	空白で区切って入力された複数の整数をリストとして受け取り、Xとする
X = list(map(int, input().split()))	空白で区切って入力された複数の整数をリストとして受け取った結果をXに代入する
X = list(map(int, input().split()))	半角スペースで区切って入力された複数の整数をリストとして得、Xとする
X = list(map(int, input().split()))	半角スペースで区切って入力された複数の整数をリストとして得られた結果をXにする
X = list(map(int, input().split()))	空白で区切って入力された複数の整数をリストとして得、Xとする
X = list(map(int, input().split()))	空白で区切って入力された複数の整数をリストとして得られた結果をXに代入する
X = list(map(int, input().split()))	半角スペース区切りで入力された複数の整数をリストとして得、Xとする
X = list(map(int, input().split()))	半角スペース区切りで入力された複数の整数をリストとして得られた結果をXにする
X = list(map(int, input().split()))	半角スペースで区切って入力された複数の整数をリストとして受け取って、Xに代入する
X = list(map(int, input().split()))	半角スペースで区切って入力された複数の整数をリストとして受け取られた結果をXにする
X = list(map(int, input().split()))	スペース区切りで入力された複数の整数をリストとして得、Xにする
X = list(map(int, input().split()))	スペース区切りで入力された複数の整数をリストとして得られた結果をXとする
X = list(map(int, input().split()))	空白ごとに入力された複数の整数をリストとして得、Xとする
X = list(map(int, input().split()))	空白ごとに入力された複数の整数をリストとして得た結果をXとする
X = list(map(int, input().split()))	半角スペース区切りで入力された複数の整数をリストとして受け取り、Xとする
X = list(map(int, input().split()))	半角スペース区切りで入力された複数の整数をリストとして受け取った結果をXに代入する
list(map(int, input().split()))	ユーザが入力した整数値をスペースで区切ってリストとして受け取る
list(map(int, input().split()))	ユーザから入力された数値をスペースで区切ってリストとして受け取る
list(map(int, input().split()))	入力された整数値を半角スペースで区切ってリストとして受け取る
list(map(int, input().split()))	ユーザから入力された数値をスペースで区切ってリストとして得る
list(map(int, input().split()))	ユーザが入力した数字をスペースで区切ってリストとして得る
list(map(int, input().split()))	入力された数値を半角スペースで区切ってリストとして受け取る
list(map(int, input().split()))	ユーザから入力された数字をスペースで区切ってリストとして得る
list(map(int, input().split()))	ユーザが入力した整数値を空白で区切ってリストとして受け取る
list(map(int, input().split()))	ユーザから入力された整数値をスペースで区切ってリストとして受け取る
list(map(int, input().split()))	ユーザが入力した整数値を半角スペースで区切ってリストとして受け取る
list(map(int, input().split()))	ユーザが入力した数値を空白で区切ってリストとして受け取る
list(map(int, input().split()))	ユーザが入力した数値を半角スペースで区切ってリストとして受け取る
list(map(int, input().split()))	ユーザが入力した数字を空白で区切ってリストとして得る
list(map(int, input().split()))	入力された数値を半角スペースで区切ってリストとして得る
list(map(int, input().split()))	入力された数字を半角スペースで区切ってリストとして得る
list(map(int, input().split()))	ユーザが入力した数値をスペースで区切ってリストとして得る
list(map(int, input().split()))	ユーザが入力した数値を空白で区切ってリストとして得る
list(map(int, input().split()))	ユーザが入力した数値をスペースで区切ってリストとして受け取る
list(map(int, input().split()))	ユーザが入力した数字を半角スペースで区切ってリストとして得る
list(map(int, input().split()))	ユーザが入力した数値を半角スペースで区切ってリストとして得る
X = list(map(int, input().split()))	ユーザが入力した整数値を空白で区切ってリストとして受け取って、Xにする
X = list(map(int, input().split()))	ユーザが入力した整数値を空白で区切ってリストとして受け取った結果をXとする
X = list(map(int, input().split()))	入力された整数値を半角スペースで区切ってリストとして受け取り、Xにする
X = list(map(int, input().split()))	入力された整数値を半角スペースで区切ってリストとして受け取られた結果をXとする
X = list(map(int, input().split()))	ユーザが入力した数値を空白で区切ってリストとして受け取り、Xとする
X = list(map(int, input().split()))	ユーザが入力した数値を空白で区切ってリストとして受け取った結果をXにする
X = list(map(int, input().split()))	ユーザが入力した数字を半角スペースで区切ってリストとして得、Xとする
X = list(map(int, input().split()))	ユーザが入力した数字を半角スペースで区切ってリストとして得た結果をXにする
X = list(map(int, input().split()))	入力された数字を半角スペースで区切ってリストとして得、Xとする
X = list(map(int, input().split()))	入力された数字を半角スペースで区切ってリストとして得られた結果をXとする
X = list(map(int, input().split()))	ユーザが入力した数字をスペースで区切ってリストとして得て、Xに代入する
X = list(map(int, input().split()))	ユーザが入力した数字をスペースで区切ってリストとして得た結果をXにする
X = list(map(int, input().split()))	入力された数値を半角スペースで区切ってリストとして受け取り、Xにする
X = list(map(int, input().split()))	入力された数値を半角スペースで区切ってリストとして受け取られた結果をXとする
X = list(map(int, input().split()))	ユーザから入力された数字をスペースで区切ってリストとして得、Xに代入する
X = list(map(int, input().split()))	ユーザから入力された数字をスペースで区切ってリストとして得た結果をXにする
X = list(map(int, input().split()))	ユーザから入力された数値をスペースで区切ってリストとして得、Xに代入する
X = list(map(int, input().split()))	ユーザから入力された数値をスペースで区切ってリストとして得られた結果をXとする
X = list(map(int, input().split()))	ユーザから入力された整数値をスペースで区切ってリストとして受け取って、Xとする
X = list(map(int, input().split()))	ユーザから入力された整数値をスペースで区切ってリストとして受け取った結果をXとする
X = list(map(int, input().split()))	ユーザが入力した数値を半角スペースで区切ってリストとして受け取り、Xにする
X = list(map(int, input().split()))	ユーザが入力した数値を半角スペースで区切ってリストとして受け取られた結果をXとする
X = list(map(int, input().split()))	ユーザが入力した数値を空白で区切ってリストとして得、Xにする
X = list(map(int, input().split()))	ユーザが入力した数値を空白で区切ってリストとして得た結果をXとする
X = list(map(int, input().split()))	ユーザが入力した整数値を半角スペースで区切ってリストとして受け取って、Xにする
X = list(map(int, input().split()))	ユーザが入力した整数値を半角スペースで区切ってリストとして受け取った結果をXに代入する
X = list(map(int, input().split()))	ユーザが入力した数値をスペースで区切ってリストとして受け取って、Xに代入する
X = list(map(int, input().split()))	ユーザが入力した数値をスペースで区切ってリストとして受け取られた結果をXとする
X = list(map(int, input().split()))	ユーザから入力された数値をスペースで区切ってリストとして受け取って、Xにする
X = list(map(int, input().split()))	ユーザから入力された数値をスペースで区切ってリストとして受け取った結果をXに代入する
X = list(map(int, input().split()))	ユーザが入力した整数値をスペースで区切ってリストとして受け取り、Xに代入する
X = list(map(int, input().split()))	ユーザが入力した整数値をスペースで区切ってリストとして受け取った結果をXにする
X = list(map(int, input().split()))	入力された数値を半角スペースで区切ってリストとして得て、Xとする
X = list(map(int, input().split()))	入力された数値を半角スペースで区切ってリストとして得た結果をXとする
X = list(map(int, input().split()))	ユーザが入力した数値をスペースで区切ってリストとして得、Xに代入する
X = list(map(int, input().split()))	ユーザが入力した数値をスペースで区切ってリストとして得られた結果をXに代入する
X = list(map(int, input().split()))	ユーザが入力した数値を半角スペースで区切ってリストとして得て、Xとする
X = list(map(int, input().split()))	ユーザが入力した数値を半角スペースで区切ってリストとして得た結果をXにする
X = list(map(int, input().split()))	ユーザが入力した数字を空白で区切ってリストとして得、Xにする
X = list(map(int, input().split()))	ユーザが入力した数字を空白で区切ってリストとして得た結果をXにする
a, b, c = input().split()	入力された文字列をスペースで分割しa、b、cとする
a, b, c = input().split()	入力されたデータをスペースで分割しa、b、cとする
a, b, c = input().split()	入力されたデータを半角スペースで分割しa、b、cとする
a, b, c = input().split()	入力されたデータを空白で分割しa、b、cとする
a, b, c = input().split()	入力された値を半角スペースで分割しa、b、cとする
a, b, c = input().split()	入力された値をスペースで分割しa、b、cとする
a, b, c = input().split()	入力された文字列を半角スペースで分割しa、b、cとする
a, b, c = input().split()	入力された値を空白で分割しa、b、cとする
a, b, c = input().split()	入力された文字列を空白で分割しa、b、cとする
a, b, c = input().split()	スペースごとに入力文字列を受け取りa、b、cとする
a, b, c = input().split()	入力文字列を半角スペースごとに受け取りa、b、cとする
a, b, c = input().split()	半角スペースごとに入力文字列を受け取りa、b、cとする
a, b, c = input().split()	空白ごとに入力文字列を受け取りa、b、cとする
a, b, c = input().split()	入力文字列をスペースごとに受け取りa、b、cとする
a, b, c = input().split()	入力文字列を空白ごとに受け取りa、b、cとする
a, b, c = input().split()	半角スペースで区切って入力文字列を受け取りa、b、cとする
a, b, c = input().split()	スペースで区切って入力文字列を受け取りa、b、cとする
a, b, c = input().split()	空白で区切って入力文字列を受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された整数値を半角スペースで分割しa、b、cとする
a, b, c = map(int, input().split())	入力された数値を半角スペースで分割しa、b、cとする
a, b, c = map(int, input().split())	入力された数字を半角スペースで分割しa、b、cとする
a, b, c = map(int, input().split())	入力された整数値をスペースで分割しa、b、cとする
a, b, c = map(int, input().split())	入力された数字をスペースで分割しa、b、cとする
a, b, c = map(int, input().split())	入力された数値をスペースで分割しa、b、cとする
a, b, c = map(int, input().split())	入力された数字を空白で分割しa、b、cとする
a, b, c = map(int, input().split())	入力された整数値を空白で分割しa、b、cとする
a, b, c = map(int, input().split())	入力された数値を空白で分割しa、b、cとする
a, b, c = map(int, input().split())	空白ごとに入力された整数値を受け取りa、b、cとする
a, b, c = map(int, input().split())	スペースごとに入力された数字を受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された数値をスペースごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	半角スペースごとに入力された数値を受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された数値を空白ごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された数字をスペースごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	半角スペースごとに入力された整数値を受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された数値を半角スペースごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	スペースごとに入力された数値を受け取りa、b、cとする
a, b, c = map(int, input().split())	スペースごとに入力された整数値を受け取りa、b、cとする
a, b, c = map(int, input().split())	半角スペースごとに入力された数字を受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された整数値を半角スペースごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された数字を半角スペースごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された整数値をスペースごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	空白ごとに入力された数字を受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された数字を空白ごとに受け取りa、b、cとする
a, b, c = map(int, input().split())	空白ごとに入力された数値を受け取りa、b、cとする
a, b, c = map(int, input().split())	入力された整数値を空白ごとに受け取りa、b、cとする
if name == 'Taro':	nameが'Taro'ならば
if name == 'Taro':	nameが'Taro'のとき
if name == 'Taro':	nameが'Taro'だったら
if name == 'Taro':	もしnameが'Taro'ならば
if name == 'Taro':	nameがもし'Taro'ならば
elif name == 'Hanako':	そうでなくてnameが'Hanako'ならば
elif name == 'Hanako':	そうでなくnameが'Hanako'だったら
elif name == 'Hanako':	そうでなくてnameが'Hanako'のとき
elif name == 'Hanako':	そうでなくnameが'Hanako'のとき
else	そうでなければ
else	どれでもなければ
else	それ以外のとき
if age < 6 or age >= 60:	ageが6未満または60以上ならば
if age < 6 or age >= 60:	ageが6未満それか60以上ならば
if age < 6 or age >= 60:	ageが6未満もしくは60以上ならば
if age < 6 or age >= 60:	もしageが6未満または60以上ならば
if age < 6 or age >= 60:	もしageが6未満それか60以上ならば
if age < 6 or age >= 60:	ageがもし6未満または60以上ならば
if age < 6 or age >= 60:	もしageが6未満もしくは60以上ならば
if age < 6 or age >= 60:	ageがもし6未満もしくは60以上ならば
if age < 6 or age >= 60:	ageがもし6未満それか60以上ならば
if age < 6 and age >= 60:	ageが6未満かつ60以上ならば
if age < 6 and age >= 60:	ageが6未満加えて60以上ならば
if age < 6 and age >= 60:	もしageが6未満かつ60以上ならば
if age < 6 and age >= 60:	ageがもし6未満かつ60以上ならば
if age < 6 and age >= 60:	ageがもし6未満加えて60以上ならば
if age < 6 and age >= 60:	もしageが6未満加えて60以上ならば
for i in range(10):	以下の処理を10回ループする
for i in range(10):	以下の処理を10回繰り返す
for i in range(10):	以下の処理を10回回す
for i in range(10):	次の命令を10回まわす
for i in range(10):	以下のプログラムを10回ループする
for i in range(10):	以降の命令を10回ループする
for i in range(10):	以下の命令を10回繰り返す
for i in range(10):	以降の命令を10回繰り返す
for i in range(10):	次の命令を10回回す
for i in range(10):	以降の処理を10回ループする
for i in range(10):	次のプログラムを10回ループする
for i in range(10):	以降の処理を10回繰り返す
for i in range(10):	次の処理を10回ループする
for i in range(10):	次のプログラムを10回繰り返す
for i in range(10):	以降のプログラムを10回繰り返す
for i in range(10):	次の命令を10回繰り返す
for i in range(10):	次の命令を10回ループする
for i in range(10):	以下のプログラムを10回繰り返す
for i in range(10):	以下の命令を10回ループする
for i in range(10):	以降のプログラムを10回ループする
for i in range(10):	次の処理を10回繰り返す
for i in range(10):	10回ループする
for i in range(10):	10回回す
for i in range(10):	10回まわす
for i in range(10):	10回繰り返す
for i in range(10):	iに0から9を代入して、以降のプログラムをループする
for i in range(10):	iに0から9を代入して、次の命令を回す
for i in range(10):	iに0から9を代入して、次の命令を繰り返す
for i in range(10):	iに0から9を代入して、以下の処理を繰り返す
for i in range(10):	iに0から9を代入して、以降のプログラムをまわす
for i in range(10):	iに0から9を代入して、以降のプログラムを回す
for i in range(10):	iに0から9を代入して、以降のプログラムを繰り返す
for i in range(10):	iに0から9を代入して、次の命令をループする
for i in range(10):	iに0から9を代入して、以下の処理をまわす
for i in range(10):	iに0から9を代入して、以下の処理を回す
for i in range(10):	iに0から9を代入して、以下の処理をループする
for i in range(10):	iに0から9を代入して、次の命令をまわす
for i in range(10):	iに10未満の連続した数値を代入して、以降のプログラムをループする
for i in range(10):	iに10未満の連続した数値を代入して、次の命令をまわす
for i in range(10):	iに10未満の連続した数値を代入して、以下の処理をまわす
for i in range(10):	iに10未満の連続した数値を代入して、以下の処理を繰り返す
for i in range(10):	iに10未満の連続した数値を代入して、以下の処理をループする
for i in range(10):	iに10未満の連続した数値を代入して、次の命令を繰り返す
for i in range(10):	iに10未満の連続した数値を代入して、以下の処理を回す
for i in range(10):	iに10未満の連続した数値を代入して、以降のプログラムを繰り返す
for i in range(10):	iに10未満の連続した数値を代入して、次の命令をループする
for i in range(10):	iに10未満の連続した数値を代入して、以降のプログラムを回す
for i in range(10):	iに10未満の連続した数値を代入して、以降のプログラムをまわす
for i in range(10):	iに10未満の連続した数値を代入して、次の命令を回す
for i in range(10):	iを0から9まで1つずつ取り出しながら繰り返し処理を行う
for i in range(10):	繰り返し処理を10回行う
for i in range(10):	10回だけ繰り返し処理を行う
for i in range(len(a)):	以降のプログラムをaの要素数分ループする
for i in range(len(a)):	以下の処理をaの長さだけ回す
for i in range(len(a)):	以降のプログラムをaの要素数分繰り返す
for i in range(len(a)):	以下の処理をaの要素数分繰り返す
for i in range(len(a)):	以降のプログラムをaの長さだけ回す
for i in range(len(a)):	以下の処理をaの長さだけまわす
for i in range(len(a)):	以降のプログラムをaの長さだけ繰り返す
for i in range(len(a)):	以下の処理をaの長さだけループする
for i in range(len(a)):	次の命令をaの長さだけまわす
for i in range(len(a)):	次の命令をaの要素数分繰り返す
for i in range(len(a)):	以降のプログラムをaの長さだけまわす
for i in range(len(a)):	次の命令をaの長さだけ回す
for i in range(len(a)):	以下の処理をaの長さだけ繰り返す
for i in range(len(a)):	次の命令をaの要素数分ループする
for i in range(len(a)):	以降のプログラムをaの長さだけループする
for i in range(len(a)):	以下の処理をaの要素数分ループする
for i in range(len(a)):	次の命令をaの長さだけ繰り返す
for i in range(len(a)):	次の命令をaの長さだけループする
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順番に代入して以降のプログラムをループする
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順に代入して以下の処理をまわす
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順番に代入して以下の処理をループする
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順に代入して以下の処理を回す
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順に代入して以降のプログラムを回す
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順番に代入して以降のプログラムを繰り返す
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順に代入して次の命令をまわす
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順番に代入して次の命令をループする
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順番に代入して以下の処理を繰り返す
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順番に代入して次の命令を繰り返す
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順に代入して以降のプログラムをまわす
for i, ai in enumerate(a):	aのインデックスをi、要素をaiへ順に代入して次の命令を回す
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順番に代入して以降のプログラムをループする
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順に代入して次の命令を回す
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順に代入して以下の処理をまわす
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順番に代入して次の命令を繰り返す
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順に代入して以降のプログラムをまわす
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順に代入して以下の処理を回す
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順に代入して次の命令をまわす
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順に代入して以降のプログラムを回す
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順番に代入して以下の処理を繰り返す
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順番に代入して次の命令をループする
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順番に代入して以下の処理をループする
for ai, bi in zip(a, b):	aの要素をai、bの要素をbiへ順番に代入して以降のプログラムを繰り返す
while True:	以下の処理をずっとループする
while True:	以下の処理を無限に回す
while True:	以下の処理を無限にまわす
while True:	以下の処理をずっと繰り返す
while True:	無限ループを行う
pass	何もしない
pass	何も行わない
pass	パスする
break	抜ける
break	中断する
break	繰り返し処理を抜ける
break	ループ処理を抜け出す
break	ループを抜ける
break	繰り返し処理を抜け出す
break	繰り返し処理を終了する
break	ループを終了する
break	ループ処理を抜ける
break	ループを抜け出す
break	ループ処理を終了する
break	ループ処理から終了する
break	繰り返し処理から抜ける
break	繰り返し処理から終了する
break	ループ処理から抜ける
break	ループから抜け出す
break	ループから抜ける
break	ループ処理から抜け出す
break	繰り返し処理から抜け出す
break	ループから終了する
continue	先頭に戻ってやり直す
continue	最初から繰り返す
try:	可能なら以下のプログラムを処理する
try:	可能であれば以下の処理を処理する
try:	可能なら以下の命令を実行する
try:	可能であれば以下のプログラムを処理する
try:	できたら以下のプログラムを処理する
try:	可能であれば以下の命令を実行する
try:	可能なら以下の処理を実行する
try:	できたら以下の処理を処理する
try:	可能であれば以下の命令を処理する
try:	可能なら以下の命令を処理する
try:	可能なら以下のプログラムを実行する
try:	可能なら以下の処理を処理する
try:	できたら以下の命令を処理する
try:	可能であれば以下の処理を実行する
try:	可能であれば以下のプログラムを実行する
except:	もし何らかの例外が発生した時
except:	何らかの例外が発生したとき
except:	もし何らかの例外が発生したとき
except:	何らかの例外が発生した時
except:	もし何らかの例外が発生した場合
except:	もしtryの中のプログラムが実行できなかった場合
except:	もしtryの中の処理が実行できなかった時
except:	もしtryの中のプログラムが実行できなかった時
except:	tryの中の処理が実行できなかった時
except:	tryの中の命令が実行できなかった時
except:	もしtryの中の処理が実行できなかったとき
except:	もしtryの中のプログラムが実行できなかったとき
except:	もしtryの中の処理が実行できなかった場合
except:	もしtryの中の命令が実行できなかったとき
except:	もしtryの中の命令が実行できなかった場合
except:	tryの中のプログラムが実行できなかったとき
except:	tryの中の処理が実行できなかったとき
except:	もしtryの中の命令が実行できなかった時
except:	tryの中のプログラムが実行できなかった時
except:	tryの中の命令が実行できなかったとき
except ZeroDivisionError:	もしZeroDivisionErrorが発生したとき
except ZeroDivisionError:	ZeroDivisionErrorが発生したとき
except ZeroDivisionError:	ZeroDivisionErrorが発生した時
except ZeroDivisionError:	もしZeroDivisionErrorが発生した時
finally:	例外が発生してもしなくても
def hoge(x):	xを引数に持つ関数hogeを定義する
def hoge(x):	xを引数に持つ関数をhogeという名前で定義する
return	何も返さない
return x	xをリターンする
return x	xを返す
yield 1	1を一旦リターンする
yield 1	一旦1をリターンする
[]	空列
X = []	空列をXに代入する
[]	空のリスト
X = []	空のリストをXとする
()	空のタプル
X = ()	空のタプルをXに代入する
a[0]	aの0番目の要素
a[0]	aの最初
a[0]	aの先頭の値
a[0]	aの先頭のデータ
a[0]	aの最初の要素
a[0]	aの先頭の要素
a[-1]	aの末尾の要素
a[-1]	aの末尾
a[-1]	aの末尾のデータ
a[-1]	aの末尾の値
a[:]	aのコピー
a[:]	aがコピーされた列
a[:-1]	aの末尾を除いた部分列
a[:-1]	aの最後を除いた部分列
a[1:]	aの最初を除いた部分列
a[1:]	aの先頭を除いた部分列
a[1:]	aの0番目を除いた部分列
a[start:end]	aのstart番目からend番目の値を得る
a[start:end]	aのstart番目からend番目のデータを取得する
a[start:end]	aのstart番目からend番目のデータを得る
a[start:end]	aのstart番目からend番目の値を抜き出す
a[start:end]	aのstart番目からend番目の要素を抜き出す
a[start:end]	aのstart番目からend番目の値を取得する
a[start:end]	aのstart番目からend番目の要素を得る
a[start:end]	aのstart番目からend番目の要素を取り出す
a[start:end]	aのstart番目からend番目の値を取り出す
a[start:]	aのstart番目から末尾までの要素を取り出す
a[start:]	aのstart番目から最後までの値を得る
a[start:]	aのstart番目から末尾までのデータを抜き出す
a[start:]	aのstart番目から末尾までの値を抜き出す
a[start:]	aのstart番目から末尾までの値を取り出す
a[start:]	aのstart番目から最後までのデータを得る
a[start:]	aのstart番目から最後までの要素を得る
a[start:]	aのstart番目から末尾までのデータを取り出す
a[start:]	aのstart番目から末尾までの要素を抜き出す
a[start:]	aのstart番目以降の値を取り出す
a[start:]	aのstart番目以降の要素を取り出す
a[start:]	aのstart番目以降の値を得る
a[start:]	aのstart番目以降の要素を得る
a[start:]	aのstart番目以降の値を抜き出す
a[start:]	aのstart番目以降のデータを抜き出す
a[start:]	aのstart番目以降の要素を抜き出す
a[start:]	aのstart番目以降のデータを取り出す
a[start:]	aのstart番目以降のデータを得る
a[:end]	aの0番目からend番目の要素を取り出す
a[:end]	aの0番目からend番目の値を抜き出す
a[:end]	aの0番目からend番目の要素を抜き出す
a[:end]	aの0番目からend番目の要素を得る
a[:end]	aの0番目からend番目の値を取り出す
a[:end]	aの0番目からend番目の値を得る
a[:end]	aの0番目からend番目のデータを抜き出す
a[:end]	aの0番目からend番目のデータを得る
a[:end]	aの0番目からend番目のデータを取り出す
a[::-1]	aの逆順
a[::-1]	aリストの逆順
a[::-1]	リストaの逆順
a[::-1]	a内の要素の順番を逆転する
a[::-1]	aリスト内の値の順番を逆にする
a[::-1]	リストa内の値の順番を逆転する
a[::-1]	aリスト内の要素の順番を逆にする
a[::-1]	a内の要素の順番を逆にする
a[::-1]	aリスト内の値の順番を逆転する
a[::-1]	a内の値の順番を逆にする
a[::-1]	リストa内の要素の順番を逆にする
a[::-1]	リストa内の値の順番を逆にする
a[::-1]	リストa内の要素の順番を逆転する
a[::-1]	aリスト内の要素の順番を逆転する
a[::-1]	a内の値の順番を逆転する
len(a)	aの長さ
len(a)	aの個数
len(a)	aの要素数
len(a)	aの長さを調べる
len(a)	aの要素数を見る
len(a)	aの個数をチェックする
len(a)	aの長さを求める
len(a)	aの個数を求める
len(a)	aの要素数を計算する
sum(a)	aの合計値
sum(a)	リストaの合計値
sum(a)	aリストの合計値
sum(a)	aの総和
sum(a)	aリストの合計
sum(a)	リストaの合計
sum(a)	aリストの総和
sum(a)	aの合計
sum(a)	リストaの総和
sum(a)	aの合計を確認する
sum(a)	aの総和を見る
sum(a)	aリストの合計をチェックする
sum(a)	リストaの合計を調べる
sum(a)	aリストの合計値を表示する
sum(a)	リストaの総和を表示する
sum(a)	aの合計値を見る
sum(a)	リストaの合計値を見る
sum(a)	aリストの総和を確認する
sum(a)	aの総和を計算する
sum(a)	aの合計を計算する
sum(a)	aリストの合計を算出する
sum(a)	リストaの合計を計算する
sum(a)	リストaの合計値を算出する
sum(a)	aリストの総和を求める
sum(a)	リストaの総和を算出する
sum(a)	aリストの合計値を計算する
sum(a)	aの合計値を求める
min(a)	aの最小値
min(a)	aリストの最小値
min(a)	aリストの一番小さい値
min(a)	リストaの一番小さい値
min(a)	aの一番小さいデータ
min(a)	リストaの最小値
min(a)	aリストの一番小さいデータ
min(a)	aの一番小さい値
min(a)	リストaの一番小さいデータ
min(a)	aの最小値を調べる
min(a)	リストaの一番小さいデータを表示する
min(a)	aリストの一番小さいデータを調べる
min(a)	aリストの一番小さい値を見る
min(a)	aの一番小さいデータを調べる
min(a)	aリストの最小値を調べる
min(a)	aの一番小さい値を表示する
min(a)	リストaの一番小さい値をチェックする
min(a)	リストaの最小値を表示する
min(a)	aの最小値を計算する
min(a)	リストaの一番小さい値を計算する
min(a)	aの一番小さい値を求める
min(a)	aリストの一番小さいデータを計算する
min(a)	リストaの一番小さいデータを求める
min(a)	リストaの最小値を計算する
min(a)	aリストの最小値を算出する
min(a)	aの一番小さいデータを計算する
min(a)	aリストの一番小さい値を算出する
max(a)   @check @calc	aの一番大きいデータ
max(a)   @check @calc	リストaの一番大きい値
max(a)   @check @calc	aの一番大きい値
max(a)   @check @calc	リストaの一番大きいデータ
max(a)   @check @calc	aリストの一番大きい値
max(a)   @check @calc	aリストの最大値
max(a)   @check @calc	aリストの一番大きいデータ
max(a)   @check @calc	リストaの最大値
max(a)   @check @calc	aの最大値
sum(a)/len(a)	aの平均
sum(a)/len(a)	aリストの平均
sum(a)/len(a)	aリストの平均値
sum(a)/len(a)	aの平均値
sum(a)/len(a)	リストaの平均値
sum(a)/len(a)	リストaの平均
sum(a)/len(a)	aの平均を見る
sum(a)/len(a)	aの平均値を確認する
sum(a)/len(a)	aリストの平均を見る
sum(a)/len(a)	リストaの平均を見る
sum(a)/len(a)	リストaの平均値を見る
sum(a)/len(a)	aリストの平均値を確認する
sum(a)/len(a)	aの平均を計算する
sum(a)/len(a)	aリストの平均を算出する
sum(a)/len(a)	リストaの平均値を計算する
sum(a)/len(a)	aリストの平均値を求める
sum(a)/len(a)	リストaの平均を計算する
sum(a)/len(a)	aの平均値を計算する
range(n)	0からn-1までの数列
range(n)	0からn-1の範囲の数列
range(n)	0からn-1の範囲で1ずつ増える数列
range(n)	0~n-1の範囲の数列
range(n)	0~n-1の範囲で1ずつ増える数列
range(n)	0以上n未満の範囲で1ずつ増える数列
range(n)	0以上n未満で1ずつ増える数列
range(n)	0以上n未満の範囲の数列
range(1, n+1)	1からnまでの数列
range(1, n+1)	1からnの範囲の数列
range(1, n+1)	1からnの範囲で1ずつ増える数列
range(1, n+1)	1~nの範囲の数列
range(1, n+1)	1~nの範囲で1ずつ増える数列
range(1, n+1)	1以上n+1未満の範囲で1ずつ増える数列
range(1, n+1)	1以上n+1未満で1ずつ増える数列
range(1, n+1, 2)	1からnまでの2つ飛ばしの数列
range(1, n+1, 2)	1からnの範囲の2つ飛ばしの数列
range(1, n+1, 2)	1からnの範囲で2つずつ増える数列
range(1, n+1, 2)	1~nの範囲の2つ飛ばしの数列
range(1, n+1, 2)	1~nの範囲で2ずつ増える数列
range(1, n+1, 2)	1以上n+1未満の範囲で2ずつ増える数列
range(1, n+1, 2)	1以上n+1未満で2ずつ増える数列
a.append(x)	aにxを加える
a.append(x)	aリストにxを入れる
a.append(x)	aにxを追加する
a.append(x)	aにxを付加する
a.append(x)	xをaに追加する
a.append(x)	xをaに付加する
a.append(x)	xをリストaに加える
a.append(x)	xをaリストに付加する
a.append(x)	リストaにxを入れる
a.append(x)	xをaリストに加える
a.append(x)	リストaにxを加える
a.append(x)	xをaリストに入れる
a.append(x)	xをaに加える
a.append(x)	xをリストaに付加する
a.append(x)	aリストにxを追加する
a.append(x)	リストaにxを付加する
a.append(x)	aリストにxを加える
a.append(x)	aリストにxを付加する
a.append(x)	xをaに入れる
a.append(x)	aにxを入れる
a.append(x)	リストaにxを追加する
a.append(x)	xをリストaに追加する
a.append(x)	xをリストaに入れる
a.append(x)	xをaリストに追加する
a.append(x)	aの最後にxをアペンドする
a.append(x)	aリストの後ろにxを付加する
a.append(x)	aリストの末尾にxを加える
a.append(x)	aの末尾にxを入れる
a.append(x)	リストaの後ろにxを付加する
a.append(x)	リストaの末尾にxを入れる
a.append(x)	aの後ろにxを付加する
a.append(x)	aリストの最後にxを追加する
a.append(x)	aの最後にxを加える
a.append(x)	リストaの最後にxをアペンドする
a.append(x)	aリストの末尾にxを追加する
a.append(x)	リストaの最後にxを入れる
a.append(x)	aリストの後ろにxを入れる
a.append(x)	aの末尾にxを加える
a.append(x)	リストaの末尾にxを加える
a.append(x)	リストaの最後にxを加える
a.append(x)	aの最後にxを追加する
a.append(x)	リストaの最後にxを追加する
a.append(x)	aリストの最後にxを付加する
a.append(x)	リストaの後ろにxを入れる
a.append(x)	aの後ろにxを入れる
a.append(x)	aリストの最後にxをアペンドする
a.append(x)	aの最後にxを入れる
a.append(x)	aリストの最後にxを加える
a.append(x)	aの最後にxを付加する
a.append(x)	aリストの最後にxを入れる
a.append(x)	リストaの最後にxを付加する
a.append(x)	aリストの末尾にxを入れる
a.append(x)	aの末尾にxを追加する
a.extend(l)	aにlを展開して加える
a.extend(l)	lリストをaリストに展開して入れる
a.extend(l)	aリストにlリストを展開して入れる
a.extend(l)	lリストをaリストに展開して付加する
a.extend(l)	lリストをaリストに展開して加える
a.extend(l)	aにlを展開して入れる
a.extend(l)	リストaにリストlを展開して入れる
a.extend(l)	aリストにlリストを展開して追加する
a.extend(l)	aリストにlリストを展開して付加する
a.extend(l)	aにlを展開して付加する
a.extend(l)	リストaにリストlを展開して加える
a.extend(l)	リストlをリストaに展開して入れる
a.extend(l)	リストlをリストaに展開して付加する
a.extend(l)	aリストにlリストを展開して加える
a.extend(l)	lをaに展開して入れる
a.extend(l)	lリストをaリストに展開して追加する
a.extend(l)	リストlをリストaに展開して加える
a.extend(l)	lをaに展開して追加する
a.extend(l)	リストaにリストlを展開して付加する
a.extend(l)	lをaに展開して付加する
a.extend(l)	lをaに展開して加える
a.extend(l)	aにlを展開して追加する
a.extend(l)	リストaにリストlを展開して追加する
a.extend(l)	lを追加してaを拡張する
a.extend(l)	追加してリストaをリストlを拡張する
a.extend(l)	lリストを追加してaリストを拡張する
a.extend(l)	追加してaリストをlリストを拡張する
a.extend(l)	リストlを追加してリストaを拡張する
a.extend(l)	追加してaをlを拡張する
a.insert(i, x)	aのi番目にxを追加する
a.insert(i, x)	xをaのi番目に加える
a.insert(i, x)	xをaリストのi番目に追加する
a.insert(i, x)	リストaのi番目にxを入れる
a.insert(i, x)	aのi番目にxを入れる
a.insert(i, x)	aのi番目にxを付加する
a.insert(i, x)	リストaのi番目にxを追加する
a.insert(i, x)	xをaのi番目に追加する
a.insert(i, x)	xをリストaのi番目に付加する
a.insert(i, x)	リストaのi番目にxを付加する
a.insert(i, x)	aリストのi番目にxを追加する
a.insert(i, x)	aリストのi番目にxを付加する
a.insert(i, x)	xをaのi番目に入れる
a.insert(i, x)	aのi番目にxを加える
a.insert(i, x)	xをリストaのi番目に加える
a.insert(i, x)	xをaのi番目に付加する
a.insert(i, x)	xをaリストのi番目に付加する
a.insert(i, x)	xをリストaのi番目に追加する
a.insert(i, x)	リストaのi番目にxを加える
a.insert(i, x)	aリストのi番目にxを入れる
a.insert(i, x)	aリストのi番目にxを加える
a.insert(i, x)	xをリストaのi番目に入れる
a.insert(i, x)	xをaリストのi番目に加える
a.insert(i, x)	xをaリストのi番目に入れる
a.pop()	aの末尾から値をポップする
a.pop()	aリストの後ろから値を取り除く
a.pop()	aの末尾から要素をポップする
a.pop()	aリストの終わりから値を得る
a.pop()	リストaの末尾から値をポップする
a.pop()	aの終わりから要素を得る
a.pop()	リストaの終わりから値を得る
a.pop()	aリストの後ろからデータを取り除く
a.pop()	aの終わりから値を得る
a.pop()	aリストの最後から値をポップする
a.pop()	リストaの後ろから値を取り除く
a.pop()	aの後ろから値を取り除く
a.pop()	aの終わりから値を取り出す
a.pop()	aリストの末尾から値をポップする
a.pop()	リストaの後ろからデータを取り除く
a.pop()	aの後ろから値をポップする
a.pop()	リストaの最後から要素をポップする
a.pop()	aリストの末尾から要素をポップする
a.pop()	aの終わりから要素をポップする
a.pop()	リストaの後ろから値をポップする
a.pop()	リストaの末尾から要素をポップする
a.pop()	リストaの後ろから要素をポップする
a.pop()	aの終わりからデータを取り出す
a.pop()	aの後ろから要素をポップする
a.pop()	リストaの終わりから値を取り出す
a.pop()	aリストの終わりからデータを抜き出す
a.pop()	aの終わりから値を抜き出す
a.pop()	aリストの終わりから値をポップする
a.pop()	aリストの後ろから値をポップする
a.pop()	リストaの終わりから要素を抜き出す
a.pop()	aリストの終わりから要素をポップする
a.pop()	aリストの終わりから値を抜き出す
a.pop()	リストaの終わりから値をポップする
a.pop()	リストaの終わりからデータを得る
a.pop()	aの最後から要素をポップする
a.pop()	リストaの終わりから要素をポップする
a.pop()	リストaの終わりから要素を取り出す
a.pop()	aリストの終わりから値を取り出す
a.pop()	aリストの終わりからデータを得る
a.pop()	aリストの終わりから要素を得る
a.pop()	リストaの終わりからデータを取り出す
a.pop()	aの後ろからデータを取り除く
a.pop()	aの最後から値をポップする
a.pop()	リストaの終わりから値を抜き出す
a.pop()	リストaの最後から値をポップする
a.pop()	リストaの終わりから要素を得る
a.pop(i)	aのi番目から要素をポップする
a.pop(i)	リストaのi番目から値を取り除く
a.pop(i)	aのi番目から値を抜き出す
a.pop(i)	aリストのi番目から要素をポップする
a.pop(i)	aリストのi番目から値をポップする
a.pop(i)	aのi番目から値を取り除く
a.pop(i)	aリストのi番目から値を抜き出す
a.pop(i)	リストaのi番目から要素をポップする
a.pop(i)	aのi番目からデータを取り除く
a.pop(i)	リストaのi番目から値をポップする
a.pop(i)	aのi番目から値をポップする
a.pop(i)	リストaのi番目から要素を得る
a.pop(i)	aリストのi番目からデータを取り除く
a.pop(i)	aリストのi番目から値を取り除く
a.pop(i)	リストaのi番目から値を得る
a.pop(i)	aリストのi番目から値を取り出す
a.pop(i)	リストaのi番目から値を取り出す
a.pop(i)	aのi番目から要素を抜き出す
a.pop(i)	aのi番目から値を得る
a.pop(i)	リストaのi番目から値を抜き出す
a.pop(i)	リストaのi番目からデータを取り除く
a.pop(i)	aリストのi番目から値を得る
a.pop(i)	aリストのi番目から要素を得る
a.pop(i)	aのi番目から値を取り出す
a.pop(i)	aのi番目から要素を得る
a.pop(i)	aのi番目からデータを抜き出す
a.pop(i)	aリストのi番目からデータを得る
a.pop(i)	リストaのi番目から要素を抜き出す
a.pop(i)	aリストのi番目から要素を取り出す
a.pop(i)	aのi番目からデータを取り出す
a.clear()	aの全ての要素を取り除く
a.clear()	リストaの全ての要素を消去する
a.clear()	リストaの全ての値を消去する
a.clear()	aの全ての要素を削除する
a.clear()	aリストの全ての要素を消す
a.clear()	aの全ての値を消去する
a.clear()	aの全ての値を削除する
a.clear()	aリストの全ての値を削除する
a.clear()	リストaの全ての要素を消す
a.clear()	リストaの全ての値を削除する
a.clear()	aの全ての要素を消す
a.clear()	aリストの全ての要素を削除する
a.clear()	aリストの全ての値を消す
a.clear()	リストaの全ての要素を取り除く
a.clear()	aの全ての値を消す
a.clear()	aリストの全ての要素を消去する
a.clear()	リストaの全ての値を取り除く
a.clear()	aの全ての値を取り除く
a.clear()	aリストの全ての値を消去する
a.clear()	aの全ての要素を消去する
a.clear()	リストaの全ての値を消す
a.clear()	リストaの全ての要素を削除する
a.clear()	aリストの全ての値を取り除く
a.remove(x)	a内のxと等しい要素の先頭を取り除く
a.remove(x)	aのxと同じ値を消去する
a.remove(x)	aの中のxと同じ要素の最初を削除する
a.remove(x)	aリストのxと同じ要素を取り除く
a.remove(x)	a内のxと等しい要素の最初を取り除く
a.remove(x)	aリストの中のxと等しい要素の最初を取り除く
a.remove(x)	リストaのxと同じ要素を取り除く
a.remove(x)	aリスト内のxと等しい要素の最初を消去する
a.remove(x)	aの中のxと同じ要素の最初を取り除く
a.remove(x)	リストaのxと同じ値を消去する
a.remove(x)	リストaの中のxと同じ要素の最初を消去する
a.remove(x)	aリスト内のxと等しい値の最初を消去する
a.remove(x)	aリストのxと同じ値を消す
a.remove(x)	aリストのxと同じ要素を削除する
a.remove(x)	リストaの中のxと同じ要素の最初を消す
a.remove(x)	aの中のxと同じ値の最初を消去する
a.remove(x)	a内のxと等しい値の最初を消す
a.remove(x)	aのxと同じ値を削除する
a.remove(x)	リストaの中のxと同じ値の最初を削除する
a.remove(x)	リストaの中のxと等しい値の最初を削除する
a.remove(x)	aリスト内のxと等しい要素の先頭を削除する
a.remove(x)	aリスト内のxと等しい値の最初を削除する
a.remove(x)	a内のxと等しい値の先頭を消す
a.remove(x)	リストa内のxと等しい要素の先頭を削除する
a.remove(x)	aリストの中のxと同じ値の最初を消す
a.remove(x)	aの中のxと等しい値の最初を取り除く
a.remove(x)	a内のxと等しい要素の先頭を削除する
a.remove(x)	aリストの中のxと同じ要素の最初を取り除く
a.remove(x)	aリストの中のxと等しい値の最初を消去する
a.remove(x)	aのxと同じ要素を取り除く
a.remove(x)	aリストの中のxと同じ値の最初を削除する
a.remove(x)	リストaの中のxと同じ値の最初を取り除く
a.remove(x)	リストaの中のxと等しい要素の最初を消去する
a.remove(x)	aリストの中のxと等しい要素の最初を削除する
a.remove(x)	リストaの中のxと等しい値の最初を取り除く
a.remove(x)	リストaの中のxと同じ要素の最初を削除する
a.remove(x)	リストaの中のxと同じ値の最初を消去する
a.remove(x)	aリストのxと同じ要素を消去する
a.remove(x)	aの中のxと等しい値の最初を消去する
a.remove(x)	aリスト内のxと等しい要素の最初を削除する
a.remove(x)	リストa内のxと等しい要素の先頭を消す
a.remove(x)	aのxと同じ値を消す
a.remove(x)	aのxと同じ要素を消去する
a.remove(x)	aリストのxと同じ値を消去する
a.remove(x)	aのxと同じ値を取り除く
a.remove(x)	リストa内のxと等しい値の先頭を取り除く
a.remove(x)	aリストの中のxと等しい要素の最初を消去する
a.remove(x)	リストaの中のxと同じ値の最初を消す
a.remove(x)	a内のxと等しい要素の最初を削除する
a.remove(x)	リストaのxと同じ値を消す
a.remove(x)	aリストのxと同じ値を削除する
a.remove(x)	リストa内のxと等しい要素の先頭を取り除く
a.remove(x)	リストaのxと同じ要素を消去する
a.remove(x)	リストaの中のxと等しい要素の最初を削除する
a.remove(x)	リストa内のxと等しい値の最初を消去する
a.remove(x)	リストaの中のxと等しい要素の最初を取り除く
a.remove(x)	a内のxと等しい値の先頭を取り除く
a.remove(x)	リストaのxと同じ値を削除する
a.remove(x)	aのxと同じ要素を削除する
a.remove(x)	リストaの中のxと等しい値の最初を消去する
a.remove(x)	aのxと同じ要素を消す
a.remove(x)	aリスト内のxと等しい要素の先頭を消去する
a.remove(x)	aリストの中のxと等しい値の最初を取り除く
a.remove(x)	リストa内のxと等しい値の先頭を消す
a.remove(x)	aの中のxと等しい要素の最初を削除する
a.remove(x)	a内のxと等しい要素の最初を消す
a.remove(x)	aリストの中のxと同じ要素の最初を消去する
a.remove(x)	リストaのxと同じ値を取り除く
a.remove(x)	aの中のxと等しい値の最初を消す
a.remove(x)	リストaのxと同じ要素を削除する
del a[0]	aの0番目の要素を取り除く
del a[0]	aリストの0番目の要素を削除する
del a[0]	リストaの0番目の要素を消す
del a[0]	リストaの0番目の値を消す
del a[0]	aリストの0番目の値を消去する
del a[0]	aリストの0番目の値を消す
del a[0]	aリストの0番目の値を取り除く
del a[0]	aの0番目の値を取り除く
del a[0]	aの0番目の値を消す
del a[0]	aリストの0番目の要素を取り除く
del a[0]	リストaの0番目の要素を消去する
del a[0]	リストaの0番目の値を消去する
del a[0]	リストaの0番目の要素を削除する
del a[0]	aリストの0番目の要素を消去する
del a[0]	aの0番目の要素を消去する
del a[0]	aの0番目の要素を削除する
del a[0]	リストaの0番目の要素を取り除く
del a[0]	aの0番目の値を削除する
del a[0]	リストaの0番目の値を削除する
del a[0]	aの0番目の要素を消す
del a[0]	aリストの0番目の要素を消す
del a[0]	aリストの0番目の値を削除する
del a[0]	aの0番目の値を消去する
del a[0]	リストaの0番目の値を取り除く
a.index(x)	a内のxが存在する先頭の場所を取得する
a.index(x)	aの中のxが存在する最初のインデックスを得る
a.index(x)	a内のxが存在する先頭のインデックスを得る
a.index(x)	存在するインデックスをリストaのxが得る
a.index(x)	aのxが存在するインデックスを得る
a.index(x)	aのxが存在するインデックスを取得する
a.index(x)	aリストのxが存在するインデックスを取得する
a.index(x)	存在する最初のインデックスをaリストの中のxが得る
a.index(x)	リストa内のxが存在する先頭のインデックスを取得する
a.index(x)	リストaの中のxが存在する最初のインデックスを得る
a.index(x)	存在する先頭の場所をaリスト内のxが得る
a.index(x)	存在するインデックスをaのxが得る
a.index(x)	存在する最初の場所をaの中のxが得る
a.index(x)	aリスト内のxが存在する先頭のインデックスを得る
a.index(x)	存在する先頭の場所をリストa内のxが得る
a.index(x)	存在する最初のインデックスをaの中のxが取得する
a.index(x)	存在するインデックスをaのxが取得する
a.index(x)	存在するインデックスをaリストのxが取得する
a.index(x)	リストaのxが存在するインデックスを取得する
a.index(x)	リストaの中のxが存在する最初のインデックスを取得する
a.index(x)	存在する先頭の場所をaリスト内のxが取得する
a.index(x)	aリスト内のxが存在する先頭の場所を得る
a.index(x)	aの中のxが存在する最初のインデックスを取得する
a.index(x)	aリスト内のxが存在する先頭の場所を取得する
a.index(x)	a内のxが存在する先頭のインデックスを取得する
a.index(x)	存在する最初のインデックスをa内のxが取得する
a.index(x)	aの中のxが存在する最初の場所を取得する
a.index(x)	a内のxが存在する先頭の場所を得る
a.index(x)	aリストのxが存在するインデックスを得る
a.index(x)	存在する先頭の場所をa内のxが取得する
a.index(x)	存在する先頭のインデックスをa内のxが取得する
a.index(x)	存在する最初のインデックスをaの中のxが得る
a.index(x)	リストa内のxが存在する先頭の場所を取得する
a.index(x)	aリストの中のxが存在する最初のインデックスを得る
a.index(x)	存在する最初のインデックスをリストaの中のxが得る
a.index(x)	存在する最初のインデックスをaリスト内のxが得る
a.index(x)	存在する最初の場所をaの中のxが取得する
a.index(x)	存在する最初の場所をaリスト内のxが得る
a.index(x)	リストaのxが存在するインデックスを得る
a.index(x)	a内のxが存在する最初のインデックスを取得する
a.index(x)	存在する最初のインデックスをリストaの中のxが取得する
a.index(x)	aリストの中のxが存在する最初の場所を得る
a.index(x)	存在する最初の場所をリストa内のxが得る
a.index(x)	存在する最初のインデックスをaリスト内のxが取得する
a.index(x)	aリストの中のxが存在する最初のインデックスを取得する
a.index(x)	aリスト内のxが存在する最初の場所を得る
a.index(x)	存在する先頭の場所をリストa内のxが取得する
a.index(x)	存在する先頭のインデックスをリストa内のxが得る
a.index(x)	存在する最初の場所をリストaの中のxが得る
a.index(x)	存在する先頭のインデックスをaリスト内のxが得る
a.index(x)	存在する最初のインデックスをリストa内のxが取得する
a.index(x)	存在するインデックスをリストaのxが取得する
a.index(x)	リストa内のxが存在する先頭の場所を得る
a.index(x)	リストa内のxが存在する最初のインデックスを得る
a.index(x)	リストaの中のxが存在する最初の場所を取得する
a.index(x)	存在する最初のインデックスをa内のxが得る
a.index(x)	存在する最初のインデックスをaリストの中のxが取得する
a.index(x)	存在する最初の場所をaリストの中のxが取得する
a.index(x)	a内のxが存在する最初の場所を得る
a.index(x)	存在するインデックスをaリストのxが得る
a.index(x)	存在する先頭のインデックスをリストa内のxが取得する
a.index(x)	aリスト内のxが存在する先頭のインデックスを取得する
a.index(x)	リストaの中のxが存在する最初の場所を得る
a.index(x)	aリストの中のxが存在する最初の場所を取得する
a.index(x)	存在する最初の場所をa内のxが取得する
a.index(x)	a内のxが存在する最初の場所を取得する
a.index(x)	aリスト内のxが存在する最初の場所を取得する
a.index(x)	存在する最初の場所をリストaの中のxが取得する
a.sort()	aを昇順にソートする
a.sort()	aリストを小さい順に並べ変える
a.sort()	リストaを小さい方から順に並べ直す
a.sort()	リストaを昇順にソートする
a.sort()	aを小さい順に並べ変える
a.sort()	リストaを小さい順に並べ変える
a.sort()	aリストを昇順にソートする
a.sort()	aを小さい順に並べる
a.sort()	aを小さい方から順に並べ直す
a.sort()	aリストを小さい順に並べる
a.sort()	aリストを小さい方から順に並べ直す
a.sort()	aを小さい方から順に並べ変える
a.sort()	aリストを小さい方から順に並べ変える
a.sort()	aリストを昇順に並べる
a.sort()	リストaを昇順に並べる
a.sort()	リストaを小さい方から順に並べ変える
a.sort()	リストaを小さい順に並べる
a.sort()	aを昇順に並べる
X = a.sort()	aを昇順にソートし、Xに代入する
X = a.sort()	aを昇順にソートされた結果をXにする
X = a.sort()	aを小さい方から順に並べ直し、Xに代入する
X = a.sort()	aを小さい方から順に並べ直した結果をXとする
X = a.sort()	aリストを昇順にソートして、Xとする
X = a.sort()	aリストを昇順にソートした結果をXに代入する
X = a.sort()	aを小さい順に並べ変えて、Xに代入する
X = a.sort()	aを小さい順に並べ変えた結果をXに代入する
X = a.sort()	リストaを小さい順に並べ変え、Xとする
X = a.sort()	リストaを小さい順に並べ変えた結果をXにする
X = a.sort()	aリストを小さい方から順に並べ変え、Xにする
X = a.sort()	aリストを小さい方から順に並べ変えた結果をXにする
X = a.sort()	リストaを小さい順に並べ、Xとする
X = a.sort()	リストaを小さい順に並べた結果をXに代入する
X = a.sort()	aリストを小さい方から順に並べ直して、Xとする
X = a.sort()	aリストを小さい方から順に並べ直された結果をXに代入する
X = a.sort()	リストaを昇順にソートし、Xにする
X = a.sort()	リストaを昇順にソートされた結果をXにする
X = a.sort()	リストaを昇順に並べ、Xに代入する
X = a.sort()	リストaを昇順に並べた結果をXにする
X = a.sort()	リストaを小さい方から順に並べ直して、Xとする
X = a.sort()	リストaを小さい方から順に並べ直した結果をXとする
X = a.sort()	aを小さい順に並べ、Xに代入する
X = a.sort()	aを小さい順に並べた結果をXに代入する
X = a.sort()	aリストを昇順に並べて、Xとする
X = a.sort()	aリストを昇順に並べた結果をXにする
X = a.sort()	aを昇順に並べ、Xにする
X = a.sort()	aを昇順に並べられた結果をXにする
X = a.sort()	リストaを小さい方から順に並べ変え、Xにする
X = a.sort()	リストaを小さい方から順に並べ変えた結果をXとする
X = a.sort()	aリストを小さい順に並べて、Xにする
X = a.sort()	aリストを小さい順に並べた結果をXに代入する
X = a.sort()	aを小さい方から順に並べ変え、Xとする
X = a.sort()	aを小さい方から順に並べ変えた結果をXとする
X = a.sort()	aリストを小さい順に並べ変えて、Xにする
X = a.sort()	aリストを小さい順に並べ変えられた結果をXとする
a.sort(reverse=True)	aを降順にソートする
a.sort(reverse=True)	リストaを大きい順に並べる
a.sort(reverse=True)	aを大きい順に並べる
a.sort(reverse=True)	リストaを逆順に並べ変える
a.sort(reverse=True)	リストaを降順にソートする
a.sort(reverse=True)	aを逆順に並べ変える
a.sort(reverse=True)	aリストを大きい順に並べる
a.sort(reverse=True)	aリストを大きい方から順に並べ直す
a.sort(reverse=True)	aリストを逆順に並べ変える
a.sort(reverse=True)	aを大きい方から順に並べ直す
a.sort(reverse=True)	aリストを降順にソートする
a.sort(reverse=True)	リストaを大きい方から順に並べ直す
X = a.sort(reverse=True)	aを降順にソートし、Xとする
X = a.sort(reverse=True)	aを降順にソートされた結果をXにする
X = a.sort(reverse=True)	aを大きい方から順に並べ直し、Xに代入する
X = a.sort(reverse=True)	aを大きい方から順に並べ直した結果をXとする
X = a.sort(reverse=True)	aを大きい順に並べ、Xにする
X = a.sort(reverse=True)	aを大きい順に並べた結果をXにする
X = a.sort(reverse=True)	リストaを大きい方から順に並べ直して、Xに代入する
X = a.sort(reverse=True)	リストaを大きい方から順に並べ直した結果をXにする
X = a.sort(reverse=True)	リストaを逆順に並べ変え、Xにする
X = a.sort(reverse=True)	リストaを逆順に並べ変えた結果をXとする
X = a.sort(reverse=True)	aリストを降順にソートし、Xに代入する
X = a.sort(reverse=True)	aリストを降順にソートされた結果をXにする
X = a.sort(reverse=True)	aリストを逆順に並べ変え、Xとする
X = a.sort(reverse=True)	aリストを逆順に並べ変えられた結果をXとする
X = a.sort(reverse=True)	リストaを降順にソートして、Xに代入する
X = a.sort(reverse=True)	リストaを降順にソートされた結果をXに代入する
X = a.sort(reverse=True)	リストaを大きい順に並べて、Xに代入する
X = a.sort(reverse=True)	リストaを大きい順に並べられた結果をXとする
X = a.sort(reverse=True)	aリストを大きい順に並べ、Xとする
X = a.sort(reverse=True)	aリストを大きい順に並べられた結果をXに代入する
X = a.sort(reverse=True)	aを逆順に並べ変えて、Xに代入する
X = a.sort(reverse=True)	aを逆順に並べ変えられた結果をXとする
X = a.sort(reverse=True)	aリストを大きい方から順に並べ直し、Xとする
X = a.sort(reverse=True)	aリストを大きい方から順に並べ直された結果をXに代入する
a.reverse()	aを降順にする
a.reverse()	リストaを逆順にする
a.reverse()	リストaを大きい方から順にする
a.reverse()	aを大きい方から順にする
a.reverse()	リストaを降順にする
a.reverse()	リストaを大きい順にする
a.reverse()	aリストを大きい順にする
a.reverse()	aを大きい順にする
a.reverse()	aリストを逆順にする
a.reverse()	aリストを大きい方から順にする
a.reverse()	aを逆順にする
a.reverse()	aリストを降順にする
X = a.reverse()	aを降順にして、Xとする
X = a.reverse()	aを降順にした結果をXとする
X = a.reverse()	aを大きい順にして、Xに代入する
X = a.reverse()	aを大きい順にした結果をXとする
X = a.reverse()	aリストを逆順にして、Xに代入する
X = a.reverse()	aリストを逆順にした結果をXにする
X = a.reverse()	aを逆順にし、Xに代入する
X = a.reverse()	aを逆順にした結果をXとする
X = a.reverse()	リストaを降順にして、Xにする
X = a.reverse()	リストaを降順にされた結果をXに代入する
X = a.reverse()	リストaを大きい順にし、Xにする
X = a.reverse()	リストaを大きい順にした結果をXに代入する
X = a.reverse()	aを大きい方から順にして、Xとする
X = a.reverse()	aを大きい方から順にされた結果をXにする
X = a.reverse()	リストaを大きい方から順にして、Xにする
X = a.reverse()	リストaを大きい方から順にした結果をXとする
X = a.reverse()	リストaを逆順にして、Xにする
X = a.reverse()	リストaを逆順にした結果をXに代入する
X = a.reverse()	aリストを大きい順にし、Xにする
X = a.reverse()	aリストを大きい順にした結果をXにする
X = a.reverse()	aリストを大きい方から順にして、Xにする
X = a.reverse()	aリストを大きい方から順にされた結果をXとする
X = a.reverse()	aリストを降順にし、Xとする
X = a.reverse()	aリストを降順にされた結果をXにする
a.copy()	aのコピー
a.copy()	aリストのコピー
a.copy()	リストaのコピー
X = a.copy()	aのコピーをXに代入する
X = a.copy()	aリストのコピーをXに代入する
X = a.copy()	リストaのコピーをXにする
sorted(a)	aを昇順にソートする
sorted(a)	aを小さい順に並べ変える
sorted(a)	aを小さい順に並べる
sorted(a)	aを小さい方から順に並べ直す
sorted(a)	aを昇順に並べる
sorted(a)	aを小さい方から順に並べ変える
sorted(a)	aを昇順にソートした列
sorted(a)	aを昇順に並べた列
sorted(a)	昇順にaを並べ直した列
sorted(a)	aを昇順に並べ変えた列
sorted(a)	昇順にaを並べた列
sorted(a)	aを昇順に並べ直した列
sorted(a)	昇順にaを並べ変えた列
sorted(a)	昇順にaをソートした列
sorted(a, reverse=True)	aを降順にソートする
sorted(a, reverse=True)	aを逆順にソートする
sorted(a, reverse=True)	aを大きい方から順にソートする
sorted(a, reverse=True)	aを大きい順にソートする
sorted(a, reverse=True)	aを降順にソートした列
sorted(a, reverse=True)	降順にaをソートした列
sorted(a, key=abs)	aにabs関数を適用してソートする
sorted(a, key=abs)	abs関数をaに適用してソートする
sorted(a, key=abs)	aを絶対値に直してソートする
sorted(a, key=abs)	絶対値にaを直してソートする
sorted(a, key=abs)	aを絶対値に直してソートした列
sorted(a, key=abs)	絶対値にaを直してソートした列
sorted(a, key=abs)	aの各要素の絶対値でソートする
reversed(a)	aを降順にする
reversed(a)	aを大きい順にする
reversed(a)	aを大きい方から順にする
reversed(a)	aを逆順にする
reversed(a)	aをリバースした列
reversed(a)	aを反転した列
reversed(a)	aを逆にした列
all(l)	l内の全ての要素が真かどうか
all(l)	リストlの全ての要素が真かどうか
all(l)	lリスト内の全ての要素が真かどうか
all(l)	リストlに含まれる全ての要素が真かどうか
all(l)	lに含まれる全ての要素が真かどうか
all(l)	リストlに含まれる全ての値が真かどうか
all(l)	リストlの全ての値が真かどうか
all(l)	リストl内の全ての要素が真かどうか
all(l)	lリストの全ての値が真かどうか
all(l)	lの全ての値が真かどうか
all(l)	lに含まれる全ての値が真かどうか
all(l)	リストl内の全ての値が真かどうか
all(l)	lリスト内の全ての値が真かどうか
all(l)	lの全ての要素が真かどうか
all(l)	lリストに含まれる全ての値が真かどうか
all(l)	l内の全ての値が真かどうか
all(l)	lリストに含まれる全ての要素が真かどうか
all(l)	lリストの全ての要素が真かどうか
all(l)	l内の要素が全て真かどうか
all(l)	リストlに含まれる要素が全て真かどうか
all(l)	lリストに含まれる要素が全て真かどうか
all(l)	リストl内の要素が全て真かどうか
all(l)	リストl内の値が全て真かどうか
all(l)	リストlの値が全て真かどうか
all(l)	lの値が全て真かどうか
all(l)	lリストに含まれる値が全て真かどうか
all(l)	lリストの値が全て真かどうか
all(l)	l内の値が全て真かどうか
all(l)	lの要素が全て真かどうか
all(l)	lリスト内の値が全て真かどうか
all(l)	lに含まれる値が全て真かどうか
all(l)	リストlに含まれる値が全て真かどうか
all(l)	lリストの要素が全て真かどうか
all(l)	リストlの要素が全て真かどうか
all(l)	lに含まれる要素が全て真かどうか
all(l)	lリスト内の要素が全て真かどうか
any(l)	l内の少なくともひとつの要素が真かどうか
any(l)	lに含まれる少なくともひとつの要素が真かどうか
any(l)	リストl内の少なくともひとつの要素が真かどうか
any(l)	lに含まれるどれかの値が真かどうか
any(l)	リストlのどれかの要素が真かどうか
any(l)	lリストのどれかの要素が真かどうか
any(l)	lに含まれる少なくともひとつの値が真かどうか
any(l)	lリスト内の少なくともひとつの要素が真かどうか
any(l)	リストl内の少なくともひとつの値が真かどうか
any(l)	l内の少なくともひとつの値が真かどうか
any(l)	lのどれかの要素が真かどうか
any(l)	lリストに含まれる少なくともひとつの要素が真かどうか
any(l)	リストlのどれかの値が真かどうか
any(l)	リストlに含まれる少なくともひとつの要素が真かどうか
any(l)	lリストのどれかの値が真かどうか
any(l)	リストlに含まれる少なくともひとつの値が真かどうか
any(l)	リストlに含まれるどれかの値が真かどうか
any(l)	lリスト内の少なくともひとつの値が真かどうか
any(l)	lリストに含まれる少なくともひとつの値が真かどうか
any(l)	lリストに含まれるどれかの値が真かどうか
any(l)	lリストに含まれるどれかの要素が真かどうか
any(l)	lに含まれるどれかの要素が真かどうか
any(l)	リストlに含まれるどれかの要素が真かどうか
any(l)	lのどれかの値が真かどうか
any(l)	l内の要素が少なくともひとつは真かどうか
any(l)	lリストに含まれる要素が少なくともひとつは真かどうか
any(l)	lリスト内の要素が少なくともひとつは真かどうか
any(l)	lの値がどれかは真かどうか
any(l)	リストlの要素がどれかは真かどうか
any(l)	l内の値が少なくともひとつは真かどうか
any(l)	リストlに含まれる値がどれかは真かどうか
any(l)	リストl内の値が少なくともひとつは真かどうか
any(l)	リストlに含まれる要素がどれかは真かどうか
any(l)	リストl内の要素が少なくともひとつは真かどうか
any(l)	lリスト内の値が少なくともひとつは真かどうか
any(l)	lリストの要素がどれかは真かどうか
any(l)	lリストの値がどれかは真かどうか
any(l)	lリストに含まれる要素がどれかは真かどうか
any(l)	リストlに含まれる要素が少なくともひとつは真かどうか
any(l)	lに含まれる値が少なくともひとつは真かどうか
any(l)	リストlの値がどれかは真かどうか
any(l)	lの要素がどれかは真かどうか
any(l)	lリストに含まれる値がどれかは真かどうか
any(l)	lに含まれる要素がどれかは真かどうか
any(l)	lリストに含まれる値が少なくともひとつは真かどうか
any(l)	lに含まれる値がどれかは真かどうか
any(l)	lに含まれる要素が少なくともひとつは真かどうか
any(l)	リストlに含まれる値が少なくともひとつは真かどうか
[0 for i in range(n)]	n個の0が含まれるリスト
X = [0 for i in range(n)]	n個の0が含まれるリストをXにする
[i for i in range(1, 101)]	1から100までの数が並んだリスト
X = [i for i in range(1, 101)]	1から100までの数が並んだリストをXに代入する
[i for i in range(1, 101)]	1以上101未満の数が並んだリスト
X = [i for i in range(1, 101)]	1以上101未満の数が並んだリストをXにする
''	空文字
'\n'	改行文字
'\n'	改行
'\t'	タブ文字
'\t'	タブ
' '	空白文字
' '	空白
' '	半角スペース
' '	スペース
chr(x)	文字コードxの文字
ord(x)	xの文字コード
bin(x)	xの2進数表現
bin(x)	xの2進数文字列
bin(x)	xの2進数表記
oct(x)	xの8進数表記
oct(x)	xの8進数表現
oct(x)	xの8進数文字列
hex(x)	xの16進数表記
hex(x)	xの16進数文字列
hex(x)	xの16進数表現
x.to_bytes()	xのバイト列
byteorder='big'	ビッグエンディアンとして
byteorder='little'	リトルエンディアンとして
x.from_bytes()	バイト列xからの整数値
x.from_bytes()	バイト列xからの数字
x.from_bytes()	バイト列xからの数値
x.is_integer()	xが整数かどうか
s.upper()	sを英大文字に変換した文字列
s.upper()	英大文字にsを変換した文字列
s.upper()	英大文字に文字列sを変換した値
s.upper()	英大文字にsを変換したデータ
s.upper()	s文字列を英大文字に変換した値
s.upper()	sを英大文字に変換したデータ
s.upper()	文字列sを英大文字に変換した値
s.upper()	s文字列を英大文字に変換した文字列
s.upper()	英大文字に文字列sを変換した文字列
s.upper()	文字列sを英大文字に変換した文字列
s.upper()	sを英大文字に変換した値
s.upper()	英大文字にs文字列を変換したデータ
s.upper()	英大文字にsを変換した値
s.upper()	英大文字にs文字列を変換した値
s.upper()	s文字列を英大文字に変換したデータ
s.upper()	英大文字にs文字列を変換した文字列
s.upper()	文字列sを英大文字に変換したデータ
s.upper()	英大文字に文字列sを変換したデータ
X = s.upper()	sを英大文字に変換した文字列をXに代入する
X = s.upper()	英大文字にs文字列を変換した文字列をXにする
X = s.upper()	英大文字に文字列sを変換したデータをXにする
X = s.upper()	s文字列を英大文字に変換した値をXに代入する
X = s.upper()	文字列sを英大文字に変換したデータをXに代入する
X = s.upper()	文字列sを英大文字に変換した値をXに代入する
X = s.upper()	文字列sを英大文字に変換した文字列をXにする
X = s.upper()	英大文字にsを変換したデータをXとする
X = s.upper()	英大文字にsを変換した文字列をXに代入する
X = s.upper()	s文字列を英大文字に変換した文字列をXにする
X = s.upper()	s文字列を英大文字に変換したデータをXに代入する
X = s.upper()	sを英大文字に変換した値をXとする
X = s.upper()	英大文字に文字列sを変換した値をXに代入する
X = s.upper()	英大文字にs文字列を変換したデータをXに代入する
X = s.upper()	英大文字にs文字列を変換した値をXとする
X = s.upper()	英大文字に文字列sを変換した文字列をXとする
X = s.upper()	sを英大文字に変換したデータをXにする
X = s.upper()	英大文字にsを変換した値をXに代入する
s.upper()	s内の小文字を大文字に置き換える
s.upper()	文字列sの中の小文字を大文字に直す
s.upper()	s内の小文字を大文字に変換する
s.upper()	文字列s内の小文字を大文字に直す
s.upper()	s文字列内の小文字を大文字に変換する
s.upper()	s文字列の小文字を大文字に直す
s.upper()	文字列sの中の小文字を大文字にする
s.upper()	s内の小文字を大文字に直す
s.upper()	sの小文字を大文字に直す
s.upper()	s文字列の中の小文字を大文字に直す
s.upper()	文字列sの小文字を大文字に直す
s.upper()	文字列s内の小文字を大文字に置き換える
s.upper()	s文字列内の小文字を大文字に直す
s.upper()	s文字列の中の小文字を大文字にする
s.upper()	s内の小文字を大文字にする
s.upper()	sの中の小文字を大文字にする
s.upper()	sの中の小文字を大文字に直す
s.upper()	文字列s内の小文字を大文字に変換する
s.upper()	s文字列内の小文字を大文字にする
s.upper()	s文字列内の小文字を大文字に置き換える
s.upper()	文字列s内の小文字を大文字にする
X = s.upper()	s内の小文字を大文字にして、Xに代入する
X = s.upper()	s内の小文字を大文字にした結果をXとする
X = s.upper()	文字列sの中の小文字を大文字にし、Xとする
X = s.upper()	文字列sの中の小文字を大文字にした結果をXに代入する
X = s.upper()	sの中の小文字を大文字にして、Xとする
X = s.upper()	sの中の小文字を大文字にした結果をXにする
X = s.upper()	s文字列の中の小文字を大文字に直し、Xに代入する
X = s.upper()	s文字列の中の小文字を大文字に直した結果をXにする
X = s.upper()	文字列s内の小文字を大文字にし、Xに代入する
X = s.upper()	文字列s内の小文字を大文字にした結果をXに代入する
X = s.upper()	s内の小文字を大文字に直し、Xとする
X = s.upper()	s内の小文字を大文字に直した結果をXとする
X = s.upper()	文字列s内の小文字を大文字に変換して、Xに代入する
X = s.upper()	文字列s内の小文字を大文字に変換した結果をXとする
X = s.upper()	s文字列の小文字を大文字に直して、Xとする
X = s.upper()	s文字列の小文字を大文字に直された結果をXとする
X = s.upper()	sの小文字を大文字に直して、Xにする
X = s.upper()	sの小文字を大文字に直された結果をXとする
X = s.upper()	文字列sの小文字を大文字に直し、Xにする
X = s.upper()	文字列sの小文字を大文字に直した結果をXに代入する
X = s.upper()	s文字列の中の小文字を大文字にして、Xにする
X = s.upper()	s文字列の中の小文字を大文字にした結果をXとする
X = s.upper()	sの中の小文字を大文字に直して、Xとする
X = s.upper()	sの中の小文字を大文字に直された結果をXとする
X = s.upper()	s文字列内の小文字を大文字に直して、Xとする
X = s.upper()	s文字列内の小文字を大文字に直した結果をXにする
X = s.upper()	s文字列内の小文字を大文字にして、Xにする
X = s.upper()	s文字列内の小文字を大文字にされた結果をXに代入する
X = s.upper()	s文字列内の小文字を大文字に置き換えて、Xにする
X = s.upper()	s文字列内の小文字を大文字に置き換えられた結果をXにする
X = s.upper()	s内の小文字を大文字に変換し、Xとする
X = s.upper()	s内の小文字を大文字に変換された結果をXにする
X = s.upper()	s内の小文字を大文字に置き換え、Xにする
X = s.upper()	s内の小文字を大文字に置き換えた結果をXにする
X = s.upper()	文字列s内の小文字を大文字に置き換え、Xに代入する
X = s.upper()	文字列s内の小文字を大文字に置き換えた結果をXに代入する
X = s.upper()	s文字列内の小文字を大文字に変換して、Xに代入する
X = s.upper()	s文字列内の小文字を大文字に変換された結果をXとする
X = s.upper()	文字列s内の小文字を大文字に直し、Xとする
X = s.upper()	文字列s内の小文字を大文字に直された結果をXとする
X = s.upper()	文字列sの中の小文字を大文字に直し、Xにする
X = s.upper()	文字列sの中の小文字を大文字に直した結果をXとする
s.upper()	sを全て大文字に変換する
s.upper()	s文字列を全て大文字にする
s.upper()	sを全て大文字に置き換える
s.upper()	s文字列を全て大文字に置き換える
s.upper()	sを全て大文字に直す
s.upper()	文字列sを全て大文字に置き換える
s.upper()	s文字列を全て大文字に直す
s.upper()	文字列sを全て大文字に直す
s.upper()	s文字列を全て大文字に変換する
s.upper()	sを全て大文字にする
s.upper()	文字列sを全て大文字に変換する
s.upper()	文字列sを全て大文字にする
X = s.upper()	sを全て大文字に変換し、Xとする
X = s.upper()	sを全て大文字に変換された結果をXとする
X = s.upper()	s文字列を全て大文字に直して、Xにする
X = s.upper()	s文字列を全て大文字に直された結果をXに代入する
X = s.upper()	s文字列を全て大文字に変換し、Xとする
X = s.upper()	s文字列を全て大文字に変換された結果をXとする
X = s.upper()	文字列sを全て大文字に変換し、Xにする
X = s.upper()	文字列sを全て大文字に変換された結果をXに代入する
X = s.upper()	文字列sを全て大文字に置き換えて、Xとする
X = s.upper()	文字列sを全て大文字に置き換えられた結果をXとする
X = s.upper()	sを全て大文字にして、Xにする
X = s.upper()	sを全て大文字にした結果をXにする
X = s.upper()	sを全て大文字に置き換え、Xとする
X = s.upper()	sを全て大文字に置き換えられた結果をXとする
X = s.upper()	文字列sを全て大文字に直し、Xとする
X = s.upper()	文字列sを全て大文字に直した結果をXにする
X = s.upper()	s文字列を全て大文字に置き換えて、Xにする
X = s.upper()	s文字列を全て大文字に置き換えた結果をXにする
X = s.upper()	s文字列を全て大文字にして、Xに代入する
X = s.upper()	s文字列を全て大文字にした結果をXにする
X = s.upper()	文字列sを全て大文字にして、Xとする
X = s.upper()	文字列sを全て大文字にした結果をXとする
X = s.upper()	sを全て大文字に直して、Xに代入する
X = s.upper()	sを全て大文字に直された結果をXとする
s.lower()	sを英小文字に変換した文字列
s.lower()	sデータを英小文字に変換した文字列
s.lower()	データsを英小文字に変換した文字列
s.lower()	英小文字にsを変換した文字列
s.lower()	sを英小文字に変換したデータ
s.lower()	英小文字にsデータを変換したデータ
s.lower()	英小文字にsを変換したデータ
s.lower()	英小文字にデータsを変換した値
s.lower()	英小文字にデータsを変換したデータ
s.lower()	英小文字にデータsを変換した文字列
s.lower()	sデータを英小文字に変換したデータ
s.lower()	データsを英小文字に変換したデータ
s.lower()	sデータを英小文字に変換した値
s.lower()	データsを英小文字に変換した値
s.lower()	英小文字にsを変換した値
s.lower()	sを英小文字に変換した値
s.lower()	英小文字にsデータを変換した値
s.lower()	英小文字にsデータを変換した文字列
X = s.lower()	sを英小文字に変換した文字列をXに代入する
X = s.lower()	英小文字にデータsを変換した文字列をXとする
X = s.lower()	英小文字にsを変換したデータをXとする
X = s.lower()	sを英小文字に変換した値をXに代入する
X = s.lower()	英小文字にsデータを変換した文字列をXに代入する
X = s.lower()	英小文字にsデータを変換した値をXにする
X = s.lower()	英小文字にデータsを変換した値をXとする
X = s.lower()	英小文字にデータsを変換したデータをXにする
X = s.lower()	sデータを英小文字に変換したデータをXにする
X = s.lower()	英小文字にsを変換した文字列をXに代入する
X = s.lower()	英小文字にsを変換した値をXとする
X = s.lower()	sデータを英小文字に変換した値をXにする
X = s.lower()	データsを英小文字に変換したデータをXにする
X = s.lower()	sを英小文字に変換したデータをXに代入する
X = s.lower()	データsを英小文字に変換した値をXとする
X = s.lower()	英小文字にsデータを変換したデータをXに代入する
X = s.lower()	データsを英小文字に変換した文字列をXに代入する
X = s.lower()	sデータを英小文字に変換した文字列をXとする
s.lower()	s内の大文字を小文字に置き換える
s.lower()	sデータの中の大文字を小文字にする
s.lower()	sデータの中の大文字を小文字に直す
s.lower()	データs内の大文字を小文字に変換する
s.lower()	sの大文字を小文字に直す
s.lower()	データs内の大文字を小文字に直す
s.lower()	sデータの大文字を小文字に直す
s.lower()	s内の大文字を小文字に変換する
s.lower()	データsの中の大文字を小文字にする
s.lower()	sの中の大文字を小文字にする
s.lower()	データsの大文字を小文字に直す
s.lower()	データsの中の大文字を小文字に直す
s.lower()	s内の大文字を小文字に直す
s.lower()	sの中の大文字を小文字に直す
s.lower()	データs内の大文字を小文字に置き換える
s.lower()	sデータ内の大文字を小文字に直す
s.lower()	sデータ内の大文字を小文字に置き換える
s.lower()	s内の大文字を小文字にする
s.lower()	sデータ内の大文字を小文字に変換する
s.lower()	sデータ内の大文字を小文字にする
X = s.lower()	s内の大文字を小文字に直して、Xとする
X = s.lower()	s内の大文字を小文字に直された結果をXに代入する
X = s.lower()	sデータ内の大文字を小文字にして、Xにする
X = s.lower()	sデータ内の大文字を小文字にした結果をXとする
X = s.lower()	sデータの中の大文字を小文字にし、Xにする
X = s.lower()	sデータの中の大文字を小文字にした結果をXとする
X = s.lower()	データsの中の大文字を小文字にして、Xとする
X = s.lower()	データsの中の大文字を小文字にした結果をXにする
X = s.lower()	sの中の大文字を小文字に直して、Xとする
X = s.lower()	sの中の大文字を小文字に直した結果をXに代入する
X = s.lower()	sデータの大文字を小文字に直して、Xにする
X = s.lower()	sデータの大文字を小文字に直した結果をXに代入する
X = s.lower()	データsの中の大文字を小文字に直して、Xに代入する
X = s.lower()	データsの中の大文字を小文字に直した結果をXにする
X = s.lower()	s内の大文字を小文字に変換して、Xとする
X = s.lower()	s内の大文字を小文字に変換した結果をXに代入する
X = s.lower()	sデータ内の大文字を小文字に置き換え、Xにする
X = s.lower()	sデータ内の大文字を小文字に置き換えた結果をXとする
X = s.lower()	sの大文字を小文字に直して、Xにする
X = s.lower()	sの大文字を小文字に直した結果をXとする
X = s.lower()	データsの大文字を小文字に直して、Xにする
X = s.lower()	データsの大文字を小文字に直した結果をXに代入する
X = s.lower()	s内の大文字を小文字に置き換え、Xとする
X = s.lower()	s内の大文字を小文字に置き換えた結果をXにする
X = s.lower()	データs内の大文字を小文字に変換し、Xにする
X = s.lower()	データs内の大文字を小文字に変換された結果をXに代入する
X = s.lower()	sの中の大文字を小文字にし、Xとする
X = s.lower()	sの中の大文字を小文字にされた結果をXに代入する
X = s.lower()	sデータ内の大文字を小文字に直し、Xにする
X = s.lower()	sデータ内の大文字を小文字に直した結果をXにする
X = s.lower()	sデータの中の大文字を小文字に直して、Xとする
X = s.lower()	sデータの中の大文字を小文字に直した結果をXとする
X = s.lower()	sデータ内の大文字を小文字に変換し、Xとする
X = s.lower()	sデータ内の大文字を小文字に変換した結果をXにする
X = s.lower()	s内の大文字を小文字にし、Xにする
X = s.lower()	s内の大文字を小文字にした結果をXに代入する
X = s.lower()	データs内の大文字を小文字にし、Xに代入する
X = s.lower()	データs内の大文字を小文字にした結果をXとする
X = s.lower()	データs内の大文字を小文字に直して、Xにする
X = s.lower()	データs内の大文字を小文字に直した結果をXにする
X = s.lower()	データs内の大文字を小文字に置き換え、Xにする
X = s.lower()	データs内の大文字を小文字に置き換えた結果をXにする
s.lower()	sを全て小文字に変換する
s.lower()	sデータを全て小文字に置き換える
s.lower()	sデータを全て小文字に変換する
s.lower()	sを全て小文字に直す
s.lower()	sを全て小文字にする
s.lower()	データsを全て小文字に変換する
s.lower()	sデータを全て小文字に直す
s.lower()	データsを全て小文字に直す
s.lower()	sデータを全て小文字にする
s.lower()	sを全て小文字に置き換える
s.lower()	データsを全て小文字にする
s.lower()	データsを全て小文字に置き換える
X = s.lower()	sを全て小文字に変換して、Xにする
X = s.lower()	sを全て小文字に変換された結果をXにする
X = s.lower()	sデータを全て小文字に直して、Xに代入する
X = s.lower()	sデータを全て小文字に直された結果をXに代入する
X = s.lower()	sを全て小文字に直して、Xにする
X = s.lower()	sを全て小文字に直した結果をXに代入する
X = s.lower()	sを全て小文字にして、Xとする
X = s.lower()	sを全て小文字にされた結果をXに代入する
X = s.lower()	sデータを全て小文字に変換して、Xにする
X = s.lower()	sデータを全て小文字に変換した結果をXにする
X = s.lower()	sデータを全て小文字にし、Xにする
X = s.lower()	sデータを全て小文字にした結果をXに代入する
X = s.lower()	データsを全て小文字に変換し、Xにする
X = s.lower()	データsを全て小文字に変換された結果をXに代入する
X = s.lower()	データsを全て小文字に直し、Xとする
X = s.lower()	データsを全て小文字に直された結果をXに代入する
X = s.lower()	sを全て小文字に置き換えて、Xにする
X = s.lower()	sを全て小文字に置き換えた結果をXとする
X = s.lower()	データsを全て小文字にし、Xとする
X = s.lower()	データsを全て小文字にされた結果をXに代入する
X = s.lower()	データsを全て小文字に置き換え、Xにする
X = s.lower()	データsを全て小文字に置き換えられた結果をXに代入する
X = s.lower()	sデータを全て小文字に置き換え、Xに代入する
X = s.lower()	sデータを全て小文字に置き換えた結果をXにする
list(s)	sの文字リスト
list(s)	値sの文字リスト
list(s)	s値の文字リスト
X = list(s)	sの文字リストをXにする
X = list(s)	値sの文字リストをXにする
X = list(s)	s値の文字リストをXとする
s.split()	sを空白で分割した文字列のリスト
s.split()	sをスペースで分割した値のリスト
s.split()	s値を半角スペースで分割したデータのリスト
s.split()	s値をスペースで分割した値のリスト
s.split()	s値を空白で分割した値のリスト
s.split()	値sを空白で分割した値のリスト
s.split()	s値を空白で分割した文字列のリスト
s.split()	sを半角スペースで分割した値のリスト
s.split()	sを半角スペースで分割した文字列のリスト
s.split()	値sを空白で分割した文字列のリスト
s.split()	s値を空白で分割したデータのリスト
s.split()	値sを半角スペースで分割したデータのリスト
s.split()	値sをスペースで分割した値のリスト
s.split()	sをスペースで分割した文字列のリスト
s.split()	値sをスペースで分割した文字列のリスト
s.split()	sをスペースで分割したデータのリスト
s.split()	値sを半角スペースで分割した値のリスト
s.split()	値sを空白で分割したデータのリスト
s.split()	sを空白で分割したデータのリスト
s.split()	s値を半角スペースで分割した値のリスト
s.split()	s値を半角スペースで分割した文字列のリスト
s.split()	s値をスペースで分割したデータのリスト
s.split()	値sを半角スペースで分割した文字列のリスト
s.split()	sを半角スペースで分割したデータのリスト
s.split()	s値をスペースで分割した文字列のリスト
s.split()	値sをスペースで分割したデータのリスト
s.split()	sを空白で分割した値のリスト
X = s.split()	sを空白で分割した文字列のリストをXとする
X = s.split()	値sを空白で分割したデータのリストをXにする
X = s.split()	s値を半角スペースで分割した値のリストをXとする
X = s.split()	値sを半角スペースで分割した値のリストをXに代入する
X = s.split()	s値をスペースで分割した文字列のリストをXとする
X = s.split()	sを半角スペースで分割した文字列のリストをXに代入する
X = s.split()	値sを半角スペースで分割したデータのリストをXに代入する
X = s.split()	sを半角スペースで分割した値のリストをXにする
X = s.split()	sを空白で分割したデータのリストをXに代入する
X = s.split()	sをスペースで分割したデータのリストをXに代入する
X = s.split()	s値を空白で分割した値のリストをXにする
X = s.split()	sをスペースで分割した文字列のリストをXに代入する
X = s.split()	sを半角スペースで分割したデータのリストをXとする
X = s.split()	値sをスペースで分割した値のリストをXとする
X = s.split()	s値を半角スペースで分割したデータのリストをXに代入する
X = s.split()	sを空白で分割した値のリストをXとする
X = s.split()	値sをスペースで分割した文字列のリストをXに代入する
X = s.split()	s値をスペースで分割した値のリストをXとする
X = s.split()	値sを空白で分割した文字列のリストをXにする
X = s.split()	s値を空白で分割したデータのリストをXとする
X = s.split()	値sを半角スペースで分割した文字列のリストをXとする
X = s.split()	sをスペースで分割した値のリストをXに代入する
X = s.split()	s値をスペースで分割したデータのリストをXとする
X = s.split()	s値を空白で分割した文字列のリストをXとする
X = s.split()	値sを空白で分割した値のリストをXにする
X = s.split()	値sをスペースで分割したデータのリストをXとする
X = s.split()	s値を半角スペースで分割した文字列のリストをXとする
s.split()	sを空白で分割してリストを返す
s.split()	s値をスペースで分割してリストを返す
s.split()	sを半角スペースで分割してリストを返す
s.split()	s値を半角スペースで分割してリストを返す
s.split()	値sを半角スペースで分割してリストを返す
s.split()	sをスペースで分割してリストを返す
s.split()	値sをスペースで分割してリストを返す
s.split()	値sを空白で分割してリストを返す
s.split()	s値を空白で分割してリストを返す
X = s.split()	sを空白で分割してリストを返して、Xに代入する
X = s.split()	sを空白で分割してリストを返した結果をXに代入する
X = s.split()	値sを半角スペースで分割してリストを返し、Xにする
X = s.split()	値sを半角スペースで分割してリストを返された結果をXとする
X = s.split()	値sを空白で分割してリストを返して、Xにする
X = s.split()	値sを空白で分割してリストを返した結果をXにする
X = s.split()	sを半角スペースで分割してリストを返して、Xとする
X = s.split()	sを半角スペースで分割してリストを返した結果をXに代入する
X = s.split()	sをスペースで分割してリストを返して、Xに代入する
X = s.split()	sをスペースで分割してリストを返した結果をXに代入する
X = s.split()	s値をスペースで分割してリストを返し、Xとする
X = s.split()	s値をスペースで分割してリストを返した結果をXとする
X = s.split()	s値を半角スペースで分割してリストを返して、Xとする
X = s.split()	s値を半角スペースで分割してリストを返された結果をXとする
X = s.split()	値sをスペースで分割してリストを返し、Xとする
X = s.split()	値sをスペースで分割してリストを返した結果をXに代入する
X = s.split()	s値を空白で分割してリストを返し、Xとする
X = s.split()	s値を空白で分割してリストを返した結果をXとする
s.split()	空白を区切り文字としてsを分割した結果をリスト型にして返す
s.split()	スペースを区切り文字に指定してsを分割した結果をリストにする
s.split()	半角スペースを区切り文字に設定してs値を分割した結果をリスト型にする
s.split()	空白を区切り文字に設定して値sを分割した結果をリスト型に直す
s.split()	半角スペースを区切り文字に指定してs値を分割した結果をリスト型にする
s.split()	半角スペースを区切り文字に設定してsを分割した結果をリスト型にして返す
s.split()	空白を区切り文字に設定してsを分割した結果をリスト型にして返す
s.split()	空白を区切り文字に指定してs値を分割した結果をリストにする
s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリストにする
s.split()	空白を区切り文字に指定してsを分割した結果をリスト型に直す
s.split()	空白を区切り文字に指定してs値を分割した結果をリスト型にする
s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリスト型に直す
s.split()	半角スペースを区切り文字としてsを分割した結果をリスト型にして返す
s.split()	半角スペースを区切り文字に指定してs値を分割した結果をリストに直す
s.split()	空白を区切り文字としてs値を分割した結果をリスト型にして返す
s.split()	空白を区切り文字に設定してs値を分割した結果をリストにして返す
s.split()	半角スペースを区切り文字に設定してs値を分割した結果をリストにして返す
s.split()	半角スペースを区切り文字としてs値を分割した結果をリストにして返す
s.split()	空白を区切り文字に指定してsを分割した結果をリストにする
s.split()	スペースを区切り文字に指定して値sを分割した結果をリスト型にする
s.split()	半角スペースを区切り文字に指定してsを分割した結果をリストに直す
s.split()	スペースを区切り文字に指定してs値を分割した結果をリスト型に直す
s.split()	空白を区切り文字に設定して値sを分割した結果をリストにする
s.split()	空白を区切り文字に設定してs値を分割した結果をリスト型にして返す
s.split()	空白を区切り文字として値sを分割した結果をリスト型にして返す
s.split()	空白を区切り文字に設定してsを分割した結果をリストにして返す
s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストにする
s.split()	空白を区切り文字に指定して値sを分割した結果をリスト型にする
s.split()	スペースを区切り文字として値sを分割した結果をリストにして返す
s.split()	スペースを区切り文字に指定してs値を分割した結果をリスト型にする
s.split()	空白を区切り文字に設定してs値を分割した結果をリスト型に直す
s.split()	空白を区切り文字に指定してsを分割した結果をリスト型にする
s.split()	空白を区切り文字として値sを分割した結果をリストにして返す
s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストに直す
s.split()	半角スペースを区切り文字としてsを分割した結果をリストにして返す
s.split()	スペースを区切り文字に設定して値sを分割した結果をリストにする
s.split()	スペースを区切り文字としてsを分割した結果をリストにして返す
s.split()	空白を区切り文字に設定してsを分割した結果をリストに直す
s.split()	空白を区切り文字に指定して値sを分割した結果をリストにする
s.split()	スペースを区切り文字に指定して値sを分割した結果をリストに直す
s.split()	半角スペースを区切り文字に指定してsを分割した結果をリスト型にする
s.split()	スペースを区切り文字としてsを分割した結果をリスト型にして返す
s.split()	スペースを区切り文字としてs値を分割した結果をリストにして返す
s.split()	半角スペースを区切り文字としてs値を分割した結果をリスト型にして返す
s.split()	空白を区切り文字に指定してsを分割した結果をリストに直す
s.split()	半角スペースを区切り文字に指定してs値を分割した結果をリスト型に直す
s.split()	空白を区切り文字に設定して値sを分割した結果をリスト型にする
s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリスト型にする
s.split()	半角スペースを区切り文字に指定してsを分割した結果をリストにする
s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストにして返す
s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリストに直す
s.split()	スペースを区切り文字に設定してs値を分割した結果をリストにして返す
s.split()	スペースを区切り文字としてs値を分割した結果をリスト型にして返す
s.split()	スペースを区切り文字に設定してsを分割した結果をリスト型にして返す
s.split()	空白を区切り文字に指定してs値を分割した結果をリストに直す
s.split()	半角スペースを区切り文字に設定してs値を分割した結果をリストに直す
s.split()	空白を区切り文字に指定してs値を分割した結果をリスト型に直す
s.split()	スペースを区切り文字に設定してsを分割した結果をリストにする
s.split()	空白を区切り文字に設定してs値を分割した結果をリストにする
s.split()	スペースを区切り文字に設定してs値を分割した結果をリスト型に直す
s.split()	半角スペースを区切り文字として値sを分割した結果をリスト型にして返す
s.split()	スペースを区切り文字に設定してs値を分割した結果をリスト型にする
s.split()	空白を区切り文字に設定してsを分割した結果をリスト型にする
s.split()	半角スペースを区切り文字に指定してs値を分割した結果をリストにする
s.split()	スペースを区切り文字に指定してsを分割した結果をリスト型にする
s.split()	半角スペースを区切り文字として値sを分割した結果をリストにして返す
s.split()	スペースを区切り文字に設定して値sを分割した結果をリストにして返す
s.split()	空白を区切り文字に指定して値sを分割した結果をリスト型に直す
s.split()	スペースを区切り文字に指定して値sを分割した結果をリスト型に直す
s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストにして返す
X = s.split()	空白を区切り文字としてsを分割した結果をリスト型にして返し、Xとする
X = s.split()	空白を区切り文字としてsを分割した結果をリスト型にして返した結果をXに代入する
X = s.split()	空白を区切り文字として値sを分割した結果をリスト型にして返して、Xにする
X = s.split()	空白を区切り文字として値sを分割した結果をリスト型にして返された結果をXとする
X = s.split()	スペースを区切り文字としてs値を分割した結果をリストにして返して、Xに代入する
X = s.split()	スペースを区切り文字としてs値を分割した結果をリストにして返した結果をXに代入する
X = s.split()	半角スペースを区切り文字に指定してs値を分割した結果をリストにして、Xに代入する
X = s.split()	半角スペースを区切り文字に指定してs値を分割した結果をリストにした結果をXにする
X = s.split()	半角スペースを区切り文字として値sを分割した結果をリストにして返し、Xとする
X = s.split()	半角スペースを区切り文字として値sを分割した結果をリストにして返した結果をXとする
X = s.split()	空白を区切り文字に設定して値sを分割した結果をリストにして返して、Xに代入する
X = s.split()	空白を区切り文字に設定して値sを分割した結果をリストにして返された結果をXに代入する
X = s.split()	半角スペースを区切り文字としてs値を分割した結果をリストにして返し、Xに代入する
X = s.split()	半角スペースを区切り文字としてs値を分割した結果をリストにして返した結果をXにする
X = s.split()	半角スペースを区切り文字として値sを分割した結果をリスト型にして返し、Xに代入する
X = s.split()	半角スペースを区切り文字として値sを分割した結果をリスト型にして返した結果をXとする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリスト型に直して、Xにする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリスト型に直した結果をXとする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリスト型にし、Xとする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリスト型にされた結果をXにする
X = s.split()	半角スペースを区切り文字としてs値を分割した結果をリスト型にして返し、Xに代入する
X = s.split()	半角スペースを区切り文字としてs値を分割した結果をリスト型にして返した結果をXにする
X = s.split()	空白を区切り文字としてs値を分割した結果をリスト型にして返し、Xにする
X = s.split()	空白を区切り文字としてs値を分割した結果をリスト型にして返された結果をXに代入する
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリスト型に直し、Xにする
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリスト型に直した結果をXにする
X = s.split()	スペースを区切り文字としてs値を分割した結果をリスト型にして返して、Xとする
X = s.split()	スペースを区切り文字としてs値を分割した結果をリスト型にして返された結果をXにする
X = s.split()	スペースを区切り文字に設定してs値を分割した結果をリスト型にして返し、Xとする
X = s.split()	スペースを区切り文字に設定してs値を分割した結果をリスト型にして返された結果をXとする
X = s.split()	空白を区切り文字としてs値を分割した結果をリストにして返し、Xにする
X = s.split()	空白を区切り文字としてs値を分割した結果をリストにして返した結果をXに代入する
X = s.split()	半角スペースを区切り文字に設定してs値を分割した結果をリストにして返し、Xにする
X = s.split()	半角スペースを区切り文字に設定してs値を分割した結果をリストにして返した結果をXにする
X = s.split()	空白を区切り文字としてsを分割した結果をリストにして返し、Xとする
X = s.split()	空白を区切り文字としてsを分割した結果をリストにして返された結果をXに代入する
X = s.split()	空白を区切り文字に設定してs値を分割した結果をリストにして、Xに代入する
X = s.split()	空白を区切り文字に設定してs値を分割した結果をリストにされた結果をXにする
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリスト型に直し、Xにする
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリスト型に直された結果をXに代入する
X = s.split()	スペースを区切り文字に指定してs値を分割した結果をリストに直し、Xに代入する
X = s.split()	スペースを区切り文字に指定してs値を分割した結果をリストに直した結果をXとする
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリスト型にして、Xにする
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリスト型にした結果をXにする
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリストに直して、Xにする
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリストに直された結果をXに代入する
X = s.split()	半角スペースを区切り文字としてsを分割した結果をリスト型にして返して、Xにする
X = s.split()	半角スペースを区切り文字としてsを分割した結果をリスト型にして返された結果をXとする
X = s.split()	スペースを区切り文字に指定して値sを分割した結果をリストにして、Xとする
X = s.split()	スペースを区切り文字に指定して値sを分割した結果をリストにした結果をXにする
X = s.split()	スペースを区切り文字に設定してsを分割した結果をリストにし、Xとする
X = s.split()	スペースを区切り文字に設定してsを分割した結果をリストにされた結果をXにする
X = s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリストにし、Xとする
X = s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリストにした結果をXに代入する
X = s.split()	半角スペースを区切り文字としてsを分割した結果をリストにして返して、Xに代入する
X = s.split()	半角スペースを区切り文字としてsを分割した結果をリストにして返した結果をXに代入する
X = s.split()	空白を区切り文字として値sを分割した結果をリストにして返して、Xに代入する
X = s.split()	空白を区切り文字として値sを分割した結果をリストにして返した結果をXに代入する
X = s.split()	空白を区切り文字に設定してs値を分割した結果をリスト型にして返して、Xとする
X = s.split()	空白を区切り文字に設定してs値を分割した結果をリスト型にして返された結果をXにする
X = s.split()	空白を区切り文字に設定してsを分割した結果をリストにして返し、Xとする
X = s.split()	空白を区切り文字に設定してsを分割した結果をリストにして返した結果をXにする
X = s.split()	スペースを区切り文字に指定してs値を分割した結果をリスト型にして、Xに代入する
X = s.split()	スペースを区切り文字に指定してs値を分割した結果をリスト型にした結果をXに代入する
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリスト型にして返し、Xに代入する
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリスト型にして返した結果をXとする
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリストにし、Xとする
X = s.split()	スペースを区切り文字に指定してsを分割した結果をリストにした結果をXに代入する
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリスト型にして返し、Xとする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリスト型にして返した結果をXに代入する
X = s.split()	スペースを区切り文字としてsを分割した結果をリスト型にして返し、Xとする
X = s.split()	スペースを区切り文字としてsを分割した結果をリスト型にして返された結果をXとする
X = s.split()	空白を区切り文字に設定してs値を分割した結果をリストにして返し、Xとする
X = s.split()	空白を区切り文字に設定してs値を分割した結果をリストにして返した結果をXに代入する
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリスト型にし、Xに代入する
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリスト型にされた結果をXにする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストに直して、Xに代入する
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストに直された結果をXにする
X = s.split()	空白を区切り文字に指定してs値を分割した結果をリスト型にし、Xに代入する
X = s.split()	空白を区切り文字に指定してs値を分割した結果をリスト型にされた結果をXに代入する
X = s.split()	スペースを区切り文字に設定して値sを分割した結果をリスト型に直して、Xにする
X = s.split()	スペースを区切り文字に設定して値sを分割した結果をリスト型に直した結果をXにする
X = s.split()	スペースを区切り文字に設定して値sを分割した結果をリストにして返し、Xとする
X = s.split()	スペースを区切り文字に設定して値sを分割した結果をリストにして返した結果をXに代入する
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストにして返し、Xにする
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストにして返した結果をXにする
X = s.split()	スペースを区切り文字に設定してsを分割した結果をリストに直し、Xとする
X = s.split()	スペースを区切り文字に設定してsを分割した結果をリストに直された結果をXにする
X = s.split()	空白を区切り文字に指定してsを分割した結果をリスト型にして、Xとする
X = s.split()	空白を区切り文字に指定してsを分割した結果をリスト型にされた結果をXに代入する
X = s.split()	空白を区切り文字に指定して値sを分割した結果をリスト型に直し、Xに代入する
X = s.split()	空白を区切り文字に指定して値sを分割した結果をリスト型に直した結果をXに代入する
X = s.split()	スペースを区切り文字に設定してsを分割した結果をリストにして返し、Xに代入する
X = s.split()	スペースを区切り文字に設定してsを分割した結果をリストにして返した結果をXにする
X = s.split()	空白を区切り文字に設定して値sを分割した結果をリスト型に直して、Xにする
X = s.split()	空白を区切り文字に設定して値sを分割した結果をリスト型に直された結果をXとする
X = s.split()	スペースを区切り文字としてsを分割した結果をリストにして返し、Xとする
X = s.split()	スペースを区切り文字としてsを分割した結果をリストにして返された結果をXに代入する
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストにし、Xとする
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストにした結果をXとする
X = s.split()	空白を区切り文字に設定して値sを分割した結果をリスト型にして、Xに代入する
X = s.split()	空白を区切り文字に設定して値sを分割した結果をリスト型にされた結果をXにする
X = s.split()	スペースを区切り文字に設定してs値を分割した結果をリストにし、Xにする
X = s.split()	スペースを区切り文字に設定してs値を分割した結果をリストにした結果をXに代入する
X = s.split()	空白を区切り文字に指定してsを分割した結果をリスト型に直し、Xにする
X = s.split()	空白を区切り文字に指定してsを分割した結果をリスト型に直した結果をXにする
X = s.split()	スペースを区切り文字として値sを分割した結果をリスト型にして返して、Xにする
X = s.split()	スペースを区切り文字として値sを分割した結果をリスト型にして返した結果をXにする
X = s.split()	スペースを区切り文字に設定して値sを分割した結果をリスト型にして、Xに代入する
X = s.split()	スペースを区切り文字に設定して値sを分割した結果をリスト型にした結果をXに代入する
X = s.split()	半角スペースを区切り文字に設定してs値を分割した結果をリスト型に直して、Xに代入する
X = s.split()	半角スペースを区切り文字に設定してs値を分割した結果をリスト型に直した結果をXにする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストにして返して、Xとする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストにして返した結果をXに代入する
X = s.split()	スペースを区切り文字として値sを分割した結果をリストにして返し、Xに代入する
X = s.split()	スペースを区切り文字として値sを分割した結果をリストにして返した結果をXに代入する
X = s.split()	空白を区切り文字に指定してsを分割した結果をリストにして、Xに代入する
X = s.split()	空白を区切り文字に指定してsを分割した結果をリストにされた結果をXに代入する
X = s.split()	スペースを区切り文字に指定して値sを分割した結果をリスト型に直し、Xに代入する
X = s.split()	スペースを区切り文字に指定して値sを分割した結果をリスト型に直した結果をXにする
X = s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリスト型にし、Xとする
X = s.split()	半角スペースを区切り文字に指定して値sを分割した結果をリスト型にした結果をXに代入する
X = s.split()	空白を区切り文字に設定してsを分割した結果をリスト型にして返し、Xに代入する
X = s.split()	空白を区切り文字に設定してsを分割した結果をリスト型にして返された結果をXにする
X = s.split()	空白を区切り文字に指定してs値を分割した結果をリストに直し、Xとする
X = s.split()	空白を区切り文字に指定してs値を分割した結果をリストに直された結果をXにする
X = s.split()	空白を区切り文字に指定してs値を分割した結果をリスト型に直し、Xとする
X = s.split()	空白を区切り文字に指定してs値を分割した結果をリスト型に直された結果をXにする
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストに直し、Xとする
X = s.split()	半角スペースを区切り文字に設定して値sを分割した結果をリストに直した結果をXとする
X = s.split()	スペースを区切り文字に指定して値sを分割した結果をリスト型にして、Xとする
X = s.split()	スペースを区切り文字に指定して値sを分割した結果をリスト型にした結果をXとする
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストにし、Xに代入する
X = s.split()	半角スペースを区切り文字に設定してsを分割した結果をリストにされた結果をXにする
X = s.split()	空白を区切り文字に設定してsを分割した結果をリスト型に直し、Xとする
X = s.split()	空白を区切り文字に設定してsを分割した結果をリスト型に直された結果をXに代入する
X = s.split()	空白を区切り文字に指定して値sを分割した結果をリストにし、Xにする
X = s.split()	空白を区切り文字に指定して値sを分割した結果をリストにした結果をXに代入する
X = s.split()	半角スペースを区切り文字に指定してsを分割した結果をリストに直し、Xとする
X = s.split()	半角スペースを区切り文字に指定してsを分割した結果をリストに直した結果をXにする
s.split(c)	sをcで分割した文字列のリスト
s.split(c)	値sをcで分割したデータのリスト
s.split(c)	sをcで分割した値のリスト
s.split(c)	値sをcで分割した値のリスト
s.split(c)	s値をcで分割した値のリスト
s.split(c)	sをcで分割したデータのリスト
s.split(c)	値sをcで分割した文字列のリスト
s.split(c)	s値をcで分割した文字列のリスト
s.split(c)	s値をcで分割したデータのリスト
X = s.split(c)	sをcで分割した文字列のリストをXにする
X = s.split(c)	s値をcで分割したデータのリストをXにする
X = s.split(c)	値sをcで分割した文字列のリストをXとする
X = s.split(c)	sをcで分割したデータのリストをXとする
X = s.split(c)	値sをcで分割したデータのリストをXとする
X = s.split(c)	sをcで分割した値のリストをXに代入する
X = s.split(c)	値sをcで分割した値のリストをXにする
X = s.split(c)	s値をcで分割した文字列のリストをXにする
X = s.split(c)	s値をcで分割した値のリストをXに代入する
s.split(c)	sをcで分割してリストを返す
s.split(c)	値sをcで分割してリストを返す
s.split(c)	s値をcで分割してリストを返す
X = s.split(c)	sをcで分割してリストを返し、Xにする
X = s.split(c)	sをcで分割してリストを返した結果をXにする
X = s.split(c)	値sをcで分割してリストを返し、Xとする
X = s.split(c)	値sをcで分割してリストを返した結果をXに代入する
X = s.split(c)	s値をcで分割してリストを返し、Xに代入する
X = s.split(c)	s値をcで分割してリストを返した結果をXとする
s.split(c)	cを区切り文字としてsを分割した結果をリスト型にして返す
s.split(c)	cを区切り文字に指定して値sを分割した結果をリスト型にする
s.split(c)	cを区切り文字に設定してsを分割した結果をリストに直す
s.split(c)	cを区切り文字に指定してs値を分割した結果をリスト型にする
s.split(c)	cを区切り文字としてsを分割した結果をリストにして返す
s.split(c)	cを区切り文字としてs値を分割した結果をリスト型にして返す
s.split(c)	cを区切り文字に指定してs値を分割した結果をリストにする
s.split(c)	cを区切り文字に指定してsを分割した結果をリストに直す
s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型にして返す
s.split(c)	cを区切り文字として値sを分割した結果をリストにして返す
s.split(c)	cを区切り文字に設定して値sを分割した結果をリストにして返す
s.split(c)	cを区切り文字として値sを分割した結果をリスト型にして返す
s.split(c)	cを区切り文字に設定してs値を分割した結果をリストにして返す
s.split(c)	cを区切り文字に指定して値sを分割した結果をリスト型に直す
s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型にする
s.split(c)	cを区切り文字に設定してs値を分割した結果をリストに直す
s.split(c)	cを区切り文字に指定して値sを分割した結果をリストにする
s.split(c)	cを区切り文字に指定してs値を分割した結果をリスト型に直す
s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型にして返す
s.split(c)	cを区切り文字に指定してsを分割した結果をリスト型にする
s.split(c)	cを区切り文字に指定してs値を分割した結果をリストに直す
s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型に直す
s.split(c)	cを区切り文字としてs値を分割した結果をリストにして返す
s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型にして返す
s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型に直す
s.split(c)	cを区切り文字に指定してsを分割した結果をリスト型に直す
s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型にする
s.split(c)	cを区切り文字に設定してs値を分割した結果をリストにする
s.split(c)	cを区切り文字に設定してsを分割した結果をリストにする
s.split(c)	cを区切り文字に指定して値sを分割した結果をリストに直す
s.split(c)	cを区切り文字に指定してsを分割した結果をリストにする
s.split(c)	cを区切り文字に設定して値sを分割した結果をリストにする
s.split(c)	cを区切り文字に設定して値sを分割した結果をリストに直す
s.split(c)	cを区切り文字に設定してsを分割した結果をリストにして返す
s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型にする
X = s.split(c)	cを区切り文字としてsを分割した結果をリスト型にして返し、Xにする
X = s.split(c)	cを区切り文字としてsを分割した結果をリスト型にして返された結果をXにする
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリストにして返し、Xとする
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリストにして返した結果をXとする
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリストにし、Xに代入する
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリストにした結果をXにする
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリストにし、Xとする
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリストにされた結果をXとする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリストにして返して、Xとする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリストにして返した結果をXにする
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリスト型にして、Xに代入する
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリスト型にされた結果をXとする
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリストにして、Xとする
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリストにした結果をXにする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリストにし、Xにする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリストにされた結果をXにする
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型にして返し、Xにする
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型にして返した結果をXにする
X = s.split(c)	cを区切り文字として値sを分割した結果をリスト型にして返して、Xに代入する
X = s.split(c)	cを区切り文字として値sを分割した結果をリスト型にして返した結果をXにする
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリストに直して、Xとする
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリストに直した結果をXにする
X = s.split(c)	cを区切り文字としてs値を分割した結果をリスト型にして返し、Xに代入する
X = s.split(c)	cを区切り文字としてs値を分割した結果をリスト型にして返した結果をXにする
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリストに直して、Xに代入する
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリストに直した結果をXとする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型にして返し、Xにする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型にして返した結果をXにする
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリストにして、Xに代入する
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリストにした結果をXとする
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリスト型に直して、Xに代入する
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリスト型に直された結果をXにする
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型にし、Xに代入する
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型にした結果をXに代入する
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリスト型にして、Xとする
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリスト型にした結果をXとする
X = s.split(c)	cを区切り文字としてs値を分割した結果をリストにして返して、Xとする
X = s.split(c)	cを区切り文字としてs値を分割した結果をリストにして返した結果をXに代入する
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリストに直して、Xに代入する
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリストに直した結果をXにする
X = s.split(c)	cを区切り文字としてsを分割した結果をリストにして返し、Xにする
X = s.split(c)	cを区切り文字としてsを分割した結果をリストにして返した結果をXに代入する
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリストにして、Xとする
X = s.split(c)	cを区切り文字に指定してsを分割した結果をリストにされた結果をXとする
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリスト型に直し、Xにする
X = s.split(c)	cを区切り文字に指定して値sを分割した結果をリスト型に直された結果をXに代入する
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリストにして返して、Xに代入する
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリストにして返した結果をXに代入する
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリスト型にして、Xとする
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリスト型にした結果をXとする
X = s.split(c)	cを区切り文字として値sを分割した結果をリストにして返し、Xにする
X = s.split(c)	cを区切り文字として値sを分割した結果をリストにして返された結果をXとする
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型にして、Xに代入する
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型にした結果をXとする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型に直し、Xにする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型に直された結果をXとする
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリストに直し、Xに代入する
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリストに直した結果をXに代入する
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型にして、Xとする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリスト型にされた結果をXにする
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリスト型に直し、Xに代入する
X = s.split(c)	cを区切り文字に指定してs値を分割した結果をリスト型に直した結果をXに代入する
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型に直して、Xに代入する
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型に直した結果をXに代入する
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリストに直して、Xにする
X = s.split(c)	cを区切り文字に設定してs値を分割した結果をリストに直した結果をXとする
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型にして返して、Xに代入する
X = s.split(c)	cを区切り文字に設定して値sを分割した結果をリスト型にして返した結果をXに代入する
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型に直し、Xにする
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリスト型に直された結果をXに代入する
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリストに直し、Xに代入する
X = s.split(c)	cを区切り文字に設定してsを分割した結果をリストに直された結果をXとする
s.split(c, 2)	sをcで最大分割数2まで分割した文字列のリスト
s.split(c, 2)	s値をcで最大分割数2まで分割したデータのリスト
s.split(c, 2)	値sをcで最大分割数2まで分割したデータのリスト
s.split(c, 2)	値sをcで最大分割数2まで分割した文字列のリスト
s.split(c, 2)	s値をcで最大分割数2まで分割した文字列のリスト
s.split(c, 2)	値sをcで最大分割数2まで分割した値のリスト
s.split(c, 2)	sをcで最大分割数2まで分割したデータのリスト
s.split(c, 2)	sをcで最大分割数2まで分割した値のリスト
s.split(c, 2)	s値をcで最大分割数2まで分割した値のリスト
X = s.split(c, 2)	sをcで最大分割数2まで分割した文字列のリストをXに代入する
X = s.split(c, 2)	値sをcで最大分割数2まで分割した値のリストをXとする
X = s.split(c, 2)	値sをcで最大分割数2まで分割したデータのリストをXに代入する
X = s.split(c, 2)	sをcで最大分割数2まで分割したデータのリストをXとする
X = s.split(c, 2)	s値をcで最大分割数2まで分割した値のリストをXにする
X = s.split(c, 2)	s値をcで最大分割数2まで分割した文字列のリストをXとする
X = s.split(c, 2)	s値をcで最大分割数2まで分割したデータのリストをXに代入する
X = s.split(c, 2)	sをcで最大分割数2まで分割した値のリストをXにする
X = s.split(c, 2)	値sをcで最大分割数2まで分割した文字列のリストをXとする
s.split(c, 2)	sをcで最大分割数2まで分割してリストを返す
s.split(c, 2)	s値をcで最大分割数2まで分割してリストを返す
s.split(c, 2)	値sをcで最大分割数2まで分割してリストを返す
X = s.split(c, 2)	sをcで最大分割数2まで分割してリストを返して、Xに代入する
X = s.split(c, 2)	sをcで最大分割数2まで分割してリストを返された結果をXにする
X = s.split(c, 2)	値sをcで最大分割数2まで分割してリストを返して、Xにする
X = s.split(c, 2)	値sをcで最大分割数2まで分割してリストを返した結果をXとする
X = s.split(c, 2)	s値をcで最大分割数2まで分割してリストを返し、Xに代入する
X = s.split(c, 2)	s値をcで最大分割数2まで分割してリストを返した結果をXにする
s.split(c, 2)	cを区切り文字、最大分割数を2としてsを分割した結果をリスト型にして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリストに直す
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型にして返す
s.split(c, 2)	cを区切り文字、最大分割数を2として値sを分割した結果をリスト型にして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリストに直す
s.split(c, 2)	cを区切り文字、最大分割数を2としてs値を分割した結果をリスト型にして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリスト型に直す
s.split(c, 2)	cを区切り文字、最大分割数を2としてs値を分割した結果をリストにして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリスト型に直す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリスト型にする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストにして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリストに直す
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストにして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型にして返す
s.split(c, 2)	cを区切り文字、最大分割数を2としてsを分割した結果をリストにして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型にして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリスト型にする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストにする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストにして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型に直す
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストに直す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリストにする
s.split(c, 2)	cを区切り文字、最大分割数を2として値sを分割した結果をリストにして返す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリストにする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型にする
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリスト型に直す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリスト型にする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型に直す
s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリストにする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストに直す
s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストにする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストにする
s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型に直す
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてsを分割した結果をリスト型にして返し、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてsを分割した結果をリスト型にして返した結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストにして返し、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストにして返した結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型にして返し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型にして返した結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型にし、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型にした結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリストにし、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリストにした結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型に直し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型に直された結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてs値を分割した結果をリストにして返して、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてs値を分割した結果をリストにして返された結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリストに直して、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリストに直した結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリスト型にし、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリスト型にした結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストにして返し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストにして返した結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてs値を分割した結果をリスト型にして返して、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてs値を分割した結果をリスト型にして返された結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型にして返し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型にして返された結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型にして返して、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリスト型にして返した結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリスト型に直して、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリスト型に直された結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリスト型にし、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリスト型にした結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリストにして、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリストにした結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストにして、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストにされた結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてsを分割した結果をリストにして返し、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2としてsを分割した結果をリストにして返した結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2として値sを分割した結果をリストにして返し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2として値sを分割した結果をリストにして返した結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストにして、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストにした結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2として値sを分割した結果をリスト型にして返し、Xにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2として値sを分割した結果をリスト型にして返した結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストに直し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリストに直された結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリストにし、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリストにされた結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストにして返して、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストにして返された結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型にし、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型にされた結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリスト型に直して、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してs値を分割した結果をリスト型に直された結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリストに直し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリストに直した結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型にして、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型にした結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型に直し、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリスト型に直した結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリストに直して、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定してsを分割した結果をリストに直した結果をXにする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリスト型に直し、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリスト型に直した結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストに直して、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してs値を分割した結果をリストに直された結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリスト型にして、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に指定して値sを分割した結果をリスト型にした結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストに直して、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストに直された結果をXとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型に直し、Xとする
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定してsを分割した結果をリスト型に直された結果をXに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストにして、Xに代入する
X = s.split(c, 2)	cを区切り文字、最大分割数を2に設定して値sを分割した結果をリストにした結果をXに代入する
s.rsplit()	sを末尾から空白で分割した文字列のリスト
s.rsplit()	値sを終わりから半角スペースで分割した値のリスト
s.rsplit()	sを最後から半角スペースで分割した文字列のリスト
s.rsplit()	s値を最後からスペースで分割した文字列のリスト
s.rsplit()	sを最後からスペースで分割した文字列のリスト
s.rsplit()	値sを最後から空白で分割した値のリスト
s.rsplit()	値sを終わりから空白で分割した文字列のリスト
s.rsplit()	値sを最後からスペースで分割した文字列のリスト
s.rsplit()	値sを最後から半角スペースで分割した文字列のリスト
s.rsplit()	sを後ろから半角スペースで分割した値のリスト
s.rsplit()	値sを後ろからスペースで分割した文字列のリスト
s.rsplit()	値sを最後からスペースで分割した値のリスト
s.rsplit()	値sを最後から半角スペースで分割したデータのリスト
s.rsplit()	s値を末尾からスペースで分割した文字列のリスト
s.rsplit()	s値を末尾からスペースで分割したデータのリスト
s.rsplit()	s値を終わりからスペースで分割したデータのリスト
s.rsplit()	値sを末尾から半角スペースで分割した値のリスト
s.rsplit()	値sを最後から空白で分割したデータのリスト
s.rsplit()	s値を終わりからスペースで分割した値のリスト
s.rsplit()	s値を最後から半角スペースで分割した値のリスト
s.rsplit()	値sを終わりから空白で分割したデータのリスト
s.rsplit()	s値を最後から空白で分割したデータのリスト
s.rsplit()	sを最後から空白で分割したデータのリスト
s.rsplit()	sを末尾から空白で分割した値のリスト
s.rsplit()	sを最後から空白で分割した値のリスト
s.rsplit()	s値を最後から空白で分割した文字列のリスト
s.rsplit()	値sを終わりからスペースで分割した文字列のリスト
s.rsplit()	値sを最後から半角スペースで分割した値のリスト
s.rsplit()	sを最後から空白で分割した文字列のリスト
s.rsplit()	値sを後ろから半角スペースで分割した値のリスト
s.rsplit()	値sを末尾からスペースで分割した文字列のリスト
s.rsplit()	値sを末尾から空白で分割した文字列のリスト
s.rsplit()	s値を最後から半角スペースで分割したデータのリスト
s.rsplit()	sを最後から半角スペースで分割したデータのリスト
s.rsplit()	s値を後ろから半角スペースで分割した文字列のリスト
s.rsplit()	s値を後ろから空白で分割した値のリスト
s.rsplit()	値sを最後から空白で分割した文字列のリスト
s.rsplit()	sを末尾から半角スペースで分割した値のリスト
s.rsplit()	値sを後ろから半角スペースで分割したデータのリスト
s.rsplit()	sを最後から半角スペースで分割した値のリスト
s.rsplit()	sを終わりから半角スペースで分割したデータのリスト
s.rsplit()	s値を後ろから空白で分割した文字列のリスト
s.rsplit()	s値を最後からスペースで分割した値のリスト
s.rsplit()	s値を最後から半角スペースで分割した文字列のリスト
s.rsplit()	sを終わりから半角スペースで分割した文字列のリスト
s.rsplit()	sを末尾から空白で分割したデータのリスト
s.rsplit()	sを末尾からスペースで分割した文字列のリスト
s.rsplit()	s値を終わりから空白で分割した値のリスト
s.rsplit()	sを最後からスペースで分割した値のリスト
s.rsplit()	s値を終わりから半角スペースで分割した値のリスト
s.rsplit()	s値を末尾から空白で分割した値のリスト
s.rsplit()	s値を末尾から半角スペースで分割したデータのリスト
s.rsplit()	s値を末尾からスペースで分割した値のリスト
s.rsplit()	sを終わりから空白で分割した値のリスト
s.rsplit()	s値を末尾から空白で分割したデータのリスト
s.rsplit()	sを末尾から半角スペースで分割したデータのリスト
s.rsplit()	sを終わりからスペースで分割した文字列のリスト
s.rsplit()	値sを最後からスペースで分割したデータのリスト
s.rsplit()	sを末尾から半角スペースで分割した文字列のリスト
s.rsplit()	値sを末尾からスペースで分割した値のリスト
s.rsplit()	値sを後ろから空白で分割した値のリスト
s.rsplit()	s値を末尾から空白で分割した文字列のリスト
s.rsplit()	s値を後ろからスペースで分割した文字列のリスト
s.rsplit()	値sを末尾から半角スペースで分割したデータのリスト
s.rsplit()	s値を末尾から半角スペースで分割した文字列のリスト
s.rsplit()	s値を最後からスペースで分割したデータのリスト
s.rsplit()	値sを終わりからスペースで分割した値のリスト
s.rsplit()	値sを後ろから空白で分割した文字列のリスト
s.rsplit()	sを末尾からスペースで分割したデータのリスト
s.rsplit()	s値を最後から空白で分割した値のリスト
X = s.rsplit()	sを末尾から空白で分割した文字列のリストをXにする
X = s.rsplit()	s値を最後から半角スペースで分割した文字列のリストをXにする
X = s.rsplit()	sを終わりから空白で分割した値のリストをXとする
X = s.rsplit()	値sを最後から空白で分割したデータのリストをXにする
X = s.rsplit()	sを最後からスペースで分割した値のリストをXにする
X = s.rsplit()	s値を最後から空白で分割した値のリストをXに代入する
X = s.rsplit()	s値を末尾からスペースで分割したデータのリストをXとする
X = s.rsplit()	sを最後から半角スペースで分割した文字列のリストをXにする
X = s.rsplit()	sを後ろからスペースで分割した値のリストをXとする
X = s.rsplit()	sを末尾から空白で分割した値のリストをXにする
X = s.rsplit()	s値を最後から半角スペースで分割した値のリストをXとする
X = s.rsplit()	値sを最後からスペースで分割したデータのリストをXとする
X = s.rsplit()	値sを終わりから半角スペースで分割した文字列のリストをXにする
X = s.rsplit()	sを末尾から半角スペースで分割した文字列のリストをXに代入する
X = s.rsplit()	s値を最後からスペースで分割したデータのリストをXに代入する
X = s.rsplit()	s値を終わりから空白で分割した文字列のリストをXにする
X = s.rsplit()	sを最後から空白で分割した文字列のリストをXにする
X = s.rsplit()	値sを最後から空白で分割した文字列のリストをXとする
X = s.rsplit()	s値を最後から空白で分割したデータのリストをXにする
X = s.rsplit()	値sを最後から半角スペースで分割した文字列のリストをXにする
X = s.rsplit()	値sを末尾から半角スペースで分割した値のリストをXとする
X = s.rsplit()	sを最後からスペースで分割した文字列のリストをXとする
X = s.rsplit()	sを最後から半角スペースで分割したデータのリストをXに代入する
X = s.rsplit()	sを終わりからスペースで分割したデータのリストをXに代入する
X = s.rsplit()	値sを最後からスペースで分割した値のリストをXにする
X = s.rsplit()	sを最後から空白で分割した値のリストをXに代入する
X = s.rsplit()	値sを終わりからスペースで分割した文字列のリストをXにする
X = s.rsplit()	s値を後ろから半角スペースで分割した文字列のリストをXに代入する
X = s.rsplit()	値sを最後から半角スペースで分割したデータのリストをXにする
X = s.rsplit()	値sを後ろから空白で分割した値のリストをXに代入する
X = s.rsplit()	値sを最後から空白で分割した値のリストをXにする
X = s.rsplit()	s値を最後からスペースで分割した文字列のリストをXとする
X = s.rsplit()	s値を後ろからスペースで分割したデータのリストをXとする
X = s.rsplit()	値sを末尾から空白で分割した値のリストをXにする
X = s.rsplit()	sを最後から半角スペースで分割した値のリストをXにする
X = s.rsplit()	s値を後ろから半角スペースで分割したデータのリストをXに代入する
X = s.rsplit()	s値を最後からスペースで分割した値のリストをXにする
X = s.rsplit()	sを末尾からスペースで分割したデータのリストをXにする
X = s.rsplit()	s値を最後から半角スペースで分割したデータのリストをXに代入する
X = s.rsplit()	s値を終わりから半角スペースで分割したデータのリストをXにする
X = s.rsplit()	値sを終わりから空白で分割した値のリストをXにする
X = s.rsplit()	sを終わりから半角スペースで分割した値のリストをXに代入する
X = s.rsplit()	s値を終わりから半角スペースで分割した文字列のリストをXにする
X = s.rsplit()	値sを最後から半角スペースで分割した値のリストをXとする
X = s.rsplit()	s値を終わりからスペースで分割したデータのリストをXにする
X = s.rsplit()	値sを後ろからスペースで分割した値のリストをXにする
X = s.rsplit()	値sを末尾からスペースで分割したデータのリストをXにする
X = s.rsplit()	s値を後ろからスペースで分割した値のリストをXとする
X = s.rsplit()	sを最後から空白で分割したデータのリストをXにする
X = s.rsplit()	s値を末尾から空白で分割した文字列のリストをXとする
X = s.rsplit()	値sを終わりから半角スペースで分割した値のリストをXに代入する
X = s.rsplit()	s値を後ろから半角スペースで分割した値のリストをXとする
X = s.rsplit()	s値を末尾からスペースで分割した文字列のリストをXにする
X = s.rsplit()	s値を終わりから空白で分割した値のリストをXにする
X = s.rsplit()	s値を最後から空白で分割した文字列のリストをXとする
X = s.rsplit()	値sを後ろから半角スペースで分割した文字列のリストをXとする
X = s.rsplit()	s値を後ろから空白で分割した文字列のリストをXに代入する
X = s.rsplit()	値sを最後からスペースで分割した文字列のリストをXに代入する
X = s.rsplit()	s値を末尾からスペースで分割した値のリストをXに代入する
X = s.rsplit()	s値を終わりから半角スペースで分割した値のリストをXに代入する
X = s.rsplit()	値sを後ろから空白で分割した文字列のリストをXとする
X = s.rsplit()	sを最後からスペースで分割したデータのリストをXとする
X = s.rsplit()	値sを末尾から空白で分割した文字列のリストをXに代入する
X = s.rsplit()	sを末尾から空白で分割したデータのリストをXとする
X = s.rsplit()	s値を末尾から半角スペースで分割した値のリストをXに代入する
X = s.rsplit()	値sを終わりから半角スペースで分割したデータのリストをXとする
X = s.rsplit()	s値を終わりからスペースで分割した文字列のリストをXにする
X = s.rsplit()	値sを末尾から空白で分割したデータのリストをXとする
X = s.rsplit()	sを末尾からスペースで分割した文字列のリストをXとする
X = s.rsplit()	値sを末尾からスペースで分割した文字列のリストをXに代入する
s.rsplit()	sを終わりから空白で分割してリストを返す
s.rsplit()	値sを後ろから半角スペースで分割してリストを返す
s.rsplit()	値sを最後から空白で分割してリストを返す
s.rsplit()	s値を終わりからスペースで分割してリストを返す
s.rsplit()	値sを後ろからスペースで分割してリストを返す
s.rsplit()	値sを最後からスペースで分割してリストを返す
s.rsplit()	値sを終わりから空白で分割してリストを返す
s.rsplit()	s値を最後からスペースで分割してリストを返す
s.rsplit()	s値を末尾から空白で分割してリストを返す
s.rsplit()	値sを末尾からスペースで分割してリストを返す
s.rsplit()	sを最後からスペースで分割してリストを返す
s.rsplit()	値sを最後から半角スペースで分割してリストを返す
s.rsplit()	s値を後ろから空白で分割してリストを返す
s.rsplit()	sを最後から半角スペースで分割してリストを返す
s.rsplit()	sを末尾から空白で分割してリストを返す
s.rsplit()	s値を終わりから半角スペースで分割してリストを返す
s.rsplit()	sを最後から空白で分割してリストを返す
s.rsplit()	s値を最後から半角スペースで分割してリストを返す
s.rsplit()	sを末尾からスペースで分割してリストを返す
s.rsplit()	値sを末尾から空白で分割してリストを返す
s.rsplit()	s値を後ろから半角スペースで分割してリストを返す
s.rsplit()	s値を末尾から半角スペースで分割してリストを返す
s.rsplit()	sを末尾から半角スペースで分割してリストを返す
s.rsplit()	値sを末尾から半角スペースで分割してリストを返す
s.rsplit()	s値を最後から空白で分割してリストを返す
s.rsplit()	値sを後ろから空白で分割してリストを返す
s.rsplit()	s値を後ろからスペースで分割してリストを返す
s.rsplit()	sを後ろから半角スペースで分割してリストを返す
s.rsplit()	値sを終わりからスペースで分割してリストを返す
s.rsplit()	値sを終わりから半角スペースで分割してリストを返す
s.rsplit()	sを後ろから空白で分割してリストを返す
s.rsplit()	sを終わりからスペースで分割してリストを返す
s.rsplit()	s値を末尾からスペースで分割してリストを返す
X = s.rsplit()	sを最後から空白で分割してリストを返し、Xとする
X = s.rsplit()	sを最後から空白で分割してリストを返した結果をXとする
X = s.rsplit()	s値を最後からスペースで分割してリストを返し、Xにする
X = s.rsplit()	s値を最後からスペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	値sを最後からスペースで分割してリストを返し、Xにする
X = s.rsplit()	値sを最後からスペースで分割してリストを返された結果をXに代入する
X = s.rsplit()	sを終わりからスペースで分割してリストを返し、Xとする
X = s.rsplit()	sを終わりからスペースで分割してリストを返された結果をXにする
X = s.rsplit()	s値を最後から半角スペースで分割してリストを返し、Xとする
X = s.rsplit()	s値を最後から半角スペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	sを最後からスペースで分割してリストを返して、Xに代入する
X = s.rsplit()	sを最後からスペースで分割してリストを返した結果をXにする
X = s.rsplit()	値sを最後から半角スペースで分割してリストを返し、Xに代入する
X = s.rsplit()	値sを最後から半角スペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	s値を末尾から空白で分割してリストを返し、Xに代入する
X = s.rsplit()	s値を末尾から空白で分割してリストを返した結果をXとする
X = s.rsplit()	値sを最後から空白で分割してリストを返して、Xにする
X = s.rsplit()	値sを最後から空白で分割してリストを返した結果をXにする
X = s.rsplit()	s値を後ろからスペースで分割してリストを返して、Xとする
X = s.rsplit()	s値を後ろからスペースで分割してリストを返した結果をXとする
X = s.rsplit()	s値を後ろから半角スペースで分割してリストを返して、Xにする
X = s.rsplit()	s値を後ろから半角スペースで分割してリストを返した結果をXとする
X = s.rsplit()	値sを末尾から空白で分割してリストを返し、Xに代入する
X = s.rsplit()	値sを末尾から空白で分割してリストを返した結果をXとする
X = s.rsplit()	sを最後から半角スペースで分割してリストを返し、Xに代入する
X = s.rsplit()	sを最後から半角スペースで分割してリストを返された結果をXとする
X = s.rsplit()	sを後ろから空白で分割してリストを返して、Xに代入する
X = s.rsplit()	sを後ろから空白で分割してリストを返した結果をXにする
X = s.rsplit()	sを終わりから半角スペースで分割してリストを返して、Xとする
X = s.rsplit()	sを終わりから半角スペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	値sを末尾からスペースで分割してリストを返し、Xに代入する
X = s.rsplit()	値sを末尾からスペースで分割してリストを返された結果をXにする
X = s.rsplit()	sを末尾からスペースで分割してリストを返し、Xに代入する
X = s.rsplit()	sを末尾からスペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	s値を末尾からスペースで分割してリストを返し、Xとする
X = s.rsplit()	s値を末尾からスペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	sを後ろからスペースで分割してリストを返して、Xとする
X = s.rsplit()	sを後ろからスペースで分割してリストを返された結果をXに代入する
X = s.rsplit()	sを末尾から半角スペースで分割してリストを返して、Xに代入する
X = s.rsplit()	sを末尾から半角スペースで分割してリストを返した結果をXにする
X = s.rsplit()	s値を最後から空白で分割してリストを返して、Xに代入する
X = s.rsplit()	s値を最後から空白で分割してリストを返された結果をXに代入する
X = s.rsplit()	sを末尾から空白で分割してリストを返して、Xに代入する
X = s.rsplit()	sを末尾から空白で分割してリストを返された結果をXに代入する
X = s.rsplit()	値sを終わりから半角スペースで分割してリストを返し、Xとする
X = s.rsplit()	値sを終わりから半角スペースで分割してリストを返された結果をXに代入する
X = s.rsplit()	s値を後ろから空白で分割してリストを返し、Xとする
X = s.rsplit()	s値を後ろから空白で分割してリストを返された結果をXにする
X = s.rsplit()	s値を終わりからスペースで分割してリストを返して、Xに代入する
X = s.rsplit()	s値を終わりからスペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	sを終わりから空白で分割してリストを返して、Xにする
X = s.rsplit()	sを終わりから空白で分割してリストを返した結果をXに代入する
X = s.rsplit()	sを後ろから半角スペースで分割してリストを返し、Xとする
X = s.rsplit()	sを後ろから半角スペースで分割してリストを返された結果をXに代入する
X = s.rsplit()	値sを末尾から半角スペースで分割してリストを返して、Xとする
X = s.rsplit()	値sを末尾から半角スペースで分割してリストを返された結果をXに代入する
X = s.rsplit()	値sを終わりから空白で分割してリストを返し、Xに代入する
X = s.rsplit()	値sを終わりから空白で分割してリストを返した結果をXに代入する
X = s.rsplit()	s値を終わりから半角スペースで分割してリストを返して、Xにする
X = s.rsplit()	s値を終わりから半角スペースで分割してリストを返した結果をXにする
X = s.rsplit()	s値を末尾から半角スペースで分割してリストを返し、Xにする
X = s.rsplit()	s値を末尾から半角スペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	値sを終わりからスペースで分割してリストを返して、Xにする
X = s.rsplit()	値sを終わりからスペースで分割してリストを返した結果をXに代入する
X = s.rsplit()	s値を終わりから空白で分割してリストを返し、Xに代入する
X = s.rsplit()	s値を終わりから空白で分割してリストを返した結果をXに代入する
X = s.rsplit()	値sを後ろから半角スペースで分割してリストを返し、Xにする
X = s.rsplit()	値sを後ろから半角スペースで分割してリストを返された結果をXにする
s.rsplit()	空白を区切り文字としてsを最後から分割してリスト型にして返す
s.rsplit()	スペースを区切り文字として値sを末尾から分割してリスト型にして返す
s.rsplit()	空白を区切り文字に設定してs値を最後から分割してリスト型にする
s.rsplit()	区切り文字に設定して値sをスペースを最後から分割してリストにする
s.rsplit()	区切り文字に設定してsをスペースを最後から分割してリストにする
s.rsplit()	半角スペースを区切り文字に設定して値sを最後から分割してリスト型にして返す
s.rsplit()	スペースを区切り文字としてsを末尾から分割してリスト型にして返す
s.rsplit()	空白を区切り文字として値sを後ろから分割してリスト型にして返す
s.rsplit()	スペースを区切り文字に指定してsを最後から分割してリストにする
s.rsplit()	区切り文字に設定してs値をスペースを末尾から分割してリストにして返す
s.rsplit()	半角スペースを区切り文字として値sを末尾から分割してリストにして返す
s.rsplit()	半角スペースを区切り文字に設定してsを終わりから分割してリストにして返す
s.rsplit()	スペースを区切り文字としてsを末尾から分割してリストにして返す
s.rsplit()	区切り文字に指定して値sをスペースを最後から分割してリスト型にする
s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリスト型にする
s.rsplit()	区切り文字に設定して値sをスペースを終わりから分割してリスト型にして返す
s.rsplit()	区切り文字として値sを半角スペースを後ろから分割してリストにして返す
s.rsplit()	スペースを区切り文字に設定してsを最後から分割してリスト型に直す
s.rsplit()	半角スペースを区切り文字として値sを最後から分割してリストにして返す
s.rsplit()	空白を区切り文字に指定して値sを最後から分割してリストに直す
s.rsplit()	区切り文字としてsをスペースを最後から分割してリストにして返す
s.rsplit()	スペースを区切り文字に指定して値sを最後から分割してリスト型にする
s.rsplit()	スペースを区切り文字に設定してsを最後から分割してリストに直す
s.rsplit()	空白を区切り文字に設定して値sを最後から分割してリスト型に直す
s.rsplit()	スペースを区切り文字に指定してs値を最後から分割してリスト型にする
s.rsplit()	空白を区切り文字に指定してsを最後から分割してリスト型に直す
s.rsplit()	空白を区切り文字としてsを後ろから分割してリスト型にして返す
s.rsplit()	空白を区切り文字に設定して値sを末尾から分割してリスト型にして返す
s.rsplit()	空白を区切り文字に指定して値sを最後から分割してリストにする
s.rsplit()	半角スペースを区切り文字に設定して値sを最後から分割してリストにして返す
s.rsplit()	区切り文字に指定してsをスペースを最後から分割してリスト型にする
s.rsplit()	スペースを区切り文字に指定してs値を最後から分割してリスト型に直す
s.rsplit()	区切り文字としてs値を空白を最後から分割してリスト型にして返す
s.rsplit()	区切り文字に設定してsを空白を最後から分割してリストに直す
s.rsplit()	区切り文字に指定してs値をスペースを最後から分割してリストにする
s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリストに直す
s.rsplit()	区切り文字に指定してs値を半角スペースを最後から分割してリスト型に直す
s.rsplit()	空白を区切り文字に設定してsを末尾から分割してリスト型にして返す
s.rsplit()	区切り文字に設定してs値を半角スペースを最後から分割してリストにする
s.rsplit()	空白を区切り文字として値sを最後から分割してリスト型にして返す
s.rsplit()	空白を区切り文字に設定してs値を末尾から分割してリスト型にして返す
s.rsplit()	区切り文字に指定してsを空白を最後から分割してリストにする
s.rsplit()	スペースを区切り文字としてsを後ろから分割してリストにして返す
s.rsplit()	空白を区切り文字に指定してsを最後から分割してリスト型にする
s.rsplit()	空白を区切り文字としてsを末尾から分割してリストにして返す
s.rsplit()	半角スペースを区切り文字に設定してsを最後から分割してリストにする
s.rsplit()	空白を区切り文字に設定してsを末尾から分割してリストにして返す
s.rsplit()	区切り文字に指定して値sをスペースを最後から分割してリストにする
s.rsplit()	スペースを区切り文字としてsを後ろから分割してリスト型にして返す
s.rsplit()	区切り文字として値sを半角スペースを末尾から分割してリストにして返す
s.rsplit()	半角スペースを区切り文字としてs値を末尾から分割してリスト型にして返す
s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリストにする
s.rsplit()	半角スペースを区切り文字として値sを最後から分割してリスト型にして返す
s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリストにする
s.rsplit()	区切り文字に設定してsを半角スペースを後ろから分割してリストにして返す
s.rsplit()	空白を区切り文字に指定してs値を最後から分割してリストにする
s.rsplit()	区切り文字に設定して値sを半角スペースを最後から分割してリスト型に直す
s.rsplit()	区切り文字に指定してs値をスペースを最後から分割してリストに直す
s.rsplit()	半角スペースを区切り文字に指定して値sを最後から分割してリストにする
s.rsplit()	区切り文字に指定して値sを空白を最後から分割してリストにする
s.rsplit()	スペースを区切り文字として値sを末尾から分割してリストにして返す
s.rsplit()	区切り文字としてsを空白を末尾から分割してリスト型にして返す
s.rsplit()	空白を区切り文字に指定して値sを最後から分割してリスト型にする
s.rsplit()	区切り文字として値sを空白を終わりから分割してリストにして返す
s.rsplit()	区切り文字に設定してsをスペースを最後から分割してリスト型にする
s.rsplit()	区切り文字に指定してsを空白を最後から分割してリスト型にする
s.rsplit()	スペースを区切り文字としてs値を末尾から分割してリスト型にして返す
s.rsplit()	空白を区切り文字としてs値を後ろから分割してリストにして返す
s.rsplit()	区切り文字としてs値を空白を末尾から分割してリストにして返す
s.rsplit()	区切り文字に設定してs値をスペースを最後から分割してリスト型に直す
X = s.rsplit()	空白を区切り文字としてsを後ろから分割してリスト型にして返して、Xに代入する
X = s.rsplit()	空白を区切り文字としてsを後ろから分割してリスト型にして返した結果をXとする
X = s.rsplit()	スペースを区切り文字としてsを終わりから分割してリスト型にして返し、Xにする
X = s.rsplit()	スペースを区切り文字としてsを終わりから分割してリスト型にして返した結果をXに代入する
X = s.rsplit()	空白を区切り文字に設定して値sを終わりから分割してリストにして返して、Xに代入する
X = s.rsplit()	空白を区切り文字に設定して値sを終わりから分割してリストにして返された結果をXとする
X = s.rsplit()	区切り文字に設定してsを半角スペースを後ろから分割してリストにして返して、Xにする
X = s.rsplit()	区切り文字に設定してsを半角スペースを後ろから分割してリストにして返した結果をXに代入する
X = s.rsplit()	区切り文字に指定して値sを半角スペースを最後から分割してリスト型にして、Xにする
X = s.rsplit()	区切り文字に指定して値sを半角スペースを最後から分割してリスト型にされた結果をXとする
X = s.rsplit()	空白を区切り文字に設定してs値を最後から分割してリストに直し、Xにする
X = s.rsplit()	空白を区切り文字に設定してs値を最後から分割してリストに直した結果をXに代入する
X = s.rsplit()	半角スペースを区切り文字に設定して値sを終わりから分割してリストにして返して、Xに代入する
X = s.rsplit()	半角スペースを区切り文字に設定して値sを終わりから分割してリストにして返された結果をXにする
X = s.rsplit()	区切り文字としてsを半角スペースを終わりから分割してリストにして返して、Xにする
X = s.rsplit()	区切り文字としてsを半角スペースを終わりから分割してリストにして返された結果をXとする
X = s.rsplit()	区切り文字としてsを空白を末尾から分割してリストにして返して、Xにする
X = s.rsplit()	区切り文字としてsを空白を末尾から分割してリストにして返された結果をXにする
X = s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリスト型にして返して、Xとする
X = s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリスト型にして返された結果をXに代入する
X = s.rsplit()	スペースを区切り文字に指定してs値を最後から分割してリスト型に直し、Xに代入する
X = s.rsplit()	スペースを区切り文字に指定してs値を最後から分割してリスト型に直された結果をXにする
X = s.rsplit()	区切り文字として値sを空白を最後から分割してリスト型にして返して、Xにする
X = s.rsplit()	区切り文字として値sを空白を最後から分割してリスト型にして返した結果をXにする
X = s.rsplit()	区切り文字に設定してsを半角スペースを最後から分割してリストにして、Xに代入する
X = s.rsplit()	区切り文字に設定してsを半角スペースを最後から分割してリストにした結果をXに代入する
X = s.rsplit()	区切り文字に指定してs値を空白を最後から分割してリスト型にして、Xにする
X = s.rsplit()	区切り文字に指定してs値を空白を最後から分割してリスト型にした結果をXに代入する
X = s.rsplit()	区切り文字としてs値を半角スペースを末尾から分割してリストにして返し、Xに代入する
X = s.rsplit()	区切り文字としてs値を半角スペースを末尾から分割してリストにして返された結果をXにする
X = s.rsplit()	半角スペースを区切り文字に設定して値sを最後から分割してリスト型に直し、Xにする
X = s.rsplit()	半角スペースを区切り文字に設定して値sを最後から分割してリスト型に直された結果をXにする
X = s.rsplit()	区切り文字に指定して値sを半角スペースを最後から分割してリストに直して、Xにする
X = s.rsplit()	区切り文字に指定して値sを半角スペースを最後から分割してリストに直された結果をXにする
X = s.rsplit()	区切り文字に設定して値sを空白を最後から分割してリスト型にして返し、Xとする
X = s.rsplit()	区切り文字に設定して値sを空白を最後から分割してリスト型にして返した結果をXとする
X = s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリスト型にし、Xにする
X = s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリスト型にされた結果をXに代入する
X = s.rsplit()	半角スペースを区切り文字として値sを末尾から分割してリストにして返して、Xにする
X = s.rsplit()	半角スペースを区切り文字として値sを末尾から分割してリストにして返した結果をXに代入する
X = s.rsplit()	区切り文字として値sを半角スペースを末尾から分割してリストにして返し、Xとする
X = s.rsplit()	区切り文字として値sを半角スペースを末尾から分割してリストにして返した結果をXとする
X = s.rsplit()	区切り文字としてs値をスペースを末尾から分割してリストにして返し、Xとする
X = s.rsplit()	区切り文字としてs値をスペースを末尾から分割してリストにして返した結果をXとする
X = s.rsplit()	区切り文字としてsを空白を最後から分割してリスト型にして返し、Xとする
X = s.rsplit()	区切り文字としてsを空白を最後から分割してリスト型にして返した結果をXにする
X = s.rsplit()	区切り文字として値sをスペースを末尾から分割してリスト型にして返し、Xに代入する
X = s.rsplit()	区切り文字として値sをスペースを末尾から分割してリスト型にして返された結果をXとする
X = s.rsplit()	空白を区切り文字としてsを末尾から分割してリスト型にして返し、Xにする
X = s.rsplit()	空白を区切り文字としてsを末尾から分割してリスト型にして返した結果をXに代入する
X = s.rsplit()	スペースを区切り文字に設定して値sを最後から分割してリスト型にして、Xにする
X = s.rsplit()	スペースを区切り文字に設定して値sを最後から分割してリスト型にされた結果をXにする
X = s.rsplit()	スペースを区切り文字として値sを末尾から分割してリスト型にして返し、Xに代入する
X = s.rsplit()	スペースを区切り文字として値sを末尾から分割してリスト型にして返した結果をXにする
X = s.rsplit()	区切り文字に設定してs値を空白を終わりから分割してリスト型にして返して、Xとする
X = s.rsplit()	区切り文字に設定してs値を空白を終わりから分割してリスト型にして返した結果をXにする
X = s.rsplit()	空白を区切り文字に設定してsを最後から分割してリスト型に直し、Xにする
X = s.rsplit()	空白を区切り文字に設定してsを最後から分割してリスト型に直された結果をXとする
X = s.rsplit()	区切り文字に設定してs値をスペースを後ろから分割してリストにして返し、Xとする
X = s.rsplit()	区切り文字に設定してs値をスペースを後ろから分割してリストにして返された結果をXとする
X = s.rsplit()	空白を区切り文字に指定して値sを最後から分割してリスト型にし、Xにする
X = s.rsplit()	空白を区切り文字に指定して値sを最後から分割してリスト型にした結果をXとする
X = s.rsplit()	半角スペースを区切り文字に設定してs値を最後から分割してリストに直して、Xにする
X = s.rsplit()	半角スペースを区切り文字に設定してs値を最後から分割してリストに直した結果をXに代入する
X = s.rsplit()	スペースを区切り文字としてs値を後ろから分割してリストにして返し、Xにする
X = s.rsplit()	スペースを区切り文字としてs値を後ろから分割してリストにして返された結果をXとする
X = s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリスト型に直し、Xとする
X = s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリスト型に直された結果をXにする
X = s.rsplit()	空白を区切り文字としてs値を末尾から分割してリストにして返して、Xとする
X = s.rsplit()	空白を区切り文字としてs値を末尾から分割してリストにして返された結果をXに代入する
X = s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリストに直して、Xにする
X = s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリストに直した結果をXに代入する
X = s.rsplit()	区切り文字としてs値を空白を末尾から分割してリストにして返し、Xにする
X = s.rsplit()	区切り文字としてs値を空白を末尾から分割してリストにして返した結果をXにする
X = s.rsplit()	区切り文字としてs値を空白を最後から分割してリストにして返し、Xに代入する
X = s.rsplit()	区切り文字としてs値を空白を最後から分割してリストにして返された結果をXとする
X = s.rsplit()	スペースを区切り文字に設定してs値を最後から分割してリストにし、Xにする
X = s.rsplit()	スペースを区切り文字に設定してs値を最後から分割してリストにした結果をXに代入する
X = s.rsplit()	区切り文字としてs値を空白を最後から分割してリスト型にして返して、Xとする
X = s.rsplit()	区切り文字としてs値を空白を最後から分割してリスト型にして返した結果をXにする
X = s.rsplit()	スペースを区切り文字に指定して値sを最後から分割してリスト型にして、Xに代入する
X = s.rsplit()	スペースを区切り文字に指定して値sを最後から分割してリスト型にした結果をXにする
X = s.rsplit()	区切り文字に設定してsを半角スペースを末尾から分割してリストにして返し、Xに代入する
X = s.rsplit()	区切り文字に設定してsを半角スペースを末尾から分割してリストにして返した結果をXにする
X = s.rsplit()	スペースを区切り文字として値sを末尾から分割してリストにして返し、Xとする
X = s.rsplit()	スペースを区切り文字として値sを末尾から分割してリストにして返された結果をXとする
X = s.rsplit()	区切り文字に設定してs値を半角スペースを末尾から分割してリストにして返して、Xに代入する
X = s.rsplit()	区切り文字に設定してs値を半角スペースを末尾から分割してリストにして返した結果をXに代入する
X = s.rsplit()	半角スペースを区切り文字に設定してsを最後から分割してリストにして返し、Xとする
X = s.rsplit()	半角スペースを区切り文字に設定してsを最後から分割してリストにして返した結果をXに代入する
X = s.rsplit()	区切り文字としてs値をスペースを終わりから分割してリスト型にして返し、Xにする
X = s.rsplit()	区切り文字としてs値をスペースを終わりから分割してリスト型にして返した結果をXとする
X = s.rsplit()	空白を区切り文字に設定して値sを最後から分割してリストにし、Xにする
X = s.rsplit()	空白を区切り文字に設定して値sを最後から分割してリストにした結果をXに代入する
X = s.rsplit()	半角スペースを区切り文字に設定してs値を最後から分割してリストにして、Xにする
X = s.rsplit()	半角スペースを区切り文字に設定してs値を最後から分割してリストにした結果をXとする
X = s.rsplit()	スペースを区切り文字としてsを末尾から分割してリスト型にして返し、Xとする
X = s.rsplit()	スペースを区切り文字としてsを末尾から分割してリスト型にして返した結果をXとする
X = s.rsplit()	区切り文字としてs値をスペースを最後から分割してリスト型にして返して、Xに代入する
X = s.rsplit()	区切り文字としてs値をスペースを最後から分割してリスト型にして返した結果をXとする
X = s.rsplit()	区切り文字に設定してsを空白を末尾から分割してリスト型にして返し、Xとする
X = s.rsplit()	区切り文字に設定してsを空白を末尾から分割してリスト型にして返した結果をXにする
X = s.rsplit()	区切り文字としてs値をスペースを最後から分割してリストにして返して、Xに代入する
X = s.rsplit()	区切り文字としてs値をスペースを最後から分割してリストにして返された結果をXとする
X = s.rsplit()	スペースを区切り文字に設定してsを最後から分割してリストに直し、Xとする
X = s.rsplit()	スペースを区切り文字に設定してsを最後から分割してリストに直した結果をXにする
X = s.rsplit()	区切り文字に指定してsを半角スペースを最後から分割してリスト型にし、Xに代入する
X = s.rsplit()	区切り文字に指定してsを半角スペースを最後から分割してリスト型にした結果をXに代入する
X = s.rsplit()	区切り文字としてs値を空白を後ろから分割してリスト型にして返して、Xにする
X = s.rsplit()	区切り文字としてs値を空白を後ろから分割してリスト型にして返された結果をXにする
X = s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリストにして、Xに代入する
X = s.rsplit()	半角スペースを区切り文字に指定してs値を最後から分割してリストにした結果をXに代入する
X = s.rsplit()	区切り文字に設定して値sを半角スペースを最後から分割してリストに直して、Xとする
X = s.rsplit()	区切り文字に設定して値sを半角スペースを最後から分割してリストに直した結果をXとする
X = s.rsplit()	区切り文字に指定して値sを空白を最後から分割してリストにし、Xにする
X = s.rsplit()	区切り文字に指定して値sを空白を最後から分割してリストにした結果をXに代入する
X = s.rsplit()	区切り文字に指定して値sを半角スペースを最後から分割してリストにし、Xとする
X = s.rsplit()	区切り文字に指定して値sを半角スペースを最後から分割してリストにした結果をXにする
X = s.rsplit()	区切り文字に指定してs値をスペースを最後から分割してリスト型に直して、Xにする
X = s.rsplit()	区切り文字に指定してs値をスペースを最後から分割してリスト型に直された結果をXにする
X = s.rsplit()	区切り文字としてsをスペースを末尾から分割してリストにして返し、Xにする
X = s.rsplit()	区切り文字としてsをスペースを末尾から分割してリストにして返した結果をXに代入する
X = s.rsplit()	区切り文字として値sをスペースを末尾から分割してリストにして返して、Xにする
X = s.rsplit()	区切り文字として値sをスペースを末尾から分割してリストにして返した結果をXとする
X = s.rsplit()	半角スペースを区切り文字に指定してsを最後から分割してリストにし、Xとする
X = s.rsplit()	半角スペースを区切り文字に指定してsを最後から分割してリストにした結果をXとする
X = s.rsplit()	区切り文字としてsを半角スペースを末尾から分割してリスト型にして返して、Xに代入する
X = s.rsplit()	区切り文字としてsを半角スペースを末尾から分割してリスト型にして返された結果をXにする
X = s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリストにして、Xにする
X = s.rsplit()	区切り文字に設定してs値を空白を最後から分割してリストにされた結果をXとする
X = s.rsplit()	スペースを区切り文字に設定してsを最後から分割してリスト型に直して、Xに代入する
X = s.rsplit()	スペースを区切り文字に設定してsを最後から分割してリスト型に直された結果をXに代入する
X = s.rsplit()	スペースを区切り文字に指定してsを最後から分割してリスト型に直し、Xに代入する
X = s.rsplit()	スペースを区切り文字に指定してsを最後から分割してリスト型に直した結果をXにする
X = s.rsplit()	区切り文字に指定してs値を半角スペースを最後から分割してリストにし、Xとする
X = s.rsplit()	区切り文字に指定してs値を半角スペースを最後から分割してリストにされた結果をXに代入する
X = s.rsplit()	空白を区切り文字に指定してsを最後から分割してリスト型にし、Xとする
X = s.rsplit()	空白を区切り文字に指定してsを最後から分割してリスト型にした結果をXとする
X = s.rsplit()	空白を区切り文字としてs値を末尾から分割してリスト型にして返し、Xに代入する
X = s.rsplit()	空白を区切り文字としてs値を末尾から分割してリスト型にして返した結果をXに代入する
s.rsplit(c)	sを後ろからcで分割した文字列のリスト
s.rsplit(c)	最後からcでs値を分割した文字列のリスト
s.rsplit(c)	最後からcでsを分割した文字列のリスト
s.rsplit(c)	最後からcで値sを分割したデータのリスト
s.rsplit(c)	s値を末尾からcで分割した値のリスト
s.rsplit(c)	値sを最後からcで分割したデータのリスト
s.rsplit(c)	値sを末尾からcで分割した値のリスト
s.rsplit(c)	sを最後からcで分割したデータのリスト
s.rsplit(c)	s値を最後からcで分割したデータのリスト
s.rsplit(c)	後ろからcでsを分割した文字列のリスト
s.rsplit(c)	sを最後からcで分割した文字列のリスト
s.rsplit(c)	最後からcでs値を分割した値のリスト
s.rsplit(c)	末尾からcでsを分割したデータのリスト
s.rsplit(c)	最後からcで値sを分割した値のリスト
s.rsplit(c)	終わりからcで値sを分割したデータのリスト
s.rsplit(c)	値sを終わりからcで分割した値のリスト
s.rsplit(c)	後ろからcでs値を分割した値のリスト
s.rsplit(c)	sを末尾からcで分割した文字列のリスト
s.rsplit(c)	sを終わりからcで分割した文字列のリスト
s.rsplit(c)	末尾からcでsを分割した文字列のリスト
s.rsplit(c)	s値を後ろからcで分割した値のリスト
s.rsplit(c)	最後からcでsを分割したデータのリスト
s.rsplit(c)	sを後ろからcで分割した値のリスト
s.rsplit(c)	値sを最後からcで分割した文字列のリスト
s.rsplit(c)	末尾からcでsを分割した値のリスト
s.rsplit(c)	値sを最後からcで分割した値のリスト
s.rsplit(c)	s値を末尾からcで分割した文字列のリスト
s.rsplit(c)	sを最後からcで分割した値のリスト
s.rsplit(c)	後ろからcでsを分割した値のリスト
s.rsplit(c)	末尾からcでs値を分割したデータのリスト
s.rsplit(c)	s値を最後からcで分割した値のリスト
s.rsplit(c)	最後からcでsを分割した値のリスト
s.rsplit(c)	sを末尾からcで分割したデータのリスト
s.rsplit(c)	s値を最後からcで分割した文字列のリスト
s.rsplit(c)	s値を後ろからcで分割した文字列のリスト
s.rsplit(c)	最後からcで値sを分割した文字列のリスト
s.rsplit(c)	最後からcでs値を分割したデータのリスト
s.rsplit(c)	sを末尾からcで分割した値のリスト
s.rsplit(c)	値sを末尾からcで分割したデータのリスト
s.rsplit(c)	s値を末尾からcで分割したデータのリスト
s.rsplit(c)	終わりからcでs値を分割したデータのリスト
s.rsplit(c)	s値を終わりからcで分割したデータのリスト
s.rsplit(c)	後ろからcで値sを分割したデータのリスト
s.rsplit(c)	後ろからcでs値を分割したデータのリスト
s.rsplit(c)	末尾からcで値sを分割した値のリスト
s.rsplit(c)	値sを後ろからcで分割した文字列のリスト
s.rsplit(c)	値sを終わりからcで分割した文字列のリスト
s.rsplit(c)	sを終わりからcで分割したデータのリスト
s.rsplit(c)	末尾からcでs値を分割した文字列のリスト
s.rsplit(c)	終わりからcでsを分割した文字列のリスト
s.rsplit(c)	末尾からcで値sを分割した文字列のリスト
s.rsplit(c)	s値を終わりからcで分割した値のリスト
s.rsplit(c)	末尾からcで値sを分割したデータのリスト
X = s.rsplit(c)	sを後ろからcで分割した文字列のリストをXとする
X = s.rsplit(c)	後ろからcで値sを分割した値のリストをXにする
X = s.rsplit(c)	末尾からcで値sを分割した文字列のリストをXにする
X = s.rsplit(c)	s値を末尾からcで分割した値のリストをXに代入する
X = s.rsplit(c)	末尾からcで値sを分割した値のリストをXに代入する
X = s.rsplit(c)	末尾からcでs値を分割した値のリストをXとする
X = s.rsplit(c)	最後からcで値sを分割したデータのリストをXとする
X = s.rsplit(c)	値sを最後からcで分割した値のリストをXに代入する
X = s.rsplit(c)	最後からcでs値を分割した値のリストをXに代入する
X = s.rsplit(c)	s値を最後からcで分割した文字列のリストをXにする
X = s.rsplit(c)	sを最後からcで分割した値のリストをXに代入する
X = s.rsplit(c)	最後からcで値sを分割した値のリストをXに代入する
X = s.rsplit(c)	sを終わりからcで分割した文字列のリストをXに代入する
X = s.rsplit(c)	最後からcでsを分割した文字列のリストをXとする
X = s.rsplit(c)	s値を末尾からcで分割した文字列のリストをXにする
X = s.rsplit(c)	末尾からcでs値を分割したデータのリストをXとする
X = s.rsplit(c)	s値を末尾からcで分割したデータのリストをXにする
X = s.rsplit(c)	末尾からcでsを分割したデータのリストをXとする
X = s.rsplit(c)	値sを最後からcで分割した文字列のリストをXとする
X = s.rsplit(c)	最後からcで値sを分割した文字列のリストをXに代入する
X = s.rsplit(c)	値sを終わりからcで分割した文字列のリストをXにする
X = s.rsplit(c)	sを末尾からcで分割したデータのリストをXに代入する
X = s.rsplit(c)	sを最後からcで分割したデータのリストをXにする
X = s.rsplit(c)	最後からcでsを分割したデータのリストをXとする
X = s.rsplit(c)	最後からcでs値を分割したデータのリストをXとする
X = s.rsplit(c)	末尾からcでs値を分割した文字列のリストをXとする
X = s.rsplit(c)	後ろからcで値sを分割した文字列のリストをXに代入する
X = s.rsplit(c)	最後からcでsを分割した値のリストをXに代入する
X = s.rsplit(c)	s値を後ろからcで分割したデータのリストをXとする
X = s.rsplit(c)	値sを最後からcで分割したデータのリストをXにする
X = s.rsplit(c)	末尾からcでsを分割した文字列のリストをXに代入する
X = s.rsplit(c)	s値を最後からcで分割したデータのリストをXに代入する
X = s.rsplit(c)	終わりからcでs値を分割した値のリストをXとする
X = s.rsplit(c)	最後からcでs値を分割した文字列のリストをXとする
X = s.rsplit(c)	s値を後ろからcで分割した値のリストをXとする
X = s.rsplit(c)	sを最後からcで分割した文字列のリストをXとする
X = s.rsplit(c)	値sを末尾からcで分割した値のリストをXにする
X = s.rsplit(c)	値sを後ろからcで分割した値のリストをXとする
X = s.rsplit(c)	sを末尾からcで分割した文字列のリストをXにする
X = s.rsplit(c)	後ろからcでs値を分割したデータのリストをXとする
X = s.rsplit(c)	sを末尾からcで分割した値のリストをXとする
X = s.rsplit(c)	s値を最後からcで分割した値のリストをXにする
X = s.rsplit(c)	値sを末尾からcで分割した文字列のリストをXにする
X = s.rsplit(c)	s値を終わりからcで分割したデータのリストをXにする
X = s.rsplit(c)	末尾からcで値sを分割したデータのリストをXに代入する
X = s.rsplit(c)	値sを末尾からcで分割したデータのリストをXに代入する
X = s.rsplit(c)	末尾からcでsを分割した値のリストをXとする
X = s.rsplit(c)	sを終わりからcで分割したデータのリストをXにする
X = s.rsplit(c)	sを後ろからcで分割した値のリストをXにする
X = s.rsplit(c)	後ろからcでs値を分割した文字列のリストをXに代入する
X = s.rsplit(c)	後ろからcでsを分割した文字列のリストをXにする
s.rsplit(c)	sを末尾からcで分割してリストを返す
s.rsplit(c)	最後からcでs値を分割してリストを返す
s.rsplit(c)	後ろからcでsを分割してリストを返す
s.rsplit(c)	値sを最後からcで分割してリストを返す
s.rsplit(c)	末尾からcでs値を分割してリストを返す
s.rsplit(c)	s値を末尾からcで分割してリストを返す
s.rsplit(c)	最後からcで値sを分割してリストを返す
s.rsplit(c)	s値を最後からcで分割してリストを返す
s.rsplit(c)	最後からcでsを分割してリストを返す
s.rsplit(c)	値sを末尾からcで分割してリストを返す
s.rsplit(c)	末尾からcで値sを分割してリストを返す
s.rsplit(c)	sを最後からcで分割してリストを返す
s.rsplit(c)	終わりからcでsを分割してリストを返す
s.rsplit(c)	sを終わりからcで分割してリストを返す
s.rsplit(c)	sを後ろからcで分割してリストを返す
s.rsplit(c)	値sを終わりからcで分割してリストを返す
s.rsplit(c)	値sを後ろからcで分割してリストを返す
s.rsplit(c)	末尾からcでsを分割してリストを返す
s.rsplit(c)	終わりからcでs値を分割してリストを返す
s.rsplit(c)	s値を後ろからcで分割してリストを返す
s.rsplit(c)	s値を終わりからcで分割してリストを返す
s.rsplit(c)	後ろからcでs値を分割してリストを返す
X = s.rsplit(c)	sを末尾からcで分割してリストを返して、Xに代入する
X = s.rsplit(c)	sを末尾からcで分割してリストを返した結果をXに代入する
X = s.rsplit(c)	s値を終わりからcで分割してリストを返し、Xとする
X = s.rsplit(c)	s値を終わりからcで分割してリストを返した結果をXに代入する
X = s.rsplit(c)	末尾からcでs値を分割してリストを返して、Xに代入する
X = s.rsplit(c)	末尾からcでs値を分割してリストを返した結果をXに代入する
X = s.rsplit(c)	後ろからcでs値を分割してリストを返し、Xとする
X = s.rsplit(c)	後ろからcでs値を分割してリストを返された結果をXに代入する
X = s.rsplit(c)	最後からcで値sを分割してリストを返し、Xに代入する
X = s.rsplit(c)	最後からcで値sを分割してリストを返した結果をXに代入する
X = s.rsplit(c)	最後からcでsを分割してリストを返して、Xにする
X = s.rsplit(c)	最後からcでsを分割してリストを返した結果をXとする
X = s.rsplit(c)	s値を最後からcで分割してリストを返して、Xとする
X = s.rsplit(c)	s値を最後からcで分割してリストを返した結果をXに代入する
X = s.rsplit(c)	値sを最後からcで分割してリストを返し、Xとする
X = s.rsplit(c)	値sを最後からcで分割してリストを返した結果をXにする
X = s.rsplit(c)	sを後ろからcで分割してリストを返し、Xに代入する
X = s.rsplit(c)	sを後ろからcで分割してリストを返した結果をXに代入する
X = s.rsplit(c)	最後からcでs値を分割してリストを返して、Xにする
X = s.rsplit(c)	最後からcでs値を分割してリストを返した結果をXとする
X = s.rsplit(c)	sを最後からcで分割してリストを返し、Xにする
X = s.rsplit(c)	sを最後からcで分割してリストを返された結果をXとする
X = s.rsplit(c)	末尾からcで値sを分割してリストを返し、Xにする
X = s.rsplit(c)	末尾からcで値sを分割してリストを返された結果をXとする
X = s.rsplit(c)	末尾からcでsを分割してリストを返し、Xとする
X = s.rsplit(c)	末尾からcでsを分割してリストを返した結果をXとする
X = s.rsplit(c)	s値を末尾からcで分割してリストを返し、Xに代入する
X = s.rsplit(c)	s値を末尾からcで分割してリストを返した結果をXに代入する
X = s.rsplit(c)	sを終わりからcで分割してリストを返し、Xにする
X = s.rsplit(c)	sを終わりからcで分割してリストを返した結果をXとする
X = s.rsplit(c)	値sを末尾からcで分割してリストを返し、Xとする
X = s.rsplit(c)	値sを末尾からcで分割してリストを返した結果をXにする
X = s.rsplit(c)	値sを後ろからcで分割してリストを返して、Xに代入する
X = s.rsplit(c)	値sを後ろからcで分割してリストを返された結果をXにする
X = s.rsplit(c)	s値を後ろからcで分割してリストを返して、Xとする
X = s.rsplit(c)	s値を後ろからcで分割してリストを返した結果をXにする
X = s.rsplit(c)	終わりからcでs値を分割してリストを返し、Xとする
X = s.rsplit(c)	終わりからcでs値を分割してリストを返した結果をXにする
X = s.rsplit(c)	値sを終わりからcで分割してリストを返して、Xにする
X = s.rsplit(c)	値sを終わりからcで分割してリストを返した結果をXにする
X = s.rsplit(c)	終わりからcでsを分割してリストを返して、Xにする
X = s.rsplit(c)	終わりからcでsを分割してリストを返した結果をXに代入する
X = s.rsplit(c)	終わりからcで値sを分割してリストを返し、Xにする
X = s.rsplit(c)	終わりからcで値sを分割してリストを返した結果をXとする
s.rsplit(c)	cを区切り文字としてsを末尾から分割してリスト型にして返す
s.rsplit(c)	区切り文字に設定して値sをcを末尾から分割してリストにして返す
s.rsplit(c)	区切り文字として値sをcを末尾から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に設定してsを末尾から分割してリストにして返す
s.rsplit(c)	区切り文字としてs値をcを末尾から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリストにする
s.rsplit(c)	区切り文字として値sをcを終わりから分割してリスト型にして返す
s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリストにする
s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリストに直す
s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリストにして返す
s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリストにする
s.rsplit(c)	cを区切り文字としてs値を末尾から分割してリストにして返す
s.rsplit(c)	cを区切り文字に設定してsを終わりから分割してリスト型にして返す
s.rsplit(c)	cを区切り文字として値sを終わりから分割してリスト型にして返す
s.rsplit(c)	区切り文字としてsをcを最後から分割してリストにして返す
s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリストに直す
s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリストにする
s.rsplit(c)	区切り文字として値sをcを後ろから分割してリストにして返す
s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリストにする
s.rsplit(c)	区切り文字として値sをcを末尾から分割してリストにして返す
s.rsplit(c)	cを区切り文字として値sを終わりから分割してリストにして返す
s.rsplit(c)	区切り文字としてs値をcを最後から分割してリストにして返す
s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリストに直す
s.rsplit(c)	cを区切り文字としてsを終わりから分割してリスト型にして返す
s.rsplit(c)	区切り文字に設定して値sをcを最後から分割してリスト型に直す
s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリスト型に直す
s.rsplit(c)	cを区切り文字に指定してsを最後から分割してリストにする
s.rsplit(c)	cを区切り文字としてs値を最後から分割してリスト型にして返す
s.rsplit(c)	区切り文字としてsをcを後ろから分割してリストにして返す
s.rsplit(c)	cを区切り文字として値sを末尾から分割してリストにして返す
s.rsplit(c)	区切り文字に設定してs値をcを末尾から分割してリストにして返す
s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリスト型にする
s.rsplit(c)	区切り文字に設定してsをcを末尾から分割してリスト型にして返す
s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリスト型に直す
s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリストに直す
s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリストにして返す
s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリストに直す
s.rsplit(c)	区切り文字としてsをcを末尾から分割してリスト型にして返す
s.rsplit(c)	区切り文字としてsをcを最後から分割してリスト型にして返す
s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリスト型にする
s.rsplit(c)	区切り文字としてs値をcを最後から分割してリスト型にして返す
s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリスト型にする
s.rsplit(c)	cを区切り文字に設定してsを末尾から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字としてsを最後から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字としてs値を末尾から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリストにして返す
s.rsplit(c)	区切り文字として値sをcを最後から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字としてsを末尾から分割してリストにして返す
s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリスト型にする
s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリスト型に直す
s.rsplit(c)	区切り文字に設定して値sをcを最後から分割してリスト型にする
s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリスト型にする
s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリスト型に直す
s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリスト型に直す
s.rsplit(c)	cを区切り文字に設定してsを後ろから分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に設定して値sを末尾から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字として値sを最後から分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に指定してsを最後から分割してリスト型にする
s.rsplit(c)	cを区切り文字としてs値を最後から分割してリストにして返す
s.rsplit(c)	cを区切り文字に指定してsを最後から分割してリスト型に直す
s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリストに直す
s.rsplit(c)	cを区切り文字としてsを後ろから分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリストにする
s.rsplit(c)	cを区切り文字として値sを最後から分割してリストにして返す
s.rsplit(c)	区切り文字に設定して値sをcを末尾から分割してリスト型にして返す
s.rsplit(c)	区切り文字に設定してsをcを末尾から分割してリストにして返す
s.rsplit(c)	区切り文字に設定してsをcを後ろから分割してリストにして返す
s.rsplit(c)	cを区切り文字に設定して値sを後ろから分割してリスト型にして返す
s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリストにして返す
X = s.rsplit(c)	cを区切り文字としてsを末尾から分割してリスト型にして返して、Xにする
X = s.rsplit(c)	cを区切り文字としてsを末尾から分割してリスト型にして返した結果をXとする
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリスト型にして返し、Xにする
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリスト型にして返した結果をXとする
X = s.rsplit(c)	cを区切り文字としてs値を末尾から分割してリストにして返し、Xに代入する
X = s.rsplit(c)	cを区切り文字としてs値を末尾から分割してリストにして返された結果をXに代入する
X = s.rsplit(c)	区切り文字に設定してsをcを末尾から分割してリストにして返し、Xとする
X = s.rsplit(c)	区切り文字に設定してsをcを末尾から分割してリストにして返した結果をXにする
X = s.rsplit(c)	区切り文字としてs値をcを最後から分割してリスト型にして返して、Xとする
X = s.rsplit(c)	区切り文字としてs値をcを最後から分割してリスト型にして返された結果をXとする
X = s.rsplit(c)	区切り文字としてs値をcを末尾から分割してリスト型にして返して、Xに代入する
X = s.rsplit(c)	区切り文字としてs値をcを末尾から分割してリスト型にして返した結果をXにする
X = s.rsplit(c)	区切り文字に設定して値sをcを最後から分割してリスト型にして、Xとする
X = s.rsplit(c)	区切り文字に設定して値sをcを最後から分割してリスト型にした結果をXに代入する
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリストにし、Xに代入する
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリストにされた結果をXにする
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリスト型にして、Xにする
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリスト型にした結果をXにする
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリスト型に直して、Xに代入する
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリスト型に直された結果をXとする
X = s.rsplit(c)	cを区切り文字として値sを最後から分割してリストにして返し、Xに代入する
X = s.rsplit(c)	cを区切り文字として値sを最後から分割してリストにして返した結果をXとする
X = s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリスト型にし、Xにする
X = s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリスト型にした結果をXとする
X = s.rsplit(c)	区切り文字に設定してsをcを最後から分割してリスト型にして返して、Xにする
X = s.rsplit(c)	区切り文字に設定してsをcを最後から分割してリスト型にして返した結果をXにする
X = s.rsplit(c)	区切り文字に設定してs値をcを末尾から分割してリスト型にして返して、Xにする
X = s.rsplit(c)	区切り文字に設定してs値をcを末尾から分割してリスト型にして返した結果をXとする
X = s.rsplit(c)	cを区切り文字としてs値を最後から分割してリスト型にして返して、Xにする
X = s.rsplit(c)	cを区切り文字としてs値を最後から分割してリスト型にして返された結果をXとする
X = s.rsplit(c)	区切り文字に設定してsをcを最後から分割してリストにし、Xに代入する
X = s.rsplit(c)	区切り文字に設定してsをcを最後から分割してリストにした結果をXに代入する
X = s.rsplit(c)	cを区切り文字として値sを後ろから分割してリスト型にして返し、Xにする
X = s.rsplit(c)	cを区切り文字として値sを後ろから分割してリスト型にして返された結果をXに代入する
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリストにして返し、Xとする
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリストにして返された結果をXにする
X = s.rsplit(c)	区切り文字として値sをcを最後から分割してリスト型にして返し、Xとする
X = s.rsplit(c)	区切り文字として値sをcを最後から分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリストにして、Xにする
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリストにされた結果をXにする
X = s.rsplit(c)	cを区切り文字に設定してs値を末尾から分割してリストにして返し、Xにする
X = s.rsplit(c)	cを区切り文字に設定してs値を末尾から分割してリストにして返した結果をXとする
X = s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリスト型にし、Xに代入する
X = s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリスト型にした結果をXとする
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリスト型にして、Xに代入する
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリスト型にした結果をXにする
X = s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリスト型に直し、Xに代入する
X = s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリスト型に直した結果をXとする
X = s.rsplit(c)	cを区切り文字としてsを最後から分割してリスト型にして返し、Xにする
X = s.rsplit(c)	cを区切り文字としてsを最後から分割してリスト型にして返した結果をXとする
X = s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリスト型にし、Xに代入する
X = s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリスト型にした結果をXに代入する
X = s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリストに直し、Xに代入する
X = s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリストに直した結果をXに代入する
X = s.rsplit(c)	cを区切り文字として値sを末尾から分割してリストにして返して、Xにする
X = s.rsplit(c)	cを区切り文字として値sを末尾から分割してリストにして返した結果をXにする
X = s.rsplit(c)	区切り文字としてs値をcを末尾から分割してリストにして返し、Xに代入する
X = s.rsplit(c)	区切り文字としてs値をcを末尾から分割してリストにして返された結果をXに代入する
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリストにし、Xにする
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリストにした結果をXにする
X = s.rsplit(c)	cを区切り文字に設定してs値を末尾から分割してリスト型にして返して、Xに代入する
X = s.rsplit(c)	cを区切り文字に設定してs値を末尾から分割してリスト型にして返された結果をXとする
X = s.rsplit(c)	区切り文字に設定してs値をcを後ろから分割してリスト型にして返して、Xに代入する
X = s.rsplit(c)	区切り文字に設定してs値をcを後ろから分割してリスト型にして返した結果をXにする
X = s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリスト型に直し、Xとする
X = s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリスト型に直された結果をXにする
X = s.rsplit(c)	区切り文字に設定して値sをcを後ろから分割してリストにして返し、Xにする
X = s.rsplit(c)	区切り文字に設定して値sをcを後ろから分割してリストにして返された結果をXに代入する
X = s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリストに直して、Xにする
X = s.rsplit(c)	区切り文字に指定してs値をcを最後から分割してリストに直した結果をXに代入する
X = s.rsplit(c)	区切り文字としてsをcを末尾から分割してリスト型にして返して、Xとする
X = s.rsplit(c)	区切り文字としてsをcを末尾から分割してリスト型にして返された結果をXにする
X = s.rsplit(c)	cを区切り文字に設定してsを末尾から分割してリストにして返し、Xとする
X = s.rsplit(c)	cを区切り文字に設定してsを末尾から分割してリストにして返された結果をXに代入する
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリストに直して、Xとする
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリストに直した結果をXに代入する
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリストに直して、Xとする
X = s.rsplit(c)	cを区切り文字に指定してs値を最後から分割してリストに直された結果をXに代入する
X = s.rsplit(c)	cを区切り文字に指定してsを最後から分割してリスト型に直して、Xとする
X = s.rsplit(c)	cを区切り文字に指定してsを最後から分割してリスト型に直した結果をXに代入する
X = s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリストにして、Xにする
X = s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリストにした結果をXにする
X = s.rsplit(c)	区切り文字としてs値をcを終わりから分割してリストにして返して、Xに代入する
X = s.rsplit(c)	区切り文字としてs値をcを終わりから分割してリストにして返された結果をXにする
X = s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリストにし、Xにする
X = s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリストにされた結果をXにする
X = s.rsplit(c)	cを区切り文字に設定してsを末尾から分割してリスト型にして返して、Xにする
X = s.rsplit(c)	cを区切り文字に設定してsを末尾から分割してリスト型にして返した結果をXにする
X = s.rsplit(c)	区切り文字に設定して値sをcを末尾から分割してリストにして返して、Xにする
X = s.rsplit(c)	区切り文字に設定して値sをcを末尾から分割してリストにして返した結果をXに代入する
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリスト型にして、Xとする
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリスト型にされた結果をXとする
X = s.rsplit(c)	区切り文字に設定してs値をcを末尾から分割してリストにして返し、Xとする
X = s.rsplit(c)	区切り文字に設定してs値をcを末尾から分割してリストにして返された結果をXとする
X = s.rsplit(c)	区切り文字に設定してsをcを最後から分割してリスト型にし、Xに代入する
X = s.rsplit(c)	区切り文字に設定してsをcを最後から分割してリスト型にされた結果をXにする
X = s.rsplit(c)	cを区切り文字に指定してsを最後から分割してリスト型にし、Xに代入する
X = s.rsplit(c)	cを区切り文字に指定してsを最後から分割してリスト型にされた結果をXに代入する
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリスト型にして返して、Xとする
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c)	区切り文字に設定して値sをcを末尾から分割してリスト型にして返して、Xにする
X = s.rsplit(c)	区切り文字に設定して値sをcを末尾から分割してリスト型にして返した結果をXにする
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリストにして、Xにする
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリストにした結果をXに代入する
X = s.rsplit(c)	cを区切り文字としてsを終わりから分割してリスト型にして返して、Xとする
X = s.rsplit(c)	cを区切り文字としてsを終わりから分割してリスト型にして返された結果をXとする
X = s.rsplit(c)	区切り文字としてs値をcを最後から分割してリストにして返し、Xに代入する
X = s.rsplit(c)	区切り文字としてs値をcを最後から分割してリストにして返した結果をXとする
X = s.rsplit(c)	区切り文字として値sをcを末尾から分割してリスト型にして返して、Xに代入する
X = s.rsplit(c)	区切り文字として値sをcを末尾から分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c)	区切り文字として値sをcを末尾から分割してリストにして返して、Xに代入する
X = s.rsplit(c)	区切り文字として値sをcを末尾から分割してリストにして返した結果をXにする
X = s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリストにし、Xにする
X = s.rsplit(c)	区切り文字に設定してs値をcを最後から分割してリストにされた結果をXにする
X = s.rsplit(c)	cを区切り文字として値sを末尾から分割してリスト型にして返し、Xとする
X = s.rsplit(c)	cを区切り文字として値sを末尾から分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリストに直し、Xに代入する
X = s.rsplit(c)	cを区切り文字に設定して値sを最後から分割してリストに直した結果をXに代入する
X = s.rsplit(c)	cを区切り文字に設定して値sを末尾から分割してリストにして返して、Xとする
X = s.rsplit(c)	cを区切り文字に設定して値sを末尾から分割してリストにして返した結果をXとする
X = s.rsplit(c)	cを区切り文字に設定して値sを末尾から分割してリスト型にして返し、Xに代入する
X = s.rsplit(c)	cを区切り文字に設定して値sを末尾から分割してリスト型にして返された結果をXにする
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリストにして返し、Xに代入する
X = s.rsplit(c)	cを区切り文字に設定してs値を最後から分割してリストにして返された結果をXに代入する
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリスト型にして、Xに代入する
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリスト型にした結果をXにする
X = s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリストにして、Xとする
X = s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリストにした結果をXにする
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリスト型に直して、Xにする
X = s.rsplit(c)	区切り文字に指定してsをcを最後から分割してリスト型に直された結果をXにする
X = s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリストに直して、Xとする
X = s.rsplit(c)	cを区切り文字に指定して値sを最後から分割してリストに直した結果をXに代入する
X = s.rsplit(c)	区切り文字として値sをcを後ろから分割してリストにして返し、Xとする
X = s.rsplit(c)	区切り文字として値sをcを後ろから分割してリストにして返した結果をXとする
X = s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリスト型に直して、Xとする
X = s.rsplit(c)	cを区切り文字に設定してsを最後から分割してリスト型に直した結果をXとする
X = s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリスト型に直し、Xにする
X = s.rsplit(c)	区切り文字に指定して値sをcを最後から分割してリスト型に直された結果をXにする
X = s.rsplit(c)	cを区切り文字としてs値を終わりから分割してリスト型にして返して、Xにする
X = s.rsplit(c)	cを区切り文字としてs値を終わりから分割してリスト型にして返した結果をXに代入する
s.rsplit(c, 2)	sを終わりからcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	後ろからcでsを最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	後ろからcでs値を最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	終わりからcでsを最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	sを終わりからcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	値sを終わりからcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	sを後ろからcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割したデータのリスト
s.rsplit(c, 2)	値sを終わりからcで最大分割数2まで分割した文字列のリスト
s.rsplit(c, 2)	値sを後ろからcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割した値のリスト
s.rsplit(c, 2)	後ろからcでsを最大分割数2まで分割した文字列のリスト
X = s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割した文字列のリストをXとする
X = s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割した文字列のリストをXに代入する
X = s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割した値のリストをXとする
X = s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割したデータのリストをXとする
X = s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割した値のリストをXに代入する
X = s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割した文字列のリストをXにする
X = s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割した値のリストをXにする
X = s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割したデータのリストをXに代入する
X = s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割した文字列のリストをXとする
X = s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	s値を終わりからcで最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割した文字列のリストをXにする
X = s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割した文字列のリストをXに代入する
X = s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割した文字列のリストをXとする
X = s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割した値のリストをXとする
X = s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割した文字列のリストをXとする
X = s.rsplit(c, 2)	後ろからcでs値を最大分割数2まで分割した値のリストをXに代入する
X = s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割した文字列のリストをXに代入する
X = s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割した文字列のリストをXとする
X = s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割したデータのリストをXに代入する
X = s.rsplit(c, 2)	値sを後ろからcで最大分割数2まで分割した値のリストをXとする
X = s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割したデータのリストをXに代入する
X = s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割した値のリストをXに代入する
X = s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割した文字列のリストをXに代入する
X = s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割した値のリストをXに代入する
X = s.rsplit(c, 2)	sを終わりからcで最大分割数2まで分割した文字列のリストをXとする
X = s.rsplit(c, 2)	後ろからcでsを最大分割数2まで分割した文字列のリストをXとする
X = s.rsplit(c, 2)	s値を後ろからcで最大分割数2まで分割したデータのリストをXに代入する
X = s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割したデータのリストをXとする
X = s.rsplit(c, 2)	後ろからcでs値を最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割した文字列のリストをXに代入する
X = s.rsplit(c, 2)	s値を後ろからcで最大分割数2まで分割した値のリストをXとする
X = s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割したデータのリストをXに代入する
X = s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割した値のリストをXにする
X = s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割した値のリストをXにする
X = s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割した値のリストをXにする
X = s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割した値のリストをXにする
X = s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割した値のリストをXにする
X = s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割した値のリストをXにする
X = s.rsplit(c, 2)	終わりからcでsを最大分割数2まで分割したデータのリストをXにする
X = s.rsplit(c, 2)	値sを終わりからcで最大分割数2まで分割したデータのリストをXとする
s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	終わりからcでs値を最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	後ろからcでs値を最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	後ろからcでsを最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	終わりからcで値sを最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	s値を後ろからcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	s値を終わりからcで最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割してリストを返す
s.rsplit(c, 2)	値sを後ろからcで最大分割数2まで分割してリストを返す
X = s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割してリストを返し、Xとする
X = s.rsplit(c, 2)	sを末尾からcで最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割してリストを返し、Xとする
X = s.rsplit(c, 2)	値sを末尾からcで最大分割数2まで分割してリストを返した結果をXに代入する
X = s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割してリストを返して、Xに代入する
X = s.rsplit(c, 2)	最後からcでs値を最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割してリストを返し、Xにする
X = s.rsplit(c, 2)	最後からcでsを最大分割数2まで分割してリストを返した結果をXに代入する
X = s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割してリストを返して、Xにする
X = s.rsplit(c, 2)	末尾からcでsを最大分割数2まで分割してリストを返した結果をXに代入する
X = s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割してリストを返して、Xとする
X = s.rsplit(c, 2)	sを最後からcで最大分割数2まで分割してリストを返した結果をXとする
X = s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割してリストを返し、Xとする
X = s.rsplit(c, 2)	s値を最後からcで最大分割数2まで分割してリストを返された結果をXに代入する
X = s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割してリストを返して、Xに代入する
X = s.rsplit(c, 2)	値sを最後からcで最大分割数2まで分割してリストを返された結果をXに代入する
X = s.rsplit(c, 2)	終わりからcでs値を最大分割数2まで分割してリストを返し、Xにする
X = s.rsplit(c, 2)	終わりからcでs値を最大分割数2まで分割してリストを返された結果をXとする
X = s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割してリストを返し、Xにする
X = s.rsplit(c, 2)	最後からcで値sを最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	値sを後ろからcで最大分割数2まで分割してリストを返して、Xに代入する
X = s.rsplit(c, 2)	値sを後ろからcで最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割してリストを返し、Xに代入する
X = s.rsplit(c, 2)	末尾からcで値sを最大分割数2まで分割してリストを返された結果をXに代入する
X = s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割してリストを返し、Xとする
X = s.rsplit(c, 2)	s値を末尾からcで最大分割数2まで分割してリストを返した結果をXとする
X = s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割してリストを返して、Xに代入する
X = s.rsplit(c, 2)	末尾からcでs値を最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	終わりからcでsを最大分割数2まで分割してリストを返し、Xにする
X = s.rsplit(c, 2)	終わりからcでsを最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	s値を終わりからcで最大分割数2まで分割してリストを返し、Xとする
X = s.rsplit(c, 2)	s値を終わりからcで最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	後ろからcで値sを最大分割数2まで分割してリストを返し、Xに代入する
X = s.rsplit(c, 2)	後ろからcで値sを最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	sを後ろからcで最大分割数2まで分割してリストを返して、Xにする
X = s.rsplit(c, 2)	sを後ろからcで最大分割数2まで分割してリストを返された結果をXにする
X = s.rsplit(c, 2)	終わりからcで値sを最大分割数2まで分割してリストを返して、Xにする
X = s.rsplit(c, 2)	終わりからcで値sを最大分割数2まで分割してリストを返した結果をXに代入する
X = s.rsplit(c, 2)	sを終わりからcで最大分割数2まで分割してリストを返して、Xにする
X = s.rsplit(c, 2)	sを終わりからcで最大分割数2まで分割してリストを返した結果をXにする
X = s.rsplit(c, 2)	値sを終わりからcで最大分割数2まで分割してリストを返し、Xにする
X = s.rsplit(c, 2)	値sを終わりからcで最大分割数2まで分割してリストを返された結果をXにする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを末尾から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリストに直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリスト型にする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを後ろから分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリスト型にする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を終わりから分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を末尾から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を末尾から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリストにする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型に直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを最後から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを最後から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリストにする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを末尾から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を末尾から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを末尾から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリスト型に直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを最後から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを末尾から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを最後から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型にする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を最後から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリストにする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストにする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリスト型にする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を最後から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストにする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリストに直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型にする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリスト型に直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを末尾から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを後ろから分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリスト型に直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを末尾から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストに直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストにする
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストに直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを後ろから分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストに直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を後ろから分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを後ろから分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を後ろから分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を終わりから分割してリスト型にして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを終わりから分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリストに直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを終わりから分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを末尾から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を末尾から分割してリストにして返す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型に直す
s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを後ろから分割してリストにして返す
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを最後から分割してリスト型にして返して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを最後から分割してリスト型にして返した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを最後から分割してリストにして返し、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを最後から分割してリストにして返した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを末尾から分割してリスト型にして返し、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを末尾から分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型にして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型にして返した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを末尾から分割してリスト型にして返し、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを末尾から分割してリスト型にして返した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型にし、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型にされた結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリスト型にして返して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリスト型にして返した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を末尾から分割してリスト型にして返し、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を末尾から分割してリスト型にして返された結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを末尾から分割してリスト型にして返して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを末尾から分割してリスト型にして返された結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを末尾から分割してリストにして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを末尾から分割してリストにして返された結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを最後から分割してリスト型にして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを最後から分割してリスト型にして返された結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリストにして、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリストにされた結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストにして返し、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストにして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを後ろから分割してリスト型にして返して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを後ろから分割してリスト型にして返した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストにし、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストにした結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリストに直し、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリストに直した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を末尾から分割してリストにして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を末尾から分割してリストにして返された結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストにし、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストにした結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを末尾から分割してリストにして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを末尾から分割してリストにして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリスト型に直して、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリスト型に直した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリストに直して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリストに直された結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを末尾から分割してリストにして返して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを末尾から分割してリストにして返した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を末尾から分割してリストにして返し、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を末尾から分割してリストにして返した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を最後から分割してリストにして返し、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を最後から分割してリストにして返された結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型にし、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型にした結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリスト型に直して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリスト型に直した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストに直して、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストに直した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を最後から分割してリスト型にして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を最後から分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリスト型にして、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリスト型にした結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストにし、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリストにされた結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を終わりから分割してリスト型にして返し、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を終わりから分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリスト型にし、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリスト型にされた結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストにして返して、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストにして返された結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型に直し、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリスト型に直した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリストにし、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリストにした結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリストに直し、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリストに直した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型にして返して、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型にして返された結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリスト型にして、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定して値sを最後から分割してリスト型にした結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリストにして、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリストにした結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを最後から分割してリストにして返し、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを最後から分割してリストにして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型に直し、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を最後から分割してリスト型に直した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストに直し、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストに直された結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを末尾から分割してリスト型にして返して、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを末尾から分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストに直して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリストに直した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリスト型に直し、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してsを最後から分割してリスト型に直した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを末尾から分割してリストにして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを末尾から分割してリストにして返した結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストにして返して、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを最後から分割してリストにして返された結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを終わりから分割してリストにして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを終わりから分割してリストにして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを終わりから分割してリスト型にして返し、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを終わりから分割してリスト型にして返した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を終わりから分割してリストにして返し、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてs値を終わりから分割してリストにして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを終わりから分割してリスト型にして返して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してsを終わりから分割してリスト型にして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を末尾から分割してリスト型にして返して、Xとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定してs値を末尾から分割してリスト型にして返した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを終わりから分割してリストにして返して、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2としてsを終わりから分割してリストにして返した結果をXにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリスト型にして、Xにする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に設定して値sを最後から分割してリスト型にした結果をXとする
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを後ろから分割してリストにして返して、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2として値sを後ろから分割してリストにして返した結果をXに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリスト型に直し、Xに代入する
X = s.rsplit(c, 2)	cを区切り文字、最大分割数を2に指定してs値を最後から分割してリスト型に直した結果をXとする
s.replace(o, n)	s内のoをnに置き換えた文字列
s.replace(o, n)	値s内のoをnに置き換えた文字列
s.replace(o, n)	値s内のoをnに置き換えたデータ
s.replace(o, n)	s内のoをnに置き換えたデータ
s.replace(o, n)	値s内のoをnに置き換えた値
s.replace(o, n)	s値内のoをnに置き換えた文字列
s.replace(o, n)	s内のoをnに置き換えた値
s.replace(o, n)	s値内のoをnに置き換えたデータ
s.replace(o, n)	s値内のoをnに置き換えた値
X = s.replace(o, n)	s内のoをnに置き換えた文字列をXに代入する
X = s.replace(o, n)	s内のoをnに置き換えたデータをXにする
X = s.replace(o, n)	s値内のoをnに置き換えた文字列をXとする
X = s.replace(o, n)	s内のoをnに置き換えた値をXとする
X = s.replace(o, n)	s値内のoをnに置き換えた値をXに代入する
X = s.replace(o, n)	値s内のoをnに置き換えた文字列をXとする
X = s.replace(o, n)	値s内のoをnに置き換えた値をXにする
X = s.replace(o, n)	s値内のoをnに置き換えたデータをXとする
X = s.replace(o, n)	値s内のoをnに置き換えたデータをXにする
s.strip()	sの両端から空白改行を取り除いた文字列
s.strip()	値sの両端から空白改行を除いた値
s.strip()	値sの両端から空白改行を除いた文字列
s.strip()	値sの両端から空白改行を抜いたデータ
s.strip()	s値の両端から空白改行を抜いた値
s.strip()	s値の両端から空白改行を抜いた文字列
s.strip()	sの両端から空白改行を除いたデータ
s.strip()	s値の両端から空白改行を取り除いた値
s.strip()	s値の両端から空白改行を取り除いたデータ
s.strip()	s値の両端から空白改行を除いた文字列
s.strip()	sの両端から空白改行を除いた文字列
s.strip()	値sの両端から空白改行を取り除いたデータ
s.strip()	値sの両端から空白改行を抜いた値
s.strip()	値sの両端から空白改行を抜いた文字列
s.strip()	s値の両端から空白改行を抜いたデータ
s.strip()	sの両端から空白改行を抜いたデータ
s.strip()	s値の両端から空白改行を除いたデータ
s.strip()	sの両端から空白改行を除いた値
s.strip()	sの両端から空白改行を抜いた文字列
s.strip()	s値の両端から空白改行を除いた値
s.strip()	値sの両端から空白改行を取り除いた値
s.strip()	値sの両端から空白改行を除いたデータ
s.strip()	sの両端から空白改行を抜いた値
s.strip()	sの両端から空白改行を取り除いた値
s.strip()	sの両端から空白改行を取り除いたデータ
s.strip()	s値の両端から空白改行を取り除いた文字列
X = s.strip()	sの両端から空白改行を抜いた文字列をXにする
X = s.strip()	値sの両端から空白改行を抜いた値をXとする
X = s.strip()	sの両端から空白改行を除いた文字列をXに代入する
X = s.strip()	s値の両端から空白改行を除いた値をXに代入する
X = s.strip()	s値の両端から空白改行を除いたデータをXにする
X = s.strip()	sの両端から空白改行を抜いた値をXとする
X = s.strip()	値sの両端から空白改行を除いた値をXとする
X = s.strip()	値sの両端から空白改行を抜いた文字列をXに代入する
X = s.strip()	sの両端から空白改行を抜いたデータをXにする
X = s.strip()	sの両端から空白改行を除いたデータをXにする
X = s.strip()	s値の両端から空白改行を除いた文字列をXにする
X = s.strip()	s値の両端から空白改行を抜いたデータをXとする
X = s.strip()	sの両端から空白改行を除いた値をXにする
X = s.strip()	s値の両端から空白改行を抜いた文字列をXとする
X = s.strip()	s値の両端から空白改行を抜いた値をXとする
X = s.strip()	値sの両端から空白改行を除いたデータをXとする
X = s.strip()	値sの両端から空白改行を抜いたデータをXとする
X = s.strip()	sの両端から空白改行を取り除いた文字列をXとする
X = s.strip()	値sの両端から空白改行を除いた文字列をXとする
X = s.strip()	sの両端から空白改行を取り除いた値をXとする
X = s.strip()	値sの両端から空白改行を取り除いた値をXにする
X = s.strip()	値sの両端から空白改行を取り除いた文字列をXとする
X = s.strip()	s値の両端から空白改行を取り除いた値をXとする
X = s.strip()	s値の両端から空白改行を取り除いたデータをXに代入する
X = s.strip()	値sの両端から空白改行を取り除いたデータをXに代入する
X = s.strip()	s値の両端から空白改行を取り除いた文字列をXにする
s.strip('x')	sの両端から'x'を抜いた文字列
s.strip('x')	s値の両端から'x'を抜いた値
s.strip('x')	sの両端から'x'を抜いたデータ
s.strip('x')	sの両端から'x'を除いた文字列
s.strip('x')	s値の両端から'x'を抜いたデータ
s.strip('x')	値sの両端から'x'を抜いたデータ
s.strip('x')	sの両端から'x'を除いたデータ
s.strip('x')	値sの両端から'x'を除いた値
s.strip('x')	値sの両端から'x'を除いたデータ
s.strip('x')	値sの両端から'x'を除いた文字列
s.strip('x')	値sの両端から'x'を抜いた文字列
s.strip('x')	値sの両端から'x'を抜いた値
s.strip('x')	sの両端から'x'を取り除いた値
s.strip('x')	s値の両端から'x'を除いた値
s.strip('x')	sの両端から'x'を除いた値
s.strip('x')	s値の両端から'x'を除いた文字列
s.strip('x')	値sの両端から'x'を取り除いた値
s.strip('x')	s値の両端から'x'を取り除いた文字列
s.strip('x')	sの両端から'x'を抜いた値
s.strip('x')	s値の両端から'x'を抜いた文字列
s.strip('x')	s値の両端から'x'を除いたデータ
s.strip('x')	s値の両端から'x'を取り除いたデータ
s.strip('x')	値sの両端から'x'を取り除いた文字列
s.strip('x')	sの両端から'x'を取り除いた文字列
s.strip('x')	値sの両端から'x'を取り除いたデータ
s.strip('x')	s値の両端から'x'を取り除いた値
s.strip('x')	sの両端から'x'を取り除いたデータ
X = s.strip('x')	sの両端から'x'を取り除いた文字列をXとする
X = s.strip('x')	s値の両端から'x'を抜いたデータをXに代入する
X = s.strip('x')	値sの両端から'x'を除いた文字列をXとする
X = s.strip('x')	値sの両端から'x'を抜いた値をXに代入する
X = s.strip('x')	s値の両端から'x'を除いた値をXに代入する
X = s.strip('x')	sの両端から'x'を取り除いた値をXにする
X = s.strip('x')	s値の両端から'x'を抜いた値をXにする
X = s.strip('x')	値sの両端から'x'を抜いたデータをXとする
X = s.strip('x')	s値の両端から'x'を除いたデータをXとする
X = s.strip('x')	s値の両端から'x'を除いた文字列をXにする
X = s.strip('x')	sの両端から'x'を除いた値をXに代入する
X = s.strip('x')	sの両端から'x'を除いた文字列をXにする
X = s.strip('x')	値sの両端から'x'を取り除いたデータをXとする
X = s.strip('x')	sの両端から'x'を抜いたデータをXとする
X = s.strip('x')	値sの両端から'x'を除いたデータをXとする
X = s.strip('x')	s値の両端から'x'を抜いた文字列をXとする
X = s.strip('x')	sの両端から'x'を取り除いたデータをXにする
X = s.strip('x')	値sの両端から'x'を取り除いた文字列をXとする
X = s.strip('x')	値sの両端から'x'を取り除いた値をXに代入する
X = s.strip('x')	s値の両端から'x'を取り除いたデータをXに代入する
X = s.strip('x')	sの両端から'x'を抜いた文字列をXに代入する
X = s.strip('x')	sの両端から'x'を除いたデータをXに代入する
X = s.strip('x')	sの両端から'x'を抜いた値をXとする
X = s.strip('x')	値sの両端から'x'を抜いた文字列をXにする
X = s.strip('x')	値sの両端から'x'を除いた値をXにする
X = s.strip('x')	s値の両端から'x'を取り除いた文字列をXにする
X = s.strip('x')	s値の両端から'x'を取り除いた値をXにする
s.lstrip()	sの最初から空白改行を取り除いた文字列
s.lstrip()	sの最初から空白改行を除いた文字列
s.lstrip()	sの先頭から空白改行を取り除いた値
s.lstrip()	値sの最初から空白改行を取り除いた文字列
s.lstrip()	sの左側から空白改行を除いた文字列
s.lstrip()	値sの先頭から空白改行を抜いた値
s.lstrip()	s値の最初から空白改行を除いた文字列
s.lstrip()	sの左側から空白改行を抜いた値
s.lstrip()	値sの最初から空白改行を抜いたデータ
s.lstrip()	s値の先頭から空白改行を取り除いた値
s.lstrip()	値sの最初から空白改行を抜いた値
s.lstrip()	sの先頭から空白改行を除いたデータ
s.lstrip()	s値の左側から空白改行を抜いたデータ
s.lstrip()	s値の最初から空白改行を取り除いた文字列
s.lstrip()	s値の左側から空白改行を取り除いた文字列
s.lstrip()	値sの左側から空白改行を除いたデータ
s.lstrip()	s値の左側から空白改行を除いたデータ
s.lstrip()	sの最初から空白改行を抜いた値
s.lstrip()	s値の先頭から空白改行を除いた文字列
s.lstrip()	値sの左側から空白改行を抜いた値
s.lstrip()	値sの左側から空白改行を除いた文字列
s.lstrip()	s値の最初から空白改行を除いたデータ
s.lstrip()	s値の最初から空白改行を取り除いた値
s.lstrip()	sの左側から空白改行を抜いたデータ
s.lstrip()	値sの先頭から空白改行を取り除いた値
s.lstrip()	s値の左側から空白改行を抜いた値
s.lstrip()	s値の最初から空白改行を抜いた値
s.lstrip()	値sの先頭から空白改行を除いたデータ
s.lstrip()	値sの左側から空白改行を抜いたデータ
s.lstrip()	sの先頭から空白改行を除いた文字列
s.lstrip()	s値の先頭から空白改行を取り除いた文字列
s.lstrip()	sの最初から空白改行を抜いたデータ
s.lstrip()	値sの左側から空白改行を取り除いた値
s.lstrip()	値sの最初から空白改行を取り除いた値
s.lstrip()	sの最初から空白改行を除いたデータ
s.lstrip()	値sの最初から空白改行を除いたデータ
s.lstrip()	s値の先頭から空白改行を抜いたデータ
s.lstrip()	sの先頭から空白改行を抜いた値
s.lstrip()	sの左側から空白改行を除いたデータ
s.lstrip()	値sの左側から空白改行を取り除いた文字列
s.lstrip()	s値の先頭から空白改行を除いたデータ
s.lstrip()	sの最初から空白改行を取り除いた値
s.lstrip()	s値の左側から空白改行を取り除いた値
s.lstrip()	値sの先頭から空白改行を取り除いた文字列
s.lstrip()	s値の左側から空白改行を除いた文字列
s.lstrip()	sの左側から空白改行を取り除いた値
s.lstrip()	s値の最初から空白改行を抜いたデータ
s.lstrip()	sの先頭から空白改行を取り除いた文字列
s.lstrip()	値sの先頭から空白改行を抜いたデータ
s.lstrip()	sの先頭から空白改行を抜いたデータ
s.lstrip()	s値の先頭から空白改行を抜いた値
s.lstrip()	値sの最初から空白改行を除いた文字列
X = s.lstrip()	sの最初から空白改行を取り除いた文字列をXとする
X = s.lstrip()	値sの左側から空白改行を除いた文字列をXにする
X = s.lstrip()	値sの左側から空白改行を抜いたデータをXにする
X = s.lstrip()	sの先頭から空白改行を取り除いた値をXに代入する
X = s.lstrip()	値sの最初から空白改行を取り除いた文字列をXとする
X = s.lstrip()	値sの最初から空白改行を除いた文字列をXとする
X = s.lstrip()	s値の左側から空白改行を除いた文字列をXに代入する
X = s.lstrip()	sの最初から空白改行を除いた文字列をXに代入する
X = s.lstrip()	値sの先頭から空白改行を取り除いた値をXにする
X = s.lstrip()	s値の先頭から空白改行を抜いた値をXにする
X = s.lstrip()	値sの先頭から空白改行を抜いた値をXとする
X = s.lstrip()	値sの先頭から空白改行を除いたデータをXに代入する
X = s.lstrip()	値sの左側から空白改行を除いたデータをXに代入する
X = s.lstrip()	値sの先頭から空白改行を抜いたデータをXに代入する
X = s.lstrip()	sの最初から空白改行を除いたデータをXとする
X = s.lstrip()	s値の最初から空白改行を除いた文字列をXにする
X = s.lstrip()	値sの先頭から空白改行を除いた文字列をXに代入する
X = s.lstrip()	s値の先頭から空白改行を抜いたデータをXとする
X = s.lstrip()	値sの最初から空白改行を取り除いた値をXに代入する
X = s.lstrip()	s値の先頭から空白改行を取り除いた文字列をXに代入する
X = s.lstrip()	sの最初から空白改行を抜いた値をXに代入する
X = s.lstrip()	値sの最初から空白改行を抜いた値をXにする
X = s.lstrip()	値sの最初から空白改行を除いたデータをXに代入する
X = s.lstrip()	値sの左側から空白改行を取り除いた値をXに代入する
X = s.lstrip()	値sの左側から空白改行を取り除いた文字列をXに代入する
X = s.lstrip()	s値の最初から空白改行を取り除いた値をXに代入する
X = s.lstrip()	sの最初から空白改行を抜いたデータをXに代入する
X = s.lstrip()	値sの先頭から空白改行を取り除いた文字列をXに代入する
X = s.lstrip()	sの左側から空白改行を抜いたデータをXにする
X = s.lstrip()	sの左側から空白改行を抜いた値をXにする
X = s.lstrip()	s値の最初から空白改行を取り除いた文字列をXとする
X = s.lstrip()	sの左側から空白改行を除いた文字列をXにする
X = s.lstrip()	s値の最初から空白改行を除いたデータをXとする
X = s.lstrip()	sの先頭から空白改行を除いた文字列をXにする
X = s.lstrip()	値sの最初から空白改行を抜いたデータをXに代入する
X = s.lstrip()	sの先頭から空白改行を抜いたデータをXにする
X = s.lstrip()	sの先頭から空白改行を抜いた値をXに代入する
X = s.lstrip()	s値の最初から空白改行を抜いた値をXにする
X = s.lstrip()	s値の左側から空白改行を抜いたデータをXにする
X = s.lstrip()	s値の先頭から空白改行を取り除いた値をXとする
X = s.lstrip()	値sの左側から空白改行を抜いた値をXにする
X = s.lstrip()	sの最初から空白改行を取り除いた値をXにする
X = s.lstrip()	s値の左側から空白改行を除いたデータをXとする
X = s.lstrip()	s値の左側から空白改行を取り除いた文字列をXに代入する
X = s.lstrip()	s値の左側から空白改行を抜いた値をXに代入する
X = s.lstrip()	s値の先頭から空白改行を除いたデータをXとする
X = s.lstrip()	sの先頭から空白改行を除いたデータをXに代入する
X = s.lstrip()	s値の最初から空白改行を抜いたデータをXとする
X = s.lstrip()	sの左側から空白改行を取り除いた文字列をXにする
X = s.lstrip()	s値の先頭から空白改行を除いた文字列をXとする
X = s.lstrip()	s値の左側から空白改行を取り除いた値をXにする
s.lstrip('x')	sの左側から'x'を取り除いた文字列
s.lstrip('x')	値sの最初から'x'を抜いたデータ
s.lstrip('x')	値sの先頭から'x'を抜いたデータ
s.lstrip('x')	sの先頭から'x'を取り除いた値
s.lstrip('x')	sの最初から'x'を除いた文字列
s.lstrip('x')	値sの左側から'x'を抜いたデータ
s.lstrip('x')	s値の最初から'x'を除いたデータ
s.lstrip('x')	s値の最初から'x'を抜いたデータ
s.lstrip('x')	値sの最初から'x'を取り除いた値
s.lstrip('x')	sの左側から'x'を除いた文字列
s.lstrip('x')	値sの最初から'x'を抜いた値
s.lstrip('x')	値sの最初から'x'を取り除いた文字列
s.lstrip('x')	sの左側から'x'を抜いた値
s.lstrip('x')	sの左側から'x'を抜いたデータ
s.lstrip('x')	s値の左側から'x'を取り除いた値
s.lstrip('x')	sの先頭から'x'を除いた文字列
s.lstrip('x')	値sの最初から'x'を除いたデータ
s.lstrip('x')	値sの左側から'x'を除いたデータ
s.lstrip('x')	s値の最初から'x'を取り除いた値
s.lstrip('x')	s値の先頭から'x'を除いたデータ
s.lstrip('x')	sの左側から'x'を除いたデータ
s.lstrip('x')	sの先頭から'x'を抜いた値
s.lstrip('x')	sの最初から'x'を取り除いた文字列
s.lstrip('x')	sの先頭から'x'を取り除いた文字列
s.lstrip('x')	s値の先頭から'x'を除いた文字列
s.lstrip('x')	s値の左側から'x'を除いた文字列
s.lstrip('x')	値sの先頭から'x'を除いたデータ
s.lstrip('x')	値sの先頭から'x'を抜いた値
s.lstrip('x')	s値の最初から'x'を取り除いた文字列
s.lstrip('x')	sの最初から'x'を抜いたデータ
s.lstrip('x')	s値の左側から'x'を除いたデータ
s.lstrip('x')	sの先頭から'x'を除いたデータ
s.lstrip('x')	sの最初から'x'を抜いた値
s.lstrip('x')	値sの最初から'x'を除いた文字列
s.lstrip('x')	値sの左側から'x'を除いた文字列
s.lstrip('x')	s値の左側から'x'を抜いた値
s.lstrip('x')	値sの左側から'x'を取り除いた値
s.lstrip('x')	s値の先頭から'x'を抜いたデータ
s.lstrip('x')	値sの先頭から'x'を除いた文字列
s.lstrip('x')	s値の左側から'x'を抜いたデータ
s.lstrip('x')	s値の先頭から'x'を取り除いた文字列
s.lstrip('x')	sの先頭から'x'を抜いたデータ
s.lstrip('x')	s値の最初から'x'を抜いた値
s.lstrip('x')	s値の左側から'x'を取り除いた文字列
s.lstrip('x')	sの左側から'x'を取り除いた値
s.lstrip('x')	値sの先頭から'x'を取り除いた文字列
s.lstrip('x')	s値の先頭から'x'を取り除いた値
s.lstrip('x')	値sの先頭から'x'を取り除いた値
s.lstrip('x')	sの最初から'x'を除いたデータ
s.lstrip('x')	s値の最初から'x'を除いた文字列
X = s.lstrip('x')	sの左側から'x'を取り除いた文字列をXとする
X = s.lstrip('x')	s値の左側から'x'を除いたデータをXにする
X = s.lstrip('x')	sの左側から'x'を除いた文字列をXに代入する
X = s.lstrip('x')	sの左側から'x'を抜いた値をXとする
X = s.lstrip('x')	sの最初から'x'を除いた文字列をXに代入する
X = s.lstrip('x')	sの最初から'x'を抜いた値をXにする
X = s.lstrip('x')	値sの先頭から'x'を抜いたデータをXとする
X = s.lstrip('x')	s値の先頭から'x'を抜いた値をXとする
X = s.lstrip('x')	s値の先頭から'x'を抜いたデータをXに代入する
X = s.lstrip('x')	sの左側から'x'を抜いたデータをXに代入する
X = s.lstrip('x')	s値の左側から'x'を抜いた値をXに代入する
X = s.lstrip('x')	s値の先頭から'x'を除いた文字列をXとする
X = s.lstrip('x')	s値の左側から'x'を抜いたデータをXにする
X = s.lstrip('x')	sの先頭から'x'を除いた文字列をXとする
X = s.lstrip('x')	s値の最初から'x'を取り除いた値をXにする
X = s.lstrip('x')	sの先頭から'x'を取り除いた値をXとする
X = s.lstrip('x')	sの最初から'x'を取り除いた文字列をXにする
X = s.lstrip('x')	値sの先頭から'x'を取り除いた文字列をXとする
X = s.lstrip('x')	s値の最初から'x'を抜いた値をXとする
X = s.lstrip('x')	s値の最初から'x'を取り除いた文字列をXに代入する
X = s.lstrip('x')	値sの最初から'x'を抜いたデータをXに代入する
X = s.lstrip('x')	sの先頭から'x'を除いたデータをXにする
X = s.lstrip('x')	sの先頭から'x'を抜いたデータをXにする
X = s.lstrip('x')	値sの先頭から'x'を除いたデータをXとする
X = s.lstrip('x')	値sの先頭から'x'を除いた文字列をXとする
X = s.lstrip('x')	s値の最初から'x'を抜いたデータをXにする
X = s.lstrip('x')	sの左側から'x'を除いたデータをXに代入する
X = s.lstrip('x')	値sの最初から'x'を取り除いた文字列をXにする
X = s.lstrip('x')	値sの最初から'x'を除いたデータをXにする
X = s.lstrip('x')	sの左側から'x'を取り除いた値をXとする
X = s.lstrip('x')	値sの左側から'x'を抜いた値をXに代入する
X = s.lstrip('x')	sの最初から'x'を除いたデータをXにする
X = s.lstrip('x')	s値の最初から'x'を除いたデータをXに代入する
X = s.lstrip('x')	値sの最初から'x'を抜いた値をXに代入する
X = s.lstrip('x')	s値の左側から'x'を取り除いた文字列をXに代入する
X = s.lstrip('x')	s値の左側から'x'を除いた文字列をXにする
X = s.lstrip('x')	sの最初から'x'を抜いたデータをXに代入する
X = s.lstrip('x')	値sの最初から'x'を除いた文字列をXにする
X = s.lstrip('x')	s値の先頭から'x'を取り除いた値をXとする
X = s.lstrip('x')	sの先頭から'x'を抜いた値をXにする
X = s.lstrip('x')	値sの最初から'x'を取り除いた値をXにする
X = s.lstrip('x')	s値の最初から'x'を除いた文字列をXに代入する
X = s.lstrip('x')	sの最初から'x'を取り除いた値をXにする
X = s.lstrip('x')	値sの左側から'x'を除いたデータをXに代入する
X = s.lstrip('x')	値sの先頭から'x'を抜いた値をXとする
X = s.lstrip('x')	値sの左側から'x'を取り除いた値をXに代入する
X = s.lstrip('x')	値sの左側から'x'を除いた文字列をXにする
X = s.lstrip('x')	値sの先頭から'x'を取り除いた値をXとする
X = s.lstrip('x')	sの先頭から'x'を取り除いた文字列をXとする
X = s.lstrip('x')	値sの左側から'x'を取り除いた文字列をXにする
X = s.lstrip('x')	s値の先頭から'x'を除いたデータをXにする
X = s.lstrip('x')	s値の先頭から'x'を取り除いた文字列をXに代入する
s.rstrip()	sの最後から空白改行を取り除いた文字列
s.rstrip()	s値の末尾から空白改行を除いた文字列
s.rstrip()	値sの右側から空白改行を取り除いた文字列
s.rstrip()	値sの末尾から空白改行を抜いた値
s.rstrip()	s値の最後から空白改行を除いた文字列
s.rstrip()	s値の末尾から空白改行を除いたデータ
s.rstrip()	sの右側から空白改行を除いたデータ
s.rstrip()	sの右側から空白改行を除いた文字列
s.rstrip()	値sの右側から空白改行を除いたデータ
s.rstrip()	値sの最後から空白改行を抜いた値
s.rstrip()	s値の最後から空白改行を取り除いた値
s.rstrip()	s値の右側から空白改行を除いた文字列
s.rstrip()	sの右側から空白改行を取り除いた文字列
s.rstrip()	sの末尾から空白改行を除いた文字列
s.rstrip()	s値の右側から空白改行を取り除いた値
s.rstrip()	値sの最後から空白改行を除いたデータ
s.rstrip()	sの最後から空白改行を除いた文字列
s.rstrip()	値sの右側から空白改行を取り除いた値
s.rstrip()	s値の末尾から空白改行を抜いた値
s.rstrip()	s値の最後から空白改行を抜いた値
s.rstrip()	s値の末尾から空白改行を取り除いた文字列
s.rstrip()	値sの末尾から空白改行を取り除いた値
s.rstrip()	s値の末尾から空白改行を取り除いた値
s.rstrip()	値sの右側から空白改行を抜いた値
s.rstrip()	s値の右側から空白改行を除いたデータ
s.rstrip()	sの末尾から空白改行を抜いたデータ
s.rstrip()	値sの末尾から空白改行を取り除いた文字列
s.rstrip()	値sの終わりから空白改行を取り除いた値
s.rstrip()	sの終わりから空白改行を取り除いた値
s.rstrip()	s値の最後から空白改行を抜いたデータ
s.rstrip()	sの最後から空白改行を抜いた値
s.rstrip()	s値の末尾から空白改行を抜いたデータ
s.rstrip()	sの右側から空白改行を取り除いた値
s.rstrip()	値sの最後から空白改行を取り除いた文字列
s.rstrip()	値sの末尾から空白改行を除いたデータ
s.rstrip()	sの末尾から空白改行を取り除いた値
s.rstrip()	s値の右側から空白改行を抜いた値
s.rstrip()	sの末尾から空白改行を抜いた値
s.rstrip()	値sの末尾から空白改行を除いた文字列
s.rstrip()	値sの右側から空白改行を抜いたデータ
s.rstrip()	s値の右側から空白改行を抜いたデータ
s.rstrip()	s値の右側から空白改行を取り除いた文字列
s.rstrip()	s値の最後から空白改行を取り除いた文字列
s.rstrip()	sの右側から空白改行を抜いた値
s.rstrip()	sの最後から空白改行を抜いたデータ
s.rstrip()	値sの右側から空白改行を除いた文字列
s.rstrip()	値sの最後から空白改行を除いた文字列
s.rstrip()	値sの最後から空白改行を抜いたデータ
s.rstrip()	s値の終わりから空白改行を抜いた値
s.rstrip()	s値の後ろから空白改行を除いた文字列
s.rstrip()	sの最後から空白改行を除いたデータ
s.rstrip()	sの末尾から空白改行を取り除いた文字列
s.rstrip()	sの末尾から空白改行を除いたデータ
s.rstrip()	sの右側から空白改行を抜いたデータ
s.rstrip()	s値の後ろから空白改行を除いたデータ
s.rstrip()	値sの最後から空白改行を取り除いた値
s.rstrip()	sの終わりから空白改行を抜いた値
s.rstrip()	値sの末尾から空白改行を抜いたデータ
s.rstrip()	sの後ろから空白改行を取り除いた値
s.rstrip()	sの終わりから空白改行を除いた文字列
s.rstrip()	s値の後ろから空白改行を取り除いた文字列
X = s.rstrip()	sの最後から空白改行を取り除いた文字列をXに代入する
X = s.rstrip()	s値の右側から空白改行を抜いたデータをXとする
X = s.rstrip()	値sの右側から空白改行を取り除いた文字列をXとする
X = s.rstrip()	値sの右側から空白改行を除いた文字列をXに代入する
X = s.rstrip()	値sの末尾から空白改行を抜いたデータをXとする
X = s.rstrip()	値sの右側から空白改行を抜いた値をXにする
X = s.rstrip()	値sの末尾から空白改行を除いたデータをXにする
X = s.rstrip()	s値の末尾から空白改行を抜いた値をXとする
X = s.rstrip()	値sの最後から空白改行を取り除いた値をXに代入する
X = s.rstrip()	s値の右側から空白改行を除いたデータをXにする
X = s.rstrip()	sの末尾から空白改行を抜いた値をXに代入する
X = s.rstrip()	sの右側から空白改行を抜いたデータをXにする
X = s.rstrip()	sの最後から空白改行を抜いたデータをXにする
X = s.rstrip()	値sの終わりから空白改行を取り除いた文字列をXにする
X = s.rstrip()	sの右側から空白改行を抜いた値をXにする
X = s.rstrip()	sの右側から空白改行を取り除いた文字列をXとする
X = s.rstrip()	sの終わりから空白改行を取り除いた値をXとする
X = s.rstrip()	値sの右側から空白改行を除いたデータをXに代入する
X = s.rstrip()	sの終わりから空白改行を取り除いた文字列をXとする
X = s.rstrip()	sの右側から空白改行を除いたデータをXにする
X = s.rstrip()	値sの最後から空白改行を抜いた値をXにする
X = s.rstrip()	値sの末尾から空白改行を取り除いた文字列をXにする
X = s.rstrip()	s値の終わりから空白改行を除いたデータをXとする
X = s.rstrip()	s値の終わりから空白改行を除いた文字列をXに代入する
X = s.rstrip()	s値の末尾から空白改行を取り除いた文字列をXに代入する
X = s.rstrip()	sの末尾から空白改行を取り除いた文字列をXにする
X = s.rstrip()	s値の右側から空白改行を取り除いた文字列をXとする
X = s.rstrip()	値sの右側から空白改行を抜いたデータをXとする
X = s.rstrip()	sの右側から空白改行を取り除いた値をXとする
X = s.rstrip()	s値の末尾から空白改行を抜いたデータをXに代入する
X = s.rstrip()	s値の最後から空白改行を除いたデータをXに代入する
X = s.rstrip()	s値の最後から空白改行を取り除いた値をXに代入する
X = s.rstrip()	値sの末尾から空白改行を抜いた値をXとする
X = s.rstrip()	値sの右側から空白改行を取り除いた値をXに代入する
X = s.rstrip()	値sの最後から空白改行を除いた文字列をXにする
X = s.rstrip()	sの末尾から空白改行を除いたデータをXに代入する
X = s.rstrip()	s値の右側から空白改行を除いた文字列をXにする
X = s.rstrip()	s値の末尾から空白改行を除いた文字列をXに代入する
X = s.rstrip()	sの最後から空白改行を除いた文字列をXに代入する
X = s.rstrip()	s値の末尾から空白改行を除いたデータをXに代入する
X = s.rstrip()	値sの後ろから空白改行を抜いたデータをXとする
X = s.rstrip()	s値の右側から空白改行を抜いた値をXにする
X = s.rstrip()	sの末尾から空白改行を除いた文字列をXに代入する
X = s.rstrip()	sの末尾から空白改行を抜いたデータをXとする
X = s.rstrip()	sの最後から空白改行を取り除いた値をXに代入する
X = s.rstrip()	sの末尾から空白改行を取り除いた値をXにする
X = s.rstrip()	値sの最後から空白改行を取り除いた文字列をXに代入する
X = s.rstrip()	sの最後から空白改行を除いたデータをXに代入する
X = s.rstrip()	値sの終わりから空白改行を除いたデータをXにする
X = s.rstrip()	sの右側から空白改行を除いた文字列をXに代入する
X = s.rstrip()	s値の最後から空白改行を抜いた値をXに代入する
X = s.rstrip()	s値の最後から空白改行を取り除いた文字列をXとする
X = s.rstrip()	s値の最後から空白改行を抜いたデータをXとする
X = s.rstrip()	値sの最後から空白改行を抜いたデータをXにする
X = s.rstrip()	値sの後ろから空白改行を取り除いた値をXとする
X = s.rstrip()	値sの最後から空白改行を除いたデータをXに代入する
X = s.rstrip()	sの最後から空白改行を抜いた値をXに代入する
X = s.rstrip()	s値の右側から空白改行を取り除いた値をXとする
X = s.rstrip()	値sの末尾から空白改行を取り除いた値をXにする
X = s.rstrip()	値sの終わりから空白改行を抜いた値をXにする
X = s.rstrip()	s値の最後から空白改行を除いた文字列をXとする
s.rstrip('x')	sの末尾から'x'を取り除いた文字
s.rstrip('x')	s値の右側から'x'を除いた文字
s.rstrip('x')	sの最後から'x'を取り除いた文字
s.rstrip('x')	値sの右側から'x'を除いた文字
s.rstrip('x')	sの右側から'x'を抜いた文字
s.rstrip('x')	sの最後から'x'を除いた文字
s.rstrip('x')	sの末尾から'x'を除いた文字
s.rstrip('x')	s値の末尾から'x'を抜いた文字
s.rstrip('x')	s値の後ろから'x'を取り除いた文字
s.rstrip('x')	値sの右側から'x'を抜いた文字
s.rstrip('x')	s値の右側から'x'を抜いた文字
s.rstrip('x')	sの末尾から'x'を抜いた文字
s.rstrip('x')	s値の右側から'x'を取り除いた文字
s.rstrip('x')	sの右側から'x'を除いた文字
s.rstrip('x')	値sの末尾から'x'を取り除いた文字
s.rstrip('x')	値sの最後から'x'を取り除いた文字
s.rstrip('x')	s値の最後から'x'を抜いた文字
s.rstrip('x')	値sの右側から'x'を取り除いた文字
s.rstrip('x')	sの最後から'x'を抜いた文字
s.rstrip('x')	値sの終わりから'x'を抜いた文字
s.rstrip('x')	s値の末尾から'x'を取り除いた文字
s.rstrip('x')	値sの末尾から'x'を除いた文字
s.rstrip('x')	値sの末尾から'x'を抜いた文字
s.rstrip('x')	sの右側から'x'を取り除いた文字
s.rstrip('x')	値sの最後から'x'を除いた文字
s.rstrip('x')	値sの最後から'x'を抜いた文字
s.rstrip('x')	s値の末尾から'x'を除いた文字
s.rstrip('x')	s値の最後から'x'を取り除いた文字
s.rstrip('x')	sの終わりから'x'を除いた文字
s.rstrip('x')	値sの後ろから'x'を抜いた文字
s.rstrip('x')	sの後ろから'x'を除いた文字
s.rstrip('x')	s値の最後から'x'を除いた文字
s.rstrip('x')	s値の後ろから'x'を除いた文字
s.rstrip('x')	値sの後ろから'x'を除いた文字
s.rstrip('x')	値sの終わりから'x'を除いた文字
s.rstrip('x')	sの終わりから'x'を抜いた文字
X = s.rstrip('x')	sの最後から'x'を取り除いた文字をXに代入する
X = s.rstrip('x')	値sの右側から'x'を抜いた文字をXとする
X = s.rstrip('x')	s値の最後から'x'を取り除いた文字をXに代入する
X = s.rstrip('x')	s値の末尾から'x'を取り除いた文字をXに代入する
X = s.rstrip('x')	値sの右側から'x'を取り除いた文字をXとする
X = s.rstrip('x')	s値の右側から'x'を抜いた文字をXに代入する
X = s.rstrip('x')	s値の右側から'x'を除いた文字をXに代入する
X = s.rstrip('x')	s値の右側から'x'を取り除いた文字をXとする
X = s.rstrip('x')	sの終わりから'x'を除いた文字をXにする
X = s.rstrip('x')	値sの後ろから'x'を除いた文字をXに代入する
X = s.rstrip('x')	sの右側から'x'を取り除いた文字をXとする
X = s.rstrip('x')	sの右側から'x'を除いた文字をXに代入する
X = s.rstrip('x')	値sの最後から'x'を抜いた文字をXに代入する
X = s.rstrip('x')	s値の最後から'x'を抜いた文字をXにする
X = s.rstrip('x')	sの右側から'x'を抜いた文字をXに代入する
X = s.rstrip('x')	値sの末尾から'x'を抜いた文字をXとする
X = s.rstrip('x')	値sの終わりから'x'を抜いた文字をXに代入する
X = s.rstrip('x')	値sの末尾から'x'を取り除いた文字をXに代入する
X = s.rstrip('x')	値sの右側から'x'を除いた文字をXとする
X = s.rstrip('x')	sの末尾から'x'を取り除いた文字をXに代入する
X = s.rstrip('x')	sの最後から'x'を除いた文字をXにする
X = s.rstrip('x')	sの末尾から'x'を除いた文字をXにする
X = s.rstrip('x')	値sの終わりから'x'を除いた文字をXに代入する
X = s.rstrip('x')	値sの後ろから'x'を取り除いた文字をXに代入する
X = s.rstrip('x')	sの最後から'x'を抜いた文字をXにする
X = s.rstrip('x')	sの末尾から'x'を抜いた文字をXにする
X = s.rstrip('x')	sの後ろから'x'を抜いた文字をXに代入する
X = s.rstrip('x')	値sの最後から'x'を除いた文字をXにする
X = s.rstrip('x')	値sの最後から'x'を取り除いた文字をXに代入する
X = s.rstrip('x')	s値の終わりから'x'を取り除いた文字をXにする
X = s.rstrip('x')	値sの末尾から'x'を除いた文字をXに代入する
X = s.rstrip('x')	s値の最後から'x'を除いた文字をXに代入する
X = s.rstrip('x')	s値の末尾から'x'を除いた文字をXとする
X = s.rstrip('x')	s値の後ろから'x'を除いた文字をXに代入する
X = s.rstrip('x')	s値の末尾から'x'を抜いた文字をXとする
s.zfill(n)	sを長さがnになるように左を'0'で埋めた文字列
s.zfill(n)	s値を長さがnになるように左を'0'で埋めた文字列
s.zfill(n)	s値を長さがnになるように左を'0'で埋めたデータ
s.zfill(n)	sを長さがnになるように'0'で左を埋めた文字列
s.zfill(n)	値sを長さがnになるように左を'0'で埋めた文字列
s.zfill(n)	sを長さがnになるように'0'で左を埋めたデータ
s.zfill(n)	値sを長さがnになるように左を'0'で埋めたデータ
s.zfill(n)	s値を長さがnになるように'0'で左を埋めたデータ
s.zfill(n)	sを長さがnになるように'0'で左を埋めた値
s.zfill(n)	sを長さがnになるように左を'0'で埋めたデータ
s.zfill(n)	s値を長さがnになるように左を'0'で埋めた値
s.zfill(n)	sを長さがnになるように左を'0'で埋めた値
s.zfill(n)	s値を長さがnになるように'0'で左を埋めた文字列
s.zfill(n)	値sを長さがnになるように左を'0'で埋めた値
s.zfill(n)	値sを長さがnになるように'0'で左を埋めたデータ
s.zfill(n)	値sを長さがnになるように'0'で左を埋めた値
s.zfill(n)	s値を長さがnになるように'0'で左を埋めた値
s.zfill(n)	値sを長さがnになるように'0'で左を埋めた文字列
X = s.zfill(n)	sを長さがnになるように左を'0'で埋めた文字列をXに代入する
X = s.zfill(n)	s値を長さがnになるように'0'で左を埋めた文字列をXに代入する
X = s.zfill(n)	値sを長さがnになるように左を'0'で埋めた文字列をXとする
X = s.zfill(n)	sを長さがnになるように'0'で左を埋めたデータをXにする
X = s.zfill(n)	sを長さがnになるように'0'で左を埋めた文字列をXに代入する
X = s.zfill(n)	s値を長さがnになるように左を'0'で埋めた文字列をXとする
X = s.zfill(n)	s値を長さがnになるように左を'0'で埋めた値をXとする
X = s.zfill(n)	s値を長さがnになるように左を'0'で埋めたデータをXにする
X = s.zfill(n)	値sを長さがnになるように'0'で左を埋めたデータをXとする
X = s.zfill(n)	値sを長さがnになるように左を'0'で埋めたデータをXとする
X = s.zfill(n)	値sを長さがnになるように左を'0'で埋めた値をXに代入する
X = s.zfill(n)	sを長さがnになるように左を'0'で埋めたデータをXにする
X = s.zfill(n)	sを長さがnになるように'0'で左を埋めた値をXにする
X = s.zfill(n)	sを長さがnになるように左を'0'で埋めた値をXとする
X = s.zfill(n)	s値を長さがnになるように'0'で左を埋めた値をXに代入する
X = s.zfill(n)	s値を長さがnになるように'0'で左を埋めたデータをXとする
X = s.zfill(n)	値sを長さがnになるように'0'で左を埋めた文字列をXとする
X = s.zfill(n)	値sを長さがnになるように'0'で左を埋めた値をXにする
s.zfill(n)	sを長さがnになるように'0'で右寄せした文字列
s.zfill(n)	値sを長さがnになるように'0'で右寄せしたデータ
s.zfill(n)	長さがnになるように'0'で値sを右寄せした値
s.zfill(n)	長さがnになるように'0'でs値を右寄せした文字列
s.zfill(n)	長さがnになるように'0'でsを右寄せした文字列
s.zfill(n)	長さがnになるように'0'で値sを右寄せした文字列
s.zfill(n)	長さがnになるように'0'でs値を右寄せした値
s.zfill(n)	値sを長さがnになるように'0'で右寄せした値
s.zfill(n)	s値を長さがnになるように'0'で右寄せした文字列
s.zfill(n)	s値を長さがnになるように'0'で右寄せした値
s.zfill(n)	値sを長さがnになるように'0'で右寄せした文字列
s.zfill(n)	長さがnになるように'0'でs値を右寄せしたデータ
s.zfill(n)	sを長さがnになるように'0'で右寄せしたデータ
s.zfill(n)	長さがnになるように'0'で値sを右寄せしたデータ
s.zfill(n)	長さがnになるように'0'でsを右寄せした値
s.zfill(n)	長さがnになるように'0'でsを右寄せしたデータ
s.zfill(n)	sを長さがnになるように'0'で右寄せした値
s.zfill(n)	s値を長さがnになるように'0'で右寄せしたデータ
X = s.zfill(n)	sを長さがnになるように'0'で右寄せした文字列をXに代入する
X = s.zfill(n)	長さがnになるように'0'でs値を右寄せした文字列をXとする
X = s.zfill(n)	sを長さがnになるように'0'で右寄せした値をXに代入する
X = s.zfill(n)	長さがnになるように'0'でs値を右寄せした値をXにする
X = s.zfill(n)	s値を長さがnになるように'0'で右寄せした文字列をXとする
X = s.zfill(n)	値sを長さがnになるように'0'で右寄せしたデータをXとする
X = s.zfill(n)	値sを長さがnになるように'0'で右寄せした値をXに代入する
X = s.zfill(n)	sを長さがnになるように'0'で右寄せしたデータをXにする
X = s.zfill(n)	長さがnになるように'0'で値sを右寄せした値をXとする
X = s.zfill(n)	長さがnになるように'0'でsを右寄せしたデータをXにする
X = s.zfill(n)	長さがnになるように'0'で値sを右寄せした文字列をXにする
X = s.zfill(n)	値sを長さがnになるように'0'で右寄せした文字列をXとする
X = s.zfill(n)	長さがnになるように'0'でsを右寄せした値をXとする
X = s.zfill(n)	長さがnになるように'0'で値sを右寄せしたデータをXとする
X = s.zfill(n)	s値を長さがnになるように'0'で右寄せした値をXとする
X = s.zfill(n)	長さがnになるように'0'でs値を右寄せしたデータをXにする
X = s.zfill(n)	s値を長さがnになるように'0'で右寄せしたデータをXに代入する
X = s.zfill(n)	長さがnになるように'0'でsを右寄せした文字列をXに代入する
s.capitalize()	sの最初を英大文字、残りを全て英小文字にした文字列
s.capitalize()	値sの先頭を英大文字、残りを全て英小文字に変換した値
s.capitalize()	s値の先頭を英大文字、残りを全て英小文字に変換した値
s.capitalize()	sの最初を英大文字、残りを全て英小文字にしたデータ
s.capitalize()	sの先頭を英大文字、残りを全て英小文字にした値
s.capitalize()	s値の最初を英大文字、残りを全て英小文字にしたデータ
s.capitalize()	値sの最初を英大文字、残りを全て英小文字にした文字列
s.capitalize()	s値の最初を英大文字、残りを全て英小文字に変換した値
s.capitalize()	s値の先頭を英大文字、残りを全て英小文字にした文字列
s.capitalize()	s値の先頭を英大文字、残りを全て英小文字にしたデータ
s.capitalize()	値sの先頭を英大文字、残りを全て英小文字にしたデータ
s.capitalize()	sの先頭を英大文字、残りを全て英小文字にした文字列
s.capitalize()	sの最初を英大文字、残りを全て英小文字に変換した文字列
s.capitalize()	s値の先頭を英大文字、残りを全て英小文字に変換した文字列
s.capitalize()	値sの先頭を英大文字、残りを全て英小文字にした値
s.capitalize()	値sの最初を英大文字、残りを全て英小文字にしたデータ
s.capitalize()	sの先頭を英大文字、残りを全て英小文字に変換した値
s.capitalize()	s値の最初を英大文字、残りを全て英小文字にした文字列
s.capitalize()	値sの最初を英大文字、残りを全て英小文字に変換したデータ
s.capitalize()	s値の最初を英大文字、残りを全て英小文字に変換した文字列
s.capitalize()	値sの先頭を英大文字、残りを全て英小文字に変換したデータ
s.capitalize()	値sの先頭を英大文字、残りを全て英小文字にした文字列
s.capitalize()	sの最初を英大文字、残りを全て英小文字にした値
s.capitalize()	値sの最初を英大文字、残りを全て英小文字にした値
s.capitalize()	s値の先頭を英大文字、残りを全て英小文字にした値
s.capitalize()	s値の先頭を英大文字、残りを全て英小文字に変換したデータ
s.capitalize()	sの先頭を英大文字、残りを全て英小文字にしたデータ
s.capitalize()	s値の最初を英大文字、残りを全て英小文字にした値
s.capitalize()	sの最初を英大文字、残りを全て英小文字に変換した値
s.capitalize()	sの先頭を英大文字、残りを全て英小文字に変換した文字列
s.capitalize()	sの先頭を英大文字、残りを全て英小文字に変換したデータ
s.capitalize()	値sの最初を英大文字、残りを全て英小文字に変換した文字列
s.capitalize()	値sの最初を英大文字、残りを全て英小文字に変換した値
s.capitalize()	値sの先頭を英大文字、残りを全て英小文字に変換した文字列
X = s.capitalize()	sの先頭を英大文字、残りを全て英小文字にした文字列をXにする
X = s.capitalize()	s値の先頭を英大文字、残りを全て英小文字にした値をXにする
X = s.capitalize()	s値の先頭を英大文字、残りを全て英小文字に変換したデータをXとする
X = s.capitalize()	値sの最初を英大文字、残りを全て英小文字にした文字列をXにする
X = s.capitalize()	値sの最初を英大文字、残りを全て英小文字に変換したデータをXとする
X = s.capitalize()	値sの先頭を英大文字、残りを全て英小文字に変換した文字列をXにする
X = s.capitalize()	sの先頭を英大文字、残りを全て英小文字にした値をXにする
X = s.capitalize()	値sの先頭を英大文字、残りを全て英小文字にした値をXに代入する
X = s.capitalize()	値sの最初を英大文字、残りを全て英小文字にしたデータをXにする
X = s.capitalize()	値sの先頭を英大文字、残りを全て英小文字にした文字列をXとする
X = s.capitalize()	sの最初を英大文字、残りを全て英小文字にしたデータをXにする
X = s.capitalize()	sの最初を英大文字、残りを全て英小文字にした文字列をXにする
X = s.capitalize()	値sの先頭を英大文字、残りを全て英小文字に変換したデータをXにする
X = s.capitalize()	s値の先頭を英大文字、残りを全て英小文字にしたデータをXにする
X = s.capitalize()	値sの先頭を英大文字、残りを全て英小文字にしたデータをXとする
X = s.capitalize()	値sの最初を英大文字、残りを全て英小文字にした値をXにする
X = s.capitalize()	s値の最初を英大文字、残りを全て英小文字にした値をXとする
X = s.capitalize()	sの最初を英大文字、残りを全て英小文字に変換したデータをXとする
X = s.capitalize()	値sの最初を英大文字、残りを全て英小文字に変換した値をXにする
X = s.capitalize()	sの最初を英大文字、残りを全て英小文字にした値をXに代入する
X = s.capitalize()	s値の最初を英大文字、残りを全て英小文字にしたデータをXに代入する
X = s.capitalize()	sの最初を英大文字、残りを全て英小文字に変換した文字列をXにする
X = s.capitalize()	s値の先頭を英大文字、残りを全て英小文字に変換した値をXにする
X = s.capitalize()	s値の最初を英大文字、残りを全て英小文字にした文字列をXに代入する
X = s.capitalize()	s値の先頭を英大文字、残りを全て英小文字にした文字列をXとする
X = s.capitalize()	s値の最初を英大文字、残りを全て英小文字に変換したデータをXにする
X = s.capitalize()	s値の先頭を英大文字、残りを全て英小文字に変換した文字列をXに代入する
X = s.capitalize()	値sの先頭を英大文字、残りを全て英小文字に変換した値をXに代入する
X = s.capitalize()	sの先頭を英大文字、残りを全て英小文字に変換した文字列をXに代入する
X = s.capitalize()	sの最初を英大文字、残りを全て英小文字に変換した値をXにする
X = s.capitalize()	sの先頭を英大文字、残りを全て英小文字にしたデータをXにする
X = s.capitalize()	s値の最初を英大文字、残りを全て英小文字に変換した文字列をXとする
X = s.capitalize()	s値の最初を英大文字、残りを全て英小文字に変換した値をXにする
X = s.capitalize()	値sの最初を英大文字、残りを全て英小文字に変換した文字列をXにする
X = s.capitalize()	sの先頭を英大文字、残りを全て英小文字に変換したデータをXにする
s.strswap()	sの英大小文字を交換した文字列
s.strswap()	値sの英大小文字を交換したデータ
s.strswap()	値sの英大小文字を逆にした文字列
s.strswap()	sの英大小文字を逆にした文字列
s.strswap()	値sの英大小文字を逆にした値
s.strswap()	値sの英大小文字を逆にしたデータ
s.strswap()	s値の英大小文字を逆にしたデータ
s.strswap()	値sの英大小文字を交換した値
s.strswap()	sの英大小文字を逆にしたデータ
s.strswap()	s値の英大小文字を交換した値
s.strswap()	sの英大小文字を交換した値
s.strswap()	s値の英大小文字を交換したデータ
s.strswap()	sの英大小文字を交換したデータ
s.strswap()	値sの英大小文字を交換した文字列
s.strswap()	s値の英大小文字を交換した文字列
s.strswap()	s値の英大小文字を逆にした値
s.strswap()	s値の英大小文字を逆にした文字列
s.strswap()	sの英大小文字を逆にした値
X = s.strswap()	sの英大小文字を交換した文字列をXにする
X = s.strswap()	値sの英大小文字を交換した値をXにする
X = s.strswap()	値sの英大小文字を逆にした値をXとする
X = s.strswap()	値sの英大小文字を逆にしたデータをXにする
X = s.strswap()	sの英大小文字を逆にした文字列をXに代入する
X = s.strswap()	値sの英大小文字を逆にした文字列をXにする
X = s.strswap()	s値の英大小文字を交換したデータをXとする
X = s.strswap()	s値の英大小文字を逆にした文字列をXにする
X = s.strswap()	s値の英大小文字を逆にしたデータをXとする
X = s.strswap()	s値の英大小文字を逆にした値をXとする
X = s.strswap()	sの英大小文字を逆にしたデータをXに代入する
X = s.strswap()	sの英大小文字を逆にした値をXとする
X = s.strswap()	値sの英大小文字を交換したデータをXにする
X = s.strswap()	sの英大小文字を交換したデータをXに代入する
X = s.strswap()	s値の英大小文字を交換した値をXに代入する
X = s.strswap()	sの英大小文字を交換した値をXとする
X = s.strswap()	s値の英大小文字を交換した文字列をXとする
X = s.strswap()	値sの英大小文字を交換した文字列をXに代入する
s.strswap()	sの英大文字と英小文字を交換した文字列
s.strswap()	s値の英大文字と英小文字を逆にした文字列
s.strswap()	sの英大文字と英小文字を逆にした値
s.strswap()	値sの英大文字と英小文字を逆にした値
s.strswap()	値sの英大文字と英小文字を逆にした文字列
s.strswap()	sの英大文字と英小文字を逆にしたデータ
s.strswap()	値sの英大文字と英小文字を交換したデータ
s.strswap()	s値の英大文字と英小文字を交換したデータ
s.strswap()	s値の英大文字と英小文字を交換した値
s.strswap()	sの英大文字と英小文字を逆にした文字列
s.strswap()	値sの英大文字と英小文字を交換した値
s.strswap()	sの英大文字と英小文字を交換したデータ
s.strswap()	値sの英大文字と英小文字を逆にしたデータ
s.strswap()	値sの英大文字と英小文字を交換した文字列
s.strswap()	s値の英大文字と英小文字を逆にした値
s.strswap()	s値の英大文字と英小文字を逆にしたデータ
s.strswap()	sの英大文字と英小文字を交換した値
s.strswap()	s値の英大文字と英小文字を交換した文字列
X = s.strswap()	sの英大文字と英小文字を交換した文字列をXに代入する
X = s.strswap()	s値の英大文字と英小文字を逆にした値をXとする
X = s.strswap()	値sの英大文字と英小文字を逆にした値をXとする
X = s.strswap()	s値の英大文字と英小文字を逆にした文字列をXとする
X = s.strswap()	s値の英大文字と英小文字を逆にしたデータをXにする
X = s.strswap()	sの英大文字と英小文字を逆にした文字列をXとする
X = s.strswap()	値sの英大文字と英小文字を逆にした文字列をXに代入する
X = s.strswap()	値sの英大文字と英小文字を交換した文字列をXにする
X = s.strswap()	sの英大文字と英小文字を交換したデータをXとする
X = s.strswap()	値sの英大文字と英小文字を交換したデータをXに代入する
X = s.strswap()	s値の英大文字と英小文字を交換したデータをXにする
X = s.strswap()	sの英大文字と英小文字を逆にしたデータをXに代入する
X = s.strswap()	sの英大文字と英小文字を逆にした値をXに代入する
X = s.strswap()	s値の英大文字と英小文字を交換した文字列をXにする
X = s.strswap()	値sの英大文字と英小文字を逆にしたデータをXにする
X = s.strswap()	sの英大文字と英小文字を交換した値をXに代入する
X = s.strswap()	値sの英大文字と英小文字を交換した値をXにする
X = s.strswap()	s値の英大文字と英小文字を交換した値をXに代入する
s.find('x')	sの最初から'x'を探して見つかった位置
s.find('x')	s値の左側から'x'を探して見つかった位置
s.find('x')	値sの最初から'x'を探して見つかった位置
s.find('x')	s値の最初から'x'を探して見つかった位置
s.find('x')	sの先頭から'x'を探して見つかった位置
s.find('x')	s値の先頭から'x'を探して見つかった位置
s.find('x')	値sの先頭から'x'を探して見つかった位置
s.find('x')	値sの左側から'x'を探して見つかった位置
s.find('x')	sの左側から'x'を探して見つかった位置
X = s.find('x')	sの最初から'x'を探して見つかった位置をXにする
X = s.find('x')	sの左側から'x'を探して見つかった位置をXに代入する
X = s.find('x')	sの先頭から'x'を探して見つかった位置をXとする
X = s.find('x')	値sの最初から'x'を探して見つかった位置をXとする
X = s.find('x')	s値の先頭から'x'を探して見つかった位置をXにする
X = s.find('x')	s値の最初から'x'を探して見つかった位置をXとする
X = s.find('x')	値sの先頭から'x'を探して見つかった位置をXとする
X = s.find('x')	s値の左側から'x'を探して見つかった位置をXに代入する
X = s.find('x')	値sの左側から'x'を探して見つかった位置をXにする
s.find('x')	s内の'x'がある位置
s.find('x')	s値の中の'x'がある位置
s.find('x')	sの中の'x'がある位置
s.find('x')	s値内の'x'がある位置
s.find('x')	値sの中の'x'がある位置
s.find('x')	値s内の'x'がある位置
X = s.find('x')	s内の'x'がある位置をXに代入する
X = s.find('x')	値s内の'x'がある位置をXにする
X = s.find('x')	値sの中の'x'がある位置をXに代入する
X = s.find('x')	sの中の'x'がある位置をXとする
X = s.find('x')	s値の中の'x'がある位置をXに代入する
X = s.find('x')	s値内の'x'がある位置をXに代入する
s.find('x', 2)	sの2番目から'x'を探して見つかった位置
s.find('x', 2)	s値の2番目から'x'を探して見つかった位置
s.find('x', 2)	値sの2番目から'x'を探して見つかった位置
X = s.find('x', 2)	sの2番目から'x'を探して見つかった位置をXとする
X = s.find('x', 2)	s値の2番目から'x'を探して見つかった位置をXに代入する
X = s.find('x', 2)	値sの2番目から'x'を探して見つかった位置をXにする
s.find('x', 2)	s内の2番目以降に'x'がある位置
s.find('x', 2)	値sの中の2番目以降に'x'がある位置
s.find('x', 2)	sの中の2番目以降に'x'がある位置
s.find('x', 2)	s値内の2番目以降に'x'がある位置
s.find('x', 2)	値s内の2番目以降に'x'がある位置
s.find('x', 2)	s値の中の2番目以降に'x'がある位置
X = s.find('x', 2)	s内の2番目以降に'x'がある位置をXに代入する
X = s.find('x', 2)	sの中の2番目以降に'x'がある位置をXとする
X = s.find('x', 2)	s値の中の2番目以降に'x'がある位置をXとする
X = s.find('x', 2)	s値内の2番目以降に'x'がある位置をXに代入する
X = s.find('x', 2)	値s内の2番目以降に'x'がある位置をXに代入する
X = s.find('x', 2)	値sの中の2番目以降に'x'がある位置をXとする
s.find('x', 2, 5)	sの2番目から5番目の間で'x'を探して見つかった位置
s.find('x', 2, 5)	値sの2番目から5番目の間で'x'を探して見つかった位置
s.find('x', 2, 5)	s値の2番目から5番目の間で'x'を探して見つかった位置
X = s.find('x', 2, 5)	sの2番目から5番目の間で'x'を探して見つかった位置をXとする
X = s.find('x', 2, 5)	s値の2番目から5番目の間で'x'を探して見つかった位置をXとする
X = s.find('x', 2, 5)	値sの2番目から5番目の間で'x'を探して見つかった位置をXに代入する
s.find('x', 2, 5)	s内の2番目から5番目に'x'がある位置
s.find('x', 2, 5)	sの中の2番目から5番目に'x'がある位置
s.find('x', 2, 5)	値sの中の2番目から5番目に'x'がある位置
s.find('x', 2, 5)	s値内の2番目から5番目に'x'がある位置
s.find('x', 2, 5)	値s内の2番目から5番目に'x'がある位置
s.find('x', 2, 5)	s値の中の2番目から5番目に'x'がある位置
X = s.find('x', 2, 5)	s内の2番目から5番目に'x'がある位置をXに代入する
X = s.find('x', 2, 5)	sの中の2番目から5番目に'x'がある位置をXとする
X = s.find('x', 2, 5)	値s内の2番目から5番目に'x'がある位置をXに代入する
X = s.find('x', 2, 5)	s値の中の2番目から5番目に'x'がある位置をXに代入する
X = s.find('x', 2, 5)	s値内の2番目から5番目に'x'がある位置をXにする
X = s.find('x', 2, 5)	値sの中の2番目から5番目に'x'がある位置をXに代入する
s.rfind('x')	sの最後から'x'を探して見つかった位置
s.rfind('x')	sの右側から'x'を探して見つかった位置
s.rfind('x')	値sの右側から'x'を探して見つかった位置
s.rfind('x')	s値の右側から'x'を探して見つかった位置
s.rfind('x')	値sの最後から'x'を探して見つかった位置
s.rfind('x')	s値の後ろから'x'を探して見つかった位置
s.rfind('x')	sの後ろから'x'を探して見つかった位置
s.rfind('x')	値sの後ろから'x'を探して見つかった位置
s.rfind('x')	s値の最後から'x'を探して見つかった位置
X = s.rfind('x')	sの後ろから'x'を探して見つかった位置をXとする
X = s.rfind('x')	sの右側から'x'を探して見つかった位置をXとする
X = s.rfind('x')	値sの右側から'x'を探して見つかった位置をXに代入する
X = s.rfind('x')	s値の右側から'x'を探して見つかった位置をXに代入する
X = s.rfind('x')	s値の最後から'x'を探して見つかった位置をXにする
X = s.rfind('x')	s値の後ろから'x'を探して見つかった位置をXにする
X = s.rfind('x')	sの最後から'x'を探して見つかった位置をXに代入する
X = s.rfind('x')	値sの最後から'x'を探して見つかった位置をXに代入する
X = s.rfind('x')	値sの後ろから'x'を探して見つかった位置をXにする
s.rfind('x')	s内の'x'がある右側の位置
s.rfind('x')	s値の中の'x'がある右側の位置
s.rfind('x')	s値内の'x'がある後ろ側の位置
s.rfind('x')	値sの中の'x'がある右側の位置
s.rfind('x')	s値内の'x'がある右側の位置
s.rfind('x')	sの中の'x'がある右側の位置
s.rfind('x')	値s内の'x'がある右側の位置
s.rfind('x')	値s内の'x'がある後ろ側の位置
s.rfind('x')	s内の'x'がある後ろ側の位置
X = s.rfind('x')	s内の'x'がある後ろ側の位置をXに代入する
X = s.rfind('x')	値s内の'x'がある右側の位置をXに代入する
X = s.rfind('x')	s値内の'x'がある後ろ側の位置をXとする
X = s.rfind('x')	値sの中の'x'がある右側の位置をXとする
X = s.rfind('x')	s内の'x'がある右側の位置をXとする
X = s.rfind('x')	s値の中の'x'がある右側の位置をXにする
X = s.rfind('x')	sの中の'x'がある右側の位置をXにする
X = s.rfind('x')	値s内の'x'がある後ろ側の位置をXにする
X = s.rfind('x')	s値内の'x'がある右側の位置をXにする
s.rfind('x', 2)	sの2番目から'x'を後ろから探して見つかった位置
s.rfind('x', 2)	値sの2番目から'x'を右側から探して見つかった位置
s.rfind('x', 2)	値sの2番目から'x'を逆順に探して見つかった位置
s.rfind('x', 2)	s値の2番目から'x'を最後から探して見つかった位置
s.rfind('x', 2)	s値の2番目から'x'を右側から探して見つかった位置
s.rfind('x', 2)	s値の2番目から'x'を逆順に探して見つかった位置
s.rfind('x', 2)	sの2番目から'x'を逆順に探して見つかった位置
s.rfind('x', 2)	値sの2番目から'x'を後ろから探して見つかった位置
s.rfind('x', 2)	sの2番目から'x'を最後から探して見つかった位置
s.rfind('x', 2)	sの2番目から'x'を右側から探して見つかった位置
s.rfind('x', 2)	値sの2番目から'x'を最後から探して見つかった位置
s.rfind('x', 2)	s値の2番目から'x'を後ろから探して見つかった位置
X = s.rfind('x', 2)	sの2番目から'x'を後ろから探して見つかった位置をXにする
X = s.rfind('x', 2)	値sの2番目から'x'を後ろから探して見つかった位置をXにする
X = s.rfind('x', 2)	sの2番目から'x'を逆順に探して見つかった位置をXに代入する
X = s.rfind('x', 2)	s値の2番目から'x'を右側から探して見つかった位置をXにする
X = s.rfind('x', 2)	値sの2番目から'x'を右側から探して見つかった位置をXとする
X = s.rfind('x', 2)	s値の2番目から'x'を最後から探して見つかった位置をXに代入する
X = s.rfind('x', 2)	値sの2番目から'x'を最後から探して見つかった位置をXにする
X = s.rfind('x', 2)	s値の2番目から'x'を逆順に探して見つかった位置をXにする
X = s.rfind('x', 2)	sの2番目から'x'を右側から探して見つかった位置をXにする
X = s.rfind('x', 2)	値sの2番目から'x'を逆順に探して見つかった位置をXとする
X = s.rfind('x', 2)	s値の2番目から'x'を後ろから探して見つかった位置をXとする
X = s.rfind('x', 2)	sの2番目から'x'を最後から探して見つかった位置をXにする
s.rfind('x', 2)	s内の2番目以降に'x'がある右側の位置
s.rfind('x', 2)	s値内の2番目以降に'x'がある後ろ側の位置
s.rfind('x', 2)	値sの中の2番目以降に'x'がある右側の位置
s.rfind('x', 2)	sの中の2番目以降に'x'がある右側の位置
s.rfind('x', 2)	s値の中の2番目以降に'x'がある右側の位置
s.rfind('x', 2)	値s内の2番目以降に'x'がある右側の位置
s.rfind('x', 2)	値s内の2番目以降に'x'がある後ろ側の位置
s.rfind('x', 2)	s値内の2番目以降に'x'がある右側の位置
s.rfind('x', 2)	s内の2番目以降に'x'がある後ろ側の位置
X = s.rfind('x', 2)	s内の2番目以降に'x'がある後ろ側の位置をXにする
X = s.rfind('x', 2)	s値内の2番目以降に'x'がある後ろ側の位置をXとする
X = s.rfind('x', 2)	値sの中の2番目以降に'x'がある右側の位置をXとする
X = s.rfind('x', 2)	s内の2番目以降に'x'がある右側の位置をXにする
X = s.rfind('x', 2)	値s内の2番目以降に'x'がある後ろ側の位置をXとする
X = s.rfind('x', 2)	s値の中の2番目以降に'x'がある右側の位置をXに代入する
X = s.rfind('x', 2)	sの中の2番目以降に'x'がある右側の位置をXとする
X = s.rfind('x', 2)	s値内の2番目以降に'x'がある右側の位置をXとする
X = s.rfind('x', 2)	値s内の2番目以降に'x'がある右側の位置をXに代入する
s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を最後から探して見つかった位置
s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を逆順に探して見つかった位置
s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を右側から探して見つかった位置
s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を逆順に探して見つかった位置
s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を後ろから探して見つかった位置
s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を後ろから探して見つかった位置
s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を後ろから探して見つかった位置
s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を逆順に探して見つかった位置
s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を右側から探して見つかった位置
s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を右側から探して見つかった位置
s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を最後から探して見つかった位置
s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を最後から探して見つかった位置
X = s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を最後から探して見つかった位置をXにする
X = s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を逆順に探して見つかった位置をXにする
X = s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を逆順に探して見つかった位置をXにする
X = s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を後ろから探して見つかった位置をXにする
X = s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を後ろから探して見つかった位置をXにする
X = s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を逆順に探して見つかった位置をXにする
X = s.rfind('x', 2, 5)	sの2番目から5番目の間で'x'を右側から探して見つかった位置をXとする
X = s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を右側から探して見つかった位置をXに代入する
X = s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を最後から探して見つかった位置をXに代入する
X = s.rfind('x', 2, 5)	s値の2番目から5番目の間で'x'を右側から探して見つかった位置をXに代入する
X = s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を最後から探して見つかった位置をXとする
X = s.rfind('x', 2, 5)	値sの2番目から5番目の間で'x'を後ろから探して見つかった位置をXに代入する
s.rfind('x', 2, 5)	s内の2番目から5番目に'x'がある後ろ側の位置
s.rfind('x', 2, 5)	s値の中の2番目から5番目に'x'がある右側の位置
s.rfind('x', 2, 5)	値s内の2番目から5番目に'x'がある右側の位置
s.rfind('x', 2, 5)	値s内の2番目から5番目に'x'がある後ろ側の位置
s.rfind('x', 2, 5)	sの中の2番目から5番目に'x'がある右側の位置
s.rfind('x', 2, 5)	値sの中の2番目から5番目に'x'がある右側の位置
s.rfind('x', 2, 5)	s内の2番目から5番目に'x'がある右側の位置
s.rfind('x', 2, 5)	s値内の2番目から5番目に'x'がある後ろ側の位置
s.rfind('x', 2, 5)	s値内の2番目から5番目に'x'がある右側の位置
X = s.rfind('x', 2, 5)	s内の2番目から5番目に'x'がある後ろ側の位置をXとする
X = s.rfind('x', 2, 5)	値s内の2番目から5番目に'x'がある右側の位置をXに代入する
X = s.rfind('x', 2, 5)	sの中の2番目から5番目に'x'がある右側の位置をXにする
X = s.rfind('x', 2, 5)	値sの中の2番目から5番目に'x'がある右側の位置をXに代入する
X = s.rfind('x', 2, 5)	s値内の2番目から5番目に'x'がある右側の位置をXとする
X = s.rfind('x', 2, 5)	s値内の2番目から5番目に'x'がある後ろ側の位置をXにする
X = s.rfind('x', 2, 5)	s値の中の2番目から5番目に'x'がある右側の位置をXとする
X = s.rfind('x', 2, 5)	値s内の2番目から5番目に'x'がある後ろ側の位置をXに代入する
X = s.rfind('x', 2, 5)	s内の2番目から5番目に'x'がある右側の位置をXとする
''.join(l)	l内の要素を連結した文字列
''.join(l)	リストlの中の要素を連結した値
''.join(l)	lの中の値を連結した値
''.join(l)	lリスト内の値を連結した値
''.join(l)	l内の値を連結した文字列
''.join(l)	l内の要素を連結したデータ
''.join(l)	lの中の要素を連結した値
''.join(l)	lリストの中の要素を連結したデータ
''.join(l)	lリスト内の要素を連結した文字列
''.join(l)	lの中の要素を連結した文字列
''.join(l)	lの中の値を連結した文字列
''.join(l)	l内の要素を連結した値
''.join(l)	リストlの中の値を連結したデータ
''.join(l)	l内の値を連結した値
''.join(l)	lリスト内の値を連結した文字列
''.join(l)	lリストの中の値を連結した文字列
''.join(l)	lリストの中の値を連結した値
''.join(l)	リストl内の値を連結した値
''.join(l)	lリスト内の値を連結したデータ
''.join(l)	リストlの中の値を連結した文字列
''.join(l)	lリスト内の要素を連結したデータ
''.join(l)	lリストの中の要素を連結した値
''.join(l)	lリストの中の値を連結したデータ
''.join(l)	リストl内の要素を連結したデータ
''.join(l)	リストlの中の値を連結した値
''.join(l)	lの中の値を連結したデータ
''.join(l)	リストlの中の要素を連結したデータ
''.join(l)	リストl内の値を連結したデータ
''.join(l)	リストl内の要素を連結した値
''.join(l)	リストl内の要素を連結した文字列
''.join(l)	リストl内の値を連結した文字列
''.join(l)	lリストの中の要素を連結した文字列
''.join(l)	lリスト内の要素を連結した値
''.join(l)	lの中の要素を連結したデータ
''.join(l)	l内の値を連結したデータ
''.join(l)	リストlの中の要素を連結した文字列
X = ''.join(l)	l内の値を連結した文字列をXとする
X = ''.join(l)	l内の要素を連結したデータをXにする
X = ''.join(l)	リストlの中の要素を連結したデータをXに代入する
X = ''.join(l)	リストlの中の要素を連結した文字列をXにする
X = ''.join(l)	リストl内の要素を連結したデータをXに代入する
X = ''.join(l)	lリスト内の値を連結した値をXとする
X = ''.join(l)	リストl内の要素を連結した値をXとする
X = ''.join(l)	リストl内の値を連結した値をXに代入する
X = ''.join(l)	lの中の値を連結した文字列をXとする
X = ''.join(l)	リストlの中の値を連結したデータをXに代入する
X = ''.join(l)	リストlの中の値を連結した文字列をXにする
X = ''.join(l)	lリストの中の要素を連結したデータをXとする
X = ''.join(l)	l内の要素を連結した値をXに代入する
X = ''.join(l)	lリストの中の値を連結したデータをXにする
X = ''.join(l)	lリストの中の値を連結した値をXとする
X = ''.join(l)	lリストの中の値を連結した文字列をXにする
X = ''.join(l)	lの中の要素を連結した値をXとする
X = ''.join(l)	lリスト内の要素を連結した文字列をXに代入する
X = ''.join(l)	l内の値を連結した値をXに代入する
X = ''.join(l)	lの中の要素を連結したデータをXとする
X = ''.join(l)	リストlの中の要素を連結した値をXとする
X = ''.join(l)	lリストの中の要素を連結した値をXに代入する
X = ''.join(l)	lリスト内の値を連結した文字列をXに代入する
X = ''.join(l)	lの中の値を連結したデータをXとする
X = ''.join(l)	リストl内の値を連結したデータをXに代入する
X = ''.join(l)	lの中の要素を連結した文字列をXに代入する
X = ''.join(l)	l内の要素を連結した文字列をXに代入する
X = ''.join(l)	lの中の値を連結した値をXにする
X = ''.join(l)	リストlの中の値を連結した値をXにする
X = ''.join(l)	リストl内の要素を連結した文字列をXにする
X = ''.join(l)	lリストの中の要素を連結した文字列をXとする
X = ''.join(l)	lリスト内の要素を連結した値をXに代入する
X = ''.join(l)	lリスト内の要素を連結したデータをXに代入する
X = ''.join(l)	lリスト内の値を連結したデータをXに代入する
X = ''.join(l)	リストl内の値を連結した文字列をXとする
','.join(l)	','を間に入れてl内の要素を連結した文字列
','.join(l)	入れてリストlの中の値を間に','を連結したデータ
','.join(l)	','を入れてl内の要素を間に連結した値
','.join(l)	入れてlリスト内の値を間に','を連結した値
','.join(l)	入れてlリストの中の値を間に','を連結した文字列
','.join(l)	入れてl内の要素を','を間に連結したデータ
','.join(l)	間に','を入れてlリストの中の要素を連結した値
','.join(l)	入れてリストlの中の値を','を間に連結した値
','.join(l)	','を入れてlリスト内の値を間に連結したデータ
','.join(l)	入れてリストl内の値を間に','を連結した値
','.join(l)	','を入れてlリストの中の要素を間に連結した値
','.join(l)	','を入れてlリスト内の要素を間に連結したデータ
','.join(l)	間に','を入れてリストlの中の要素を連結した値
','.join(l)	','を間に入れてl内の要素を連結したデータ
','.join(l)	','を間に入れてlの中の値を連結した値
','.join(l)	入れてリストlの中の要素を間に','を連結した値
','.join(l)	間に','を入れてリストl内の値を連結したデータ
','.join(l)	間に入れてリストl内の値を','を連結した文字列
','.join(l)	入れてlの中の要素を','を間に連結した文字列
','.join(l)	','を間に入れてリストlの中の要素を連結した値
','.join(l)	間に','を入れてlリスト内の要素を連結した文字列
','.join(l)	','を間に入れてlリスト内の要素を連結したデータ
','.join(l)	','を間に入れてlの中の要素を連結したデータ
','.join(l)	間に','を入れてl内の値を連結したデータ
','.join(l)	入れてlの中の値を間に','を連結した文字列
','.join(l)	','を間に入れてリストlの中の値を連結した値
','.join(l)	間に','を入れてリストlの中の値を連結した文字列
','.join(l)	','を間に入れてlリスト内の値を連結した値
','.join(l)	入れてリストl内の要素を','を間に連結した文字列
','.join(l)	入れてリストlの中の要素を間に','を連結した文字列
','.join(l)	','を間に入れてリストl内の要素を連結したデータ
','.join(l)	','を間に入れてlリスト内の要素を連結した値
','.join(l)	','を入れてlの中の要素を間に連結した文字列
','.join(l)	間に','を入れてリストl内の要素を連結したデータ
','.join(l)	間に','を入れてlの中の要素を連結した文字列
','.join(l)	間に','を入れてリストl内の要素を連結した文字列
','.join(l)	','を入れてlリスト内の値を間に連結した値
','.join(l)	','を間に入れてlの中の要素を連結した値
','.join(l)	間に入れてlリスト内の値を','を連結した文字列
','.join(l)	','を間に入れてl内の値を連結した文字列
','.join(l)	間に入れてl内の要素を','を連結したデータ
','.join(l)	入れてl内の要素を間に','を連結した文字列
','.join(l)	間に','を入れてl内の値を連結した文字列
','.join(l)	','を入れてリストl内の値を間に連結したデータ
','.join(l)	間に','を入れてlリストの中の要素を連結した文字列
','.join(l)	入れてlリストの中の値を','を間に連結した文字列
','.join(l)	','を間に入れてlの中の値を連結した文字列
','.join(l)	間に入れてlリストの中の値を','を連結したデータ
','.join(l)	','を入れてl内の値を間に連結したデータ
','.join(l)	','を間に入れてlリストの中の値を連結した文字列
','.join(l)	','を間に入れてlリストの中の要素を連結したデータ
','.join(l)	間に','を入れてリストlの中の要素を連結したデータ
','.join(l)	','を入れてlリストの中の要素を間に連結した文字列
','.join(l)	','を入れてl内の値を間に連結した値
','.join(l)	間に入れてリストlの中の値を','を連結した値
','.join(l)	間に','を入れてリストlの中の値を連結したデータ
','.join(l)	','を入れてl内の要素を間に連結した文字列
','.join(l)	間に','を入れてlリストの中の値を連結したデータ
','.join(l)	入れてlリストの中の値を間に','を連結したデータ
','.join(l)	入れてl内の要素を間に','を連結したデータ
','.join(l)	間に','を入れてlリスト内の要素を連結した値
','.join(l)	入れてリストlの中の要素を間に','を連結したデータ
','.join(l)	入れてリストlの中の値を','を間に連結した文字列
','.join(l)	入れてl内の値を間に','を連結した文字列
','.join(l)	入れてリストl内の要素を間に','を連結した値
','.join(l)	間に入れてリストlの中の要素を','を連結したデータ
','.join(l)	','を間に入れてリストl内の要素を連結した文字列
','.join(l)	入れてlリストの中の要素を','を間に連結したデータ
','.join(l)	入れてlリスト内の要素を','を間に連結した値
','.join(l)	入れてl内の値を間に','を連結した値
X = ','.join(l)	','を間に入れてl内の値を連結した文字列をXにする
X = ','.join(l)	','を間に入れてl内の値を連結したデータをXにする
X = ','.join(l)	','を入れてlリスト内の要素を間に連結した文字列をXとする
X = ','.join(l)	間に入れてlリストの中の値を','を連結したデータをXに代入する
X = ','.join(l)	','を間に入れてlリストの中の値を連結した文字列をXにする
X = ','.join(l)	入れてリストlの中の要素を間に','を連結した値をXに代入する
X = ','.join(l)	入れてlリスト内の値を間に','を連結した文字列をXに代入する
X = ','.join(l)	間に入れてlの中の要素を','を連結したデータをXとする
X = ','.join(l)	入れてl内の値を','を間に連結したデータをXに代入する
X = ','.join(l)	','を入れてlリスト内の要素を間に連結したデータをXにする
X = ','.join(l)	間に','を入れてリストlの中の要素を連結したデータをXとする
X = ','.join(l)	間に','を入れてリストl内の要素を連結した値をXとする
X = ','.join(l)	','を入れてリストl内の値を間に連結した文字列をXとする
X = ','.join(l)	入れてl内の要素を間に','を連結した文字列をXとする
X = ','.join(l)	','を入れてlリスト内の値を間に連結した文字列をXにする
X = ','.join(l)	間に','を入れてlリスト内の要素を連結したデータをXに代入する
X = ','.join(l)	間に','を入れてlリスト内の要素を連結した値をXに代入する
X = ','.join(l)	入れてリストl内の要素を間に','を連結した値をXにする
X = ','.join(l)	入れてlリスト内の要素を間に','を連結したデータをXとする
X = ','.join(l)	','を入れてlリストの中の値を間に連結した値をXに代入する
X = ','.join(l)	入れてリストl内の値を間に','を連結したデータをXに代入する
X = ','.join(l)	入れてlリストの中の要素を間に','を連結した値をXにする
X = ','.join(l)	','を間に入れてlリストの中の値を連結したデータをXとする
X = ','.join(l)	間に入れてlの中の要素を','を連結した文字列をXとする
X = ','.join(l)	入れてlリスト内の値を','を間に連結したデータをXにする
X = ','.join(l)	','を間に入れてlの中の要素を連結した文字列をXにする
X = ','.join(l)	','を間に入れてリストl内の要素を連結した値をXに代入する
X = ','.join(l)	入れてlの中の要素を間に','を連結した文字列をXにする
X = ','.join(l)	入れてlリストの中の値を間に','を連結した値をXとする
X = ','.join(l)	入れてlリストの中の要素を間に','を連結した文字列をXに代入する
X = ','.join(l)	間に','を入れてリストlの中の要素を連結した値をXにする
X = ','.join(l)	','を入れてl内の要素を間に連結したデータをXに代入する
X = ','.join(l)	','を間に入れてリストl内の値を連結した値をXとする
X = ','.join(l)	','を入れてリストl内の要素を間に連結したデータをXとする
X = ','.join(l)	間に入れてリストl内の要素を','を連結した値をXに代入する
X = ','.join(l)	','を間に入れてlリストの中の要素を連結した文字列をXとする
X = ','.join(l)	入れてリストl内の値を間に','を連結した文字列をXにする
X = ','.join(l)	','を間に入れてlの中の値を連結した文字列をXに代入する
X = ','.join(l)	入れてl内の値を間に','を連結したデータをXにする
X = ','.join(l)	入れてリストlの中の要素を','を間に連結した値をXとする
X = ','.join(l)	','を間に入れてlリストの中の要素を連結したデータをXとする
X = ','.join(l)	','を間に入れてリストlの中の値を連結した値をXに代入する
X = ','.join(l)	','を入れてlリストの中の要素を間に連結したデータをXとする
X = ','.join(l)	入れてlの中の要素を','を間に連結した文字列をXにする
X = ','.join(l)	入れてlリストの中の値を間に','を連結した文字列をXとする
X = ','.join(l)	','を間に入れてリストl内の要素を連結した文字列をXとする
X = ','.join(l)	','を間に入れてlリスト内の要素を連結した値をXに代入する
X = ','.join(l)	','を間に入れてlの中の要素を連結した値をXとする
X = ','.join(l)	間に入れてlリスト内の値を','を連結した値をXに代入する
X = ','.join(l)	','を入れてリストl内の要素を間に連結した文字列をXにする
X = ','.join(l)	間に入れてリストl内の要素を','を連結したデータをXに代入する
X = ','.join(l)	間に入れてlの中の要素を','を連結した値をXにする
X = ','.join(l)	','を間に入れてlリストの中の値を連結した値をXにする
X = ','.join(l)	間に入れてリストl内の値を','を連結したデータをXにする
X = ','.join(l)	','を間に入れてlリスト内の要素を連結した文字列をXとする
X = ','.join(l)	入れてl内の値を','を間に連結した値をXにする
X = ','.join(l)	間に入れてリストlの中の値を','を連結した値をXとする
X = ','.join(l)	間に','を入れてlの中の値を連結したデータをXにする
X = ','.join(l)	','を入れてlリストの中の要素を間に連結した文字列をXにする
X = ','.join(l)	入れてlの中の要素を','を間に連結した値をXにする
X = ','.join(l)	間に','を入れてlリスト内の値を連結したデータをXとする
X = ','.join(l)	入れてリストl内の値を','を間に連結した値をXにする
X = ','.join(l)	','を間に入れてl内の要素を連結したデータをXとする
X = ','.join(l)	間に入れてl内の要素を','を連結した値をXとする
X = ','.join(l)	間に入れてリストlの中の値を','を連結した文字列をXにする
X = ','.join(l)	間に入れてlの中の値を','を連結した文字列をXにする
X = ','.join(l)	間に','を入れてl内の要素を連結した値をXに代入する
X = ','.join(l)	間に','を入れてlリストの中の値を連結したデータをXに代入する
X = ','.join(l)	間に','を入れてlの中の要素を連結した文字列をXにする
X = ','.join(l)	','を間に入れてlリストの中の要素を連結した値をXに代入する
s.count(x)	s内のxの登場回数
s.count(x)	sデータ内のxの出現回数
s.count(x)	sデータの中のxの登場回数
s.count(x)	s内のxの出現回数
s.count(x)	データsのxの登場回数
s.count(x)	sデータの中のxの出現回数
s.count(x)	データsの中のxの登場回数
s.count(x)	sの中のxの登場回数
s.count(x)	データs内のxの出現回数
s.count(x)	sのxの登場回数
s.count(x)	データs内のxの登場回数
s.count(x)	sデータのxの登場回数
s.count(x)	sデータ内のxの登場回数
s.count(x)	sの中のxの出現回数
s.count(x)	データsの中のxの出現回数
s.count(x)	s内のxの出現回数をチェックする
s.count(x)	sデータの中のxの登場回数を確認する
s.count(x)	s内のxの登場回数を調べる
s.count(x)	データsのxの登場回数を表示する
s.count(x)	sデータのxの登場回数を見る
s.count(x)	sのxの登場回数を確認する
s.count(x)	sの中のxの登場回数を調べる
s.count(x)	sデータ内のxの出現回数を見る
s.count(x)	データs内のxの登場回数を見る
s.count(x)	sデータ内のxの登場回数を確認する
s.count(x)	sデータの中のxの出現回数をチェックする
s.count(x)	sの中のxの出現回数を確認する
s.count(x)	データsの中のxの出現回数を調べる
s.count(x)	データs内のxの出現回数を調べる
s.count(x)	データsの中のxの登場回数を表示する
s.startswith(x)	sの先頭がxで始まる{かどうか}
s.startswith(x)	sの先頭がxである{かどうか}
s.startswith(x)	値sの先頭がxである{かどうか}
s.startswith(x)	sの最初がxである{かどうか}
s.startswith(x)	値sの先頭がxで始まる{かどうか}
s.startswith(x)	s値の先頭がxで始まる{かどうか}
s.startswith(x)	s値の最初がxで始まる{かどうか}
s.startswith(x)	s値の先頭がxである{かどうか}
s.startswith(x)	sの最初がxで始まる{かどうか}
s.startswith(x)	s値の最初がxである{かどうか}
s.startswith(x)	値sの最初がxで始まる{かどうか}
s.startswith(x)	値sの最初がxである{かどうか}
if s.startswith(x) :	もしsの先頭がxで始まる{かどうか}なら
if s.startswith(x) :	s値の最初がxで始まる{かどうか}なら
if s.startswith(x) :	もしs値の最初がxである{かどうか}ならば
if s.startswith(x) :	s値の先頭がxで始まる{かどうか}ならば
if s.startswith(x) :	もし値sの最初がxである{かどうか}のとき
if s.startswith(x) :	もしsの先頭がxである{かどうか}の場合
if s.startswith(x) :	もし値sの先頭がxである{かどうか}なら
if s.startswith(x) :	もしs値の先頭がxである{かどうか}のとき
if s.startswith(x) :	もし値sの最初がxで始まる{かどうか}のとき
if s.startswith(x) :	もしsの最初がxで始まる{かどうか}なら
if s.startswith(x) :	sの最初がxである{かどうか}の場合
if s.startswith(x) :	もし値sの先頭がxで始まる{かどうか}なら
s.startswith(x)	sがxで始まるかどうか
s.startswith(x)	sデータがxで始まるかどうか
s.startswith(x)	データsがxで始まるかどうか
if s.startswith(x) :	sがxで始まるのとき
if s.startswith(x) :	もしsデータがxで始まるならば
if s.startswith(x) :	データsがxで始まるならば
s.startswith(x, 2)	sの2番目がxで始まる{かどうか}
s.startswith(x, 2)	sの2番目がxである{かどうか}
s.startswith(x, 2)	データsの2番目がxで始まる{かどうか}
s.startswith(x, 2)	sデータの2番目がxで始まる{かどうか}
s.startswith(x, 2)	sデータの2番目がxである{かどうか}
s.startswith(x, 2)	データsの2番目がxである{かどうか}
if s.startswith(x, 2) :	もしsの2番目がxで始まる{かどうか}ならば
if s.startswith(x, 2) :	もしデータsの2番目がxである{かどうか}のとき
if s.startswith(x, 2) :	もしsデータの2番目がxで始まる{かどうか}なら
if s.startswith(x, 2) :	sの2番目がxである{かどうか}なら
if s.startswith(x, 2) :	もしデータsの2番目がxで始まる{かどうか}ならば
if s.startswith(x, 2) :	もしsデータの2番目がxである{かどうか}ならば
s.endswith(x)	sの末尾がxで終わるかどうか
s.endswith(x)	sがxで終わるかどうか
s.endswith(x)	sデータの末尾がxで終わるかどうか
s.endswith(x)	データsの最後がxで終わるかどうか
s.endswith(x)	データsがxで終わるかどうか
s.endswith(x)	sデータの後ろがxで終わるかどうか
s.endswith(x)	データsの末尾がxで終わるかどうか
s.endswith(x)	sデータがxで終わるかどうか
s.endswith(x)	sデータの最後がxで終わるかどうか
s.endswith(x)	sの終わりがxで終わるかどうか
s.endswith(x)	データsの終わりがxで終わるかどうか
s.endswith(x)	sの最後がxで終わるかどうか
s.endswith(x)	sデータの終わりがxで終わるかどうか
s.endswith(x)	データsの後ろがxで終わるかどうか
s.endswith(x)	sの後ろがxで終わるかどうか
if s.endswith(x) :	もしsの末尾がxで終わるなら
if s.endswith(x) :	もしsデータの末尾がxで終わるのとき
if s.endswith(x) :	データsがxで終わるなら
if s.endswith(x) :	もしsデータがxで終わるの場合
if s.endswith(x) :	もしsがxで終わるなら
if s.endswith(x) :	もしデータsの末尾がxで終わるのとき
if s.endswith(x) :	もしsデータの最後がxで終わるのとき
if s.endswith(x) :	もしsの最後がxで終わるのとき
if s.endswith(x) :	もしデータsの最後がxで終わるの場合
if s.endswith(x) :	sの後ろがxで終わるのとき
if s.endswith(x) :	もしsの終わりがxで終わるの場合
if s.endswith(x) :	もしsデータの後ろがxで終わるならば
if s.endswith(x) :	データsの後ろがxで終わるの場合
if s.endswith(x) :	もしデータsの終わりがxで終わるの場合
if s.endswith(x) :	もしsデータの終わりがxで終わるのとき
s.endswith(x)	sの最後がxであるかどうか
s.endswith(x)	データsの末尾がxであるかどうか
s.endswith(x)	sの終わりがxであるかどうか
s.endswith(x)	データsの最後がxであるかどうか
s.endswith(x)	データsの終わりがxであるかどうか
s.endswith(x)	sデータの最後がxであるかどうか
s.endswith(x)	sデータの末尾がxであるかどうか
s.endswith(x)	sデータの終わりがxであるかどうか
s.endswith(x)	sの末尾がxであるかどうか
s.endswith(x)	sデータの後ろがxであるかどうか
s.endswith(x)	データsの後ろがxであるかどうか
s.endswith(x)	sの後ろがxであるかどうか
if s.endswith(x) :	もしsの末尾がxであるのとき
if s.endswith(x) :	もしデータsの最後がxであるならば
if s.endswith(x) :	もしsデータの終わりがxであるなら
if s.endswith(x) :	もしsデータの末尾がxであるのとき
if s.endswith(x) :	もしデータsの末尾がxであるのとき
if s.endswith(x) :	もしsデータの最後がxであるの場合
if s.endswith(x) :	もしsの最後がxであるなら
if s.endswith(x) :	もしデータsの後ろがxであるの場合
if s.endswith(x) :	もしデータsの終わりがxであるならば
if s.endswith(x) :	もしsの後ろがxであるなら
if s.endswith(x) :	sの終わりがxであるの場合
s.endswith(x, 2)	sの2番目がxで終わるかどうか
s.endswith(x, 2)	s文字列の2番目がxで終わるかどうか
s.endswith(x, 2)	文字列sの2番目がxで終わるかどうか
if s.endswith(x, 2) :	sの2番目がxで終わるのとき
if s.endswith(x, 2) :	s文字列の2番目がxで終わるの場合
if s.endswith(x, 2) :	もし文字列sの2番目がxで終わるなら
s.isupper()	sが英大文字かどうか
s.isupper()	値sが英大文字かどうか
s.isupper()	s値が英大文字かどうか
if s.isupper() :	sが英大文字のとき
if s.isupper() :	もしs値が英大文字なら
if s.isupper() :	もし値sが英大文字ならば
s.isupper()	s中の全ての文字が英大文字かどうか
s.isupper()	値s中の全ての文字が英大文字かどうか
s.isupper()	s値中の全ての文字が英大文字かどうか
if s.isupper() :	s中の全ての文字が英大文字なら
if s.isupper() :	もしs値中の全ての文字が英大文字ならば
if s.isupper() :	もし値s中の全ての文字が英大文字の場合
s.isupper()	s中の全ての英字が大文字かどうか
s.isupper()	sデータ中の全ての英字が大文字かどうか
s.isupper()	データs中の全ての英字が大文字かどうか
if s.isupper() :	もしs中の全ての英字が大文字なら
if s.isupper() :	もしデータs中の全ての英字が大文字ならば
if s.isupper() :	sデータ中の全ての英字が大文字なら
s.isupper()	s中の英字全てが大文字かどうか
s.isupper()	sデータ中の英字全てが大文字かどうか
s.isupper()	データs中の英字全てが大文字かどうか
if s.isupper() :	s中の英字全てが大文字のとき
if s.isupper() :	もしデータs中の英字全てが大文字なら
if s.isupper() :	もしsデータ中の英字全てが大文字の場合
s.islower()	sが英小文字かどうか
s.islower()	データsが英小文字かどうか
s.islower()	sデータが英小文字かどうか
if s.islower() :	sが英小文字なら
if s.islower() :	データsが英小文字の場合
if s.islower() :	もしsデータが英小文字の場合
s.islower()	s中の全ての文字が英小文字かどうか
s.islower()	sデータ中の全ての文字が英小文字かどうか
s.islower()	データs中の全ての文字が英小文字かどうか
if s.islower() :	もしs中の全ての文字が英小文字のとき
if s.islower() :	もしsデータ中の全ての文字が英小文字のとき
if s.islower() :	もしデータs中の全ての文字が英小文字なら
s.islower()	s中の全ての英字が小文字かどうか
s.islower()	sデータ中の全ての英字が小文字かどうか
s.islower()	データs中の全ての英字が小文字かどうか
if s.islower() :	もしs中の全ての英字が小文字のとき
if s.islower() :	データs中の全ての英字が小文字の場合
if s.islower() :	sデータ中の全ての英字が小文字の場合
s.islower()	s中の英字全てが小文字かどうか
s.islower()	値s中の英字全てが小文字かどうか
s.islower()	s値中の英字全てが小文字かどうか
if s.islower() :	もしs中の英字全てが小文字の場合
if s.islower() :	もし値s中の英字全てが小文字ならば
if s.islower() :	もしs値中の英字全てが小文字のとき
s.isdigit()	sが数字かどうか
s.isdigit()	値sが数字かどうか
s.isdigit()	s値が数字かどうか
if s.isdigit() :	sが数字ならば
if s.isdigit() :	もしs値が数字のとき
if s.isdigit() :	もし値sが数字のとき
s.isdigit()	s中の全ての文字が数字かどうか
s.isdigit()	データs中の全ての文字が数字かどうか
s.isdigit()	sデータ中の全ての文字が数字かどうか
if s.isdigit() :	もしs中の全ての文字が数字ならば
if s.isdigit() :	もしsデータ中の全ての文字が数字なら
if s.isdigit() :	もしデータs中の全ての文字が数字なら
s.isdigit()	s全てが数字かどうか
s.isdigit()	データs全てが数字かどうか
s.isdigit()	sデータ全てが数字かどうか
if s.isdigit() :	s全てが数字の場合
if s.isdigit() :	もしsデータ全てが数字の場合
if s.isdigit() :	もしデータs全てが数字なら
s.isdigit()	sが数字であるかどうか
s.isdigit()	データsが数字であるかどうか
s.isdigit()	sデータが数字であるかどうか
if s.isdigit() :	もしsが数字であるのとき
if s.isdigit() :	データsが数字であるならば
if s.isdigit() :	もしsデータが数字であるなら
s.isalpha()	sが全てアルファベットかどうか
s.isalpha()	s値が全てアルファベットかどうか
s.isalpha()	値sが全てアルファベットかどうか
if s.isalpha() :	sが全てアルファベットの場合
if s.isalpha() :	s値が全てアルファベットの場合
if s.isalpha() :	もし値sが全てアルファベットなら
s.isalnum()	sが全て英数字かどうか
s.isalnum()	sデータが全て英数字かどうか
s.isalnum()	データsが全て英数字かどうか
if s.isalnum() :	もしsが全て英数字ならば
if s.isalnum() :	sデータが全て英数字ならば
if s.isalnum() :	もしデータsが全て英数字なら
s.isascii()	sが全てASCII文字かどうか
s.isascii()	文字列sが全てASCII文字かどうか
s.isascii()	s文字列が全てASCII文字かどうか
if s.isascii() :	sが全てASCII文字の場合
if s.isascii() :	もし文字列sが全てASCII文字なら
if s.isascii() :	s文字列が全てASCII文字ならば
s.isdecimal()	sが全て数字かどうか
s.isdecimal()	データsが全て数字かどうか
s.isdecimal()	sデータが全て数字かどうか
if s.isdecimal() :	sが全て数字のとき
if s.isdecimal() :	もしsデータが全て数字なら
if s.isdecimal() :	もしデータsが全て数字の場合
s.isnumeric()	sが全て数字かどうか
s.isnumeric()	値sが全て数字かどうか
s.isnumeric()	s値が全て数字かどうか
if s.isnumeric() :	もしsが全て数字の場合
if s.isnumeric() :	s値が全て数字のとき
if s.isnumeric() :	もし値sが全て数字なら
s.isidentifier()	sが識別子として利用可能かどうか
s.isidentifier()	識別子としてsが利用可能かどうか
s.isidentifier()	識別子としてs文字列が利用可能かどうか
s.isidentifier()	s文字列が識別子として利用可能かどうか
s.isidentifier()	文字列sが識別子として利用可能かどうか
s.isidentifier()	識別子として文字列sが利用可能かどうか
if s.isidentifier() :	もしsが識別子として利用可能の場合
if s.isidentifier() :	もし文字列sが識別子として利用可能のとき
if s.isidentifier() :	もし識別子としてs文字列が利用可能ならば
if s.isidentifier() :	s文字列が識別子として利用可能なら
if s.isidentifier() :	もし識別子として文字列sが利用可能なら
if s.isidentifier() :	もし識別子としてsが利用可能ならば
s.isprintable()	sがプリント可能かどうか
s.isprintable()	sデータがプリント可能かどうか
s.isprintable()	データsがプリント可能かどうか
s.isprintable()	データsが印字可能かどうか
s.isprintable()	sデータが印字可能かどうか
s.isprintable()	sが印字可能かどうか
if s.isprintable() :	もしsがプリント可能なら
if s.isprintable() :	もしsが印字可能のとき
if s.isprintable() :	もしデータsがプリント可能ならば
if s.isprintable() :	sデータがプリント可能ならば
if s.isprintable() :	sデータが印字可能ならば
if s.isprintable() :	もしデータsが印字可能のとき
set()	空のセット
set()	空の集合
X = set()	空の集合をXとする
X = set()	空のセットをXに代入する
set()	空集合
X = set()	空集合をXに代入する
set(l)	lのセット
set(l)	リストlの集合
set(l)	lリストの集合
set(l)	lの集合
set(l)	lリストのセット
set(l)	リストlのセット
X = set(l)	lの集合をXに代入する
X = set(l)	lのセットをXにする
X = set(l)	リストlの集合をXに代入する
X = set(l)	lリストのセットをXに代入する
X = set(l)	lリストの集合をXにする
X = set(l)	リストlのセットをXとする
st.add(1)	stに1を追加する
st.add(1)	1を集合stに追加する
st.add(1)	集合stに1を加える
st.add(1)	集合stに1を追加する
st.add(1)	1を集合stに加える
st.add(1)	1を集合stに付加する
st.add(1)	1をstに追加する
st.add(1)	stに1を加える
st.add(1)	1をst集合に加える
st.add(1)	集合stに1を入れる
st.add(1)	1をst集合に付加する
st.add(1)	1を集合stに入れる
st.add(1)	1をstに加える
st.add(1)	1をst集合に追加する
st.add(1)	1をstに付加する
st.add(1)	stに1を入れる
st.add(1)	stに1を付加する
st.add(1)	st集合に1を加える
st.add(1)	1をstに入れる
st.add(1)	集合stに1を付加する
st.add(1)	st集合に1を入れる
st.add(1)	st集合に1を追加する
st.add(1)	1をst集合に入れる
st.add(1)	st集合に1を付加する
st.remove(1)	stから1を削除する
st.remove(1)	stから1を除去する
st.remove(1)	stから1を消去する
st.remove(1)	stから1を取り除く
st.remove(1)	セットstから1を除去する
st.remove(1)	セットstから1を削除する
st.remove(1)	stセットから1を消去する
st.remove(1)	集合stから1を消去する
st.remove(1)	st集合から1を除去する
st.remove(1)	集合stから1を消す
st.remove(1)	stセットから1を除去する
st.remove(1)	セットstから1を消去する
st.remove(1)	集合stから1を除去する
st.remove(1)	st集合から1を消去する
st.remove(1)	集合stから1を取り除く
st.remove(1)	stから1を消す
st.remove(1)	セットstから1を取り除く
st.remove(1)	セットstから1を消す
st.remove(1)	st集合から1を削除する
st.remove(1)	stセットから1を取り除く
st.remove(1)	st集合から1を消す
st.remove(1)	st集合から1を取り除く
st.remove(1)	stセットから1を消す
st.remove(1)	集合stから1を削除する
st.remove(1)	stセットから1を削除する
st1.union(st2)	st1とst2の和集合
st1.union(st2)	集合st1と集合st2の和集合
st1.union(st2)	st1セットとst2セットの和集合
st1.union(st2)	st1集合とst2集合の和集合
st1.union(st2)	セットst1とセットst2の和集合
st1.union(st2)	st1とst2の和集合を算出する
st1.union(st2)	セットst1とセットst2の和集合を求める
st1.union(st2)	st1集合とst2集合の和集合を算出する
st1.union(st2)	st1セットとst2セットの和集合を算出する
st1.union(st2)	集合st1と集合st2の和集合を算出する
st1.union(st2)	st1とst2の和集合を抽出する
st1.union(st2)	セットst1とセットst2の和集合を取得する
st1.union(st2)	st1セットとst2セットの和集合を抽出する
st1.union(st2)	st1集合とst2集合の和集合を得る
st1.union(st2)	集合st1と集合st2の和集合を得る
st1.intersection(st2)	st1とst2の積集合
st1.intersection(st2)	st1集合とst2集合の共通部分
st1.intersection(st2)	st1セットとst2集合の共通部分
st1.intersection(st2)	セットst1と集合st2の共通部分
st1.intersection(st2)	st1セットとst2集合の積集合
st1.intersection(st2)	st1集合とst2集合の積集合
st1.intersection(st2)	st1とst2の共通部分
st1.intersection(st2)	セットst1と集合st2の積集合
st1.intersection(st2)	集合st1と集合st2の共通部分
st1.intersection(st2)	集合st1と集合st2の積集合
st1.intersection(st2)	st1とst2の共通部分を求める
st1.intersection(st2)	st1セットとst2集合の共通部分を計算する
st1.intersection(st2)	st1集合とst2集合の共通部分を算出する
st1.intersection(st2)	集合st1と集合st2の積集合を求める
st1.intersection(st2)	セットst1と集合st2の共通部分を求める
st1.intersection(st2)	st1とst2の積集合を計算する
st1.intersection(st2)	セットst1と集合st2の積集合を求める
st1.intersection(st2)	st1集合とst2集合の積集合を計算する
st1.intersection(st2)	集合st1と集合st2の共通部分を算出する
st1.intersection(st2)	st1セットとst2集合の積集合を求める
st1.intersection(st2)	st1とst2の積集合を抽出する
st1.intersection(st2)	st1セットとst2集合の共通部分を抽出する
st1.intersection(st2)	st1とst2の共通部分を得る
st1.intersection(st2)	st1集合とst2集合の共通部分を取得する
st1.intersection(st2)	集合st1と集合st2の共通部分を抽出する
st1.intersection(st2)	セットst1と集合st2の共通部分を抽出する
st1.intersection(st2)	集合st1と集合st2の積集合を取得する
st1.intersection(st2)	st1セットとst2集合の積集合をえる
st1.intersection(st2)	セットst1と集合st2の積集合をえる
st1.intersection(st2)	st1集合とst2集合の積集合を得る
st1.intersection(st2)	st1とst2の共通部分
st1.intersection(st2)	セットst1とセットst2の共通部分
st1.intersection(st2)	集合st1と集合st2の共通部分
st1.intersection(st2)	st1集合とst2集合の共通部分
st1.intersection(st2)	集合st1と集合st2の積集合
st1.intersection(st2)	st1とst2の積集合
st1.intersection(st2)	セットst1とセットst2の積集合
st1.intersection(st2)	st1セットとst2セットの共通部分
st1.intersection(st2)	st1セットとst2セットの積集合
st1.intersection(st2)	st1集合とst2集合の積集合
st1.intersection(st2)	st1とst2の積集合を算出する
st1.intersection(st2)	st1とst2の共通部分を求める
st1.intersection(st2)	st1集合とst2集合の共通部分を求める
st1.intersection(st2)	セットst1とセットst2の共通部分を算出する
st1.intersection(st2)	st1セットとst2セットの共通部分を計算する
st1.intersection(st2)	st1集合とst2集合の積集合を計算する
st1.intersection(st2)	集合st1と集合st2の共通部分を求める
st1.intersection(st2)	集合st1と集合st2の積集合を算出する
st1.intersection(st2)	セットst1とセットst2の積集合を算出する
st1.intersection(st2)	st1セットとst2セットの積集合を算出する
st1.intersection(st2)	st1とst2の共通部分を抽出する
st1.intersection(st2)	集合st1と集合st2の共通部分をえる
st1.intersection(st2)	st1集合とst2集合の共通部分を取得する
st1.intersection(st2)	st1とst2の積集合を得る
st1.intersection(st2)	集合st1と集合st2の積集合を抽出する
st1.intersection(st2)	st1集合とst2集合の積集合を得る
st1.intersection(st2)	st1セットとst2セットの共通部分を抽出する
st1.intersection(st2)	セットst1とセットst2の共通部分をえる
st1.intersection(st2)	セットst1とセットst2の積集合をえる
st1.intersection(st2)	st1セットとst2セットの積集合を取得する
st1.difference(st2)	st1とst2の差
st1.difference(st2)	st1集合とst2集合の差集合
st1.difference(st2)	st1セットとst2集合の差
st1.difference(st2)	集合st1と集合st2の差
st1.difference(st2)	st1集合とst2集合の差
st1.difference(st2)	セットst1と集合st2の差集合
st1.difference(st2)	集合st1と集合st2の差集合
st1.difference(st2)	セットst1と集合st2の差
st1.difference(st2)	st1とst2の差集合
st1.difference(st2)	st1セットとst2集合の差集合
st1.difference(st2)	st1とst2の差を計算する
st1.difference(st2)	セットst1と集合st2の差を計算する
st1.difference(st2)	st1セットとst2集合の差を求める
st1.difference(st2)	集合st1と集合st2の差を算出する
st1.difference(st2)	集合st1と集合st2の差集合を算出する
st1.difference(st2)	st1とst2の差集合を算出する
st1.difference(st2)	st1集合とst2集合の差を計算する
st1.difference(st2)	st1セットとst2集合の差集合を求める
st1.difference(st2)	セットst1と集合st2の差集合を計算する
st1.difference(st2)	st1集合とst2集合の差集合を算出する
st1.difference(st2)	st1とst2の差を抽出する
st1.difference(st2)	st1とst2の差集合を得る
st1.difference(st2)	セットst1と集合st2の差を得る
st1.difference(st2)	st1セットとst2集合の差を得る
st1.difference(st2)	集合st1と集合st2の差集合を取得する
st1.difference(st2)	st1集合とst2集合の差集合をえる
st1.difference(st2)	st1集合とst2集合の差を得る
st1.difference(st2)	集合st1と集合st2の差を抽出する
st1.difference(st2)	セットst1と集合st2の差集合を取得する
st1.difference(st2)	st1セットとst2集合の差集合を抽出する
st1.symmetric_difference(st2)	st1とst2の対称差集合
st1.symmetric_difference(st2)	st1セットとst2集合の対称差
st1.symmetric_difference(st2)	セットst1と集合st2の対称差集合
st1.symmetric_difference(st2)	st1集合とst2集合の対称差
st1.symmetric_difference(st2)	セットst1と集合st2の対称差
st1.symmetric_difference(st2)	st1セットとst2集合の対称差集合
st1.symmetric_difference(st2)	st1とst2の対称差
st1.symmetric_difference(st2)	集合st1と集合st2の対称差
st1.symmetric_difference(st2)	集合st1と集合st2の対称差集合
st1.symmetric_difference(st2)	st1集合とst2集合の対称差集合
st1.symmetric_difference(st2)	st1とst2の対称差を求める
st1.symmetric_difference(st2)	集合st1と集合st2の対称差を計算する
st1.symmetric_difference(st2)	セットst1と集合st2の対称差集合を算出する
st1.symmetric_difference(st2)	st1セットとst2集合の対称差集合を算出する
st1.symmetric_difference(st2)	st1とst2の対称差集合を求める
st1.symmetric_difference(st2)	st1セットとst2集合の対称差を求める
st1.symmetric_difference(st2)	セットst1と集合st2の対称差を算出する
st1.symmetric_difference(st2)	集合st1と集合st2の対称差集合を算出する
st1.symmetric_difference(st2)	st1集合とst2集合の対称差を算出する
st1.symmetric_difference(st2)	st1集合とst2集合の対称差集合を計算する
st1.symmetric_difference(st2)	st1とst2の対称差を抽出する
st1.symmetric_difference(st2)	セットst1と集合st2の対称差集合を抽出する
st1.symmetric_difference(st2)	集合st1と集合st2の対称差を得る
st1.symmetric_difference(st2)	st1集合とst2集合の対称差集合をえる
st1.symmetric_difference(st2)	集合st1と集合st2の対称差集合を取得する
st1.symmetric_difference(st2)	st1セットとst2集合の対称差集合を取得する
st1.symmetric_difference(st2)	セットst1と集合st2の対称差を得る
st1.symmetric_difference(st2)	st1集合とst2集合の対称差を取得する
st1.symmetric_difference(st2)	st1とst2の対称差集合をえる
st1.symmetric_difference(st2)	st1セットとst2集合の対称差をえる
st1.issubset(st2)	st1がst2の部分集合かどうか
st1.issubset(st2)	st1集合がst2集合の部分集合かどうか
st1.issubset(st2)	集合st1が集合st2の部分集合かどうか
if st1.issubset(st2) :	もしst1がst2の部分集合の場合
if st1.issubset(st2) :	もしst1集合がst2集合の部分集合なら
if st1.issubset(st2) :	集合st1が集合st2の部分集合のとき
st1.issuperset(st2)	st1がst2の上位集合かどうか
st1.issuperset(st2)	セットst1が集合st2の上位集合かどうか
st1.issuperset(st2)	st1集合がst2集合の上位集合かどうか
st1.issuperset(st2)	集合st1が集合st2の上位集合かどうか
st1.issuperset(st2)	st1セットがst2集合の上位集合かどうか
if st1.issuperset(st2) :	st1がst2の上位集合ならば
if st1.issuperset(st2) :	もし集合st1が集合st2の上位集合の場合
if st1.issuperset(st2) :	もしセットst1が集合st2の上位集合のとき
if st1.issuperset(st2) :	st1集合がst2集合の上位集合の場合
if st1.issuperset(st2) :	もしst1セットがst2集合の上位集合のとき
st1.isdisjoint(st2)	st1がst2と互いに素かどうか
st1.isdisjoint(st2)	st2と互いにst1が素かどうか
st1.isdisjoint(st2)	集合st1が集合st2と互いに素かどうか
st1.isdisjoint(st2)	st1集合がst2集合と互いに素かどうか
st1.isdisjoint(st2)	st1セットがst2セットと互いに素かどうか
st1.isdisjoint(st2)	セットst2と互いにセットst1が素かどうか
st1.isdisjoint(st2)	集合st2と互いに集合st1が素かどうか
st1.isdisjoint(st2)	セットst1がセットst2と互いに素かどうか
st1.isdisjoint(st2)	st2セットと互いにst1セットが素かどうか
st1.isdisjoint(st2)	st2集合と互いにst1集合が素かどうか
if st1.isdisjoint(st2) :	st1がst2と互いに素の場合
if st1.isdisjoint(st2) :	st1セットがst2セットと互いに素なら
if st1.isdisjoint(st2) :	もしst1集合がst2集合と互いに素なら
if st1.isdisjoint(st2) :	もしセットst1がセットst2と互いに素なら
if st1.isdisjoint(st2) :	もしst2集合と互いにst1集合が素の場合
if st1.isdisjoint(st2) :	もしst2と互いにst1が素なら
if st1.isdisjoint(st2) :	もし集合st2と互いに集合st1が素のとき
if st1.isdisjoint(st2) :	もし集合st1が集合st2と互いに素のとき
if st1.isdisjoint(st2) :	もしst2セットと互いにst1セットが素ならば
if st1.isdisjoint(st2) :	もしセットst2と互いにセットst1が素なら
st1.isdisjoint(st2)	st1とst2が互いに素かどうか
st1.isdisjoint(st2)	互いにst1とst2が素かどうか
st1.isdisjoint(st2)	集合st1と集合st2が互いに素かどうか
st1.isdisjoint(st2)	st1集合とst2集合が互いに素かどうか
st1.isdisjoint(st2)	互いに集合st1と集合st2が素かどうか
st1.isdisjoint(st2)	互いにst1集合とst2集合が素かどうか
if st1.isdisjoint(st2) :	st1とst2が互いに素なら
if st1.isdisjoint(st2) :	互いに集合st1と集合st2が素のとき
if st1.isdisjoint(st2) :	もしst1集合とst2集合が互いに素ならば
if st1.isdisjoint(st2) :	もし互いにst1とst2が素の場合
if st1.isdisjoint(st2) :	互いにst1集合とst2集合が素なら
if st1.isdisjoint(st2) :	もし集合st1と集合st2が互いに素なら
frozenset()	イミュータブルな集合
frozenset()	イミュータブルなセット
X = frozenset()	イミュータブルなセットをXにする
X = frozenset()	イミュータブルな集合をXにする
frozenset(x)	xのイミュータブルな集合
frozenset(x)	xのイミュータブルなセット
X = frozenset(x)	xのイミュータブルな集合をXに代入する
X = frozenset(x)	xのイミュータブルなセットをXとする
breakpoint()	デバッガーを起動する
globals	グローバル変数の辞書
locals	ローカル変数の辞書
import random	randomモジュールをインポートする
import random	randomモジュールを使用する
import random	randomモジュールを使う
import random	randomモジュールを用いる
import random	randomモジュールをインポート直す
random.random()	0.0〜1.0の乱数
random.random()	0.0以上1.0未満の乱数
random.randrange(10)	0から10未満までの整数乱数
X = random.randrange(10)	0から10未満までの整数乱数をXにする
random.randrange(10)	10未満までの整数乱数
X = random.randrange(10)	10未満までの整数乱数をXに代入する
random.randrange(100, 1000)	100から1000未満までの整数乱数
X = random.randrange(100, 1000)	100から1000未満までの整数乱数をXとする
random.randrange(100, 1000)	100以上1000未満までの整数乱数
X = random.randrange(100, 1000)	100以上1000未満までの整数乱数をXに代入する
random.randint(1, 10)	1以上10以下の整数乱数
X = random.randint(1, 10)	1以上10以下の整数乱数をXに代入する
random.seed(0)	乱数シードを0に固定する
random.seed(0)	0に乱数シードを固定する
random.seed(0)	乱数シードを0として乱数生成器を初期化する
random.seed(0)	乱数生成器を乱数シードを0として初期化する
random.seed(0)	乱数生成器を乱数シードを0として初期化直す
random.seed(0)	乱数シードを0として乱数生成器を初期化直す
random.choice(l)	lからランダムに要素をチョイスする
random.choice(l)	要素をlリストからランダムに選択する
random.choice(l)	lリストからランダムに値を選ぶ
random.choice(l)	lからランダムに値を選択する
random.choice(l)	リストlからランダムに要素を選択する
random.choice(l)	リストlからランダムに値を選ぶ
random.choice(l)	lリストからランダムに値を選択する
random.choice(l)	lからランダムに値をチョイスする
random.choice(l)	lからランダムに値を選ぶ
random.choice(l)	lからランダムに要素を選ぶ
random.choice(l)	lリストからランダムに要素を選択する
random.choice(l)	リストlからランダムに値をチョイスする
random.choice(l)	値をリストlからランダムに選択する
random.choice(l)	値をlリストからランダムに選択する
random.choice(l)	リストlからランダムに値を選択する
random.choice(l)	値をlからランダムに選ぶ
random.choice(l)	lリストからランダムに値をチョイスする
random.choice(l)	要素をリストlからランダムにチョイス直す
random.choice(l)	値をlリストからランダムに選ぶ
random.choice(l)	lからランダムに要素を選択する
random.choice(l)	値をリストlからランダムにチョイスする
random.choice(l)	リストlからランダムに要素をチョイス直す
random.choice(l)	値をリストlからランダムにチョイス直す
random.choice(l)	値をlからランダムに選択する
random.choice(l)	要素をlリストからランダムに選ぶ
random.choice(l)	lリストからランダムに値をチョイス直す
random.choice(l)	値をリストlからランダムに選ぶ
random.choice(l)	lリストからランダムに要素をチョイスする
random.choice(l)	lリストからランダムに要素を選ぶ
random.choice(l)	lからランダムに要素をチョイス直す
random.choice(l)	値をlリストからランダムにチョイス直す
random.choice(l)	要素をリストlからランダムにチョイスする
random.choice(l)	lリストからランダムに要素をチョイス直す
random.choice(l)	リストlからランダムに要素を選ぶ
random.choice(l)	値をlリストからランダムにチョイスする
random.choice(l)	要素をリストlからランダムに選択する
random.choice(l)	要素をlからランダムに選択する
random.choice(l)	要素をlからランダムにチョイスする
random.choice(l)	要素をlリストからランダムにチョイス直す
random.choice(l)	値をlからランダムにチョイスする
random.choice(l)	値をlからランダムにチョイス直す
random.choice(l)	要素をリストlからランダムに選ぶ
random.choice(l)	要素をlからランダムに選ぶ
random.choice(l)	要素をlリストからランダムにチョイスする
random.choice(l)	リストlからランダムに値をチョイス直す
random.choice(l)	リストlからランダムに要素をチョイスする
random.sample(l, 3)	lからランダムに要素を3つチョイスする
random.sample(l, 3)	lからランダムに値を3つチョイスする
random.sample(l, 3)	値をlリストからランダムに3つチョイスする
random.sample(l, 3)	値をリストlからランダムに3つチョイスする
random.sample(l, 3)	lリストからランダムに値を3つチョイス直す
random.sample(l, 3)	値をlからランダムに3つチョイス直す
random.sample(l, 3)	要素をリストlからランダムに3つチョイスする
random.sample(l, 3)	リストlからランダムに値を3つチョイス直す
random.sample(l, 3)	リストlからランダムに値を3つチョイスする
random.sample(l, 3)	lリストからランダムに値を3つチョイスする
random.sample(l, 3)	リストlからランダムに要素を3つチョイス直す
random.sample(l, 3)	要素をlリストからランダムに3つチョイス直す
random.sample(l, 3)	lリストからランダムに要素を3つチョイス直す
random.sample(l, 3)	lからランダムに要素を3つチョイス直す
random.sample(l, 3)	lリストからランダムに要素を3つチョイスする
random.sample(l, 3)	リストlからランダムに要素を3つチョイスする
random.sample(l, 3)	lからランダムに値を3つチョイス直す
random.sample(l, 3)	値をリストlからランダムに3つチョイス直す
random.sample(l, 3)	要素をlリストからランダムに3つチョイスする
random.sample(l, 3)	要素をlからランダムに3つチョイス直す
random.sample(l, 3)	値をlリストからランダムに3つチョイス直す
random.sample(l, 3)	要素をlからランダムに3つチョイスする
random.sample(l, 3)	要素をリストlからランダムに3つチョイス直す
random.sample(l, 3)	値をlからランダムに3つチョイスする
random.shuffle(l)	lをランダムにシャッフルする
random.shuffle(l)	ランダムにlリストをシャッフルする
random.shuffle(l)	lリストをランダムにシャッフルする
random.shuffle(l)	ランダムにlをシャッフルする
random.shuffle(l)	リストlをランダムにシャッフル直す
random.shuffle(l)	ランダムにリストlをシャッフルする
random.shuffle(l)	リストlをランダムにシャッフルする
random.shuffle(l)	lをランダムにシャッフル直す
random.shuffle(l)	ランダムにlリストをシャッフル直す
random.shuffle(l)	lリストをランダムにシャッフル直す
random.shuffle(l)	ランダムにリストlをシャッフル直す
random.shuffle(l)	ランダムにlをシャッフル直す
import math	mathモジュールをインポートする
import math	算術用ライブラリを用いる
import math	算術用ライブラリを使用する
import math	算術用ライブラリを使う
import math	mathモジュールを用いる
import math	算術用ライブラリをインポートする
import math	mathモジュールをインポート直す
import math	算術用ライブラリをインポート直す
math.sqrt(x)	xの平方根
math.sqrt(x)	xの平方根を調べる
math.sqrt(x)	xの平方根を計算する
X = math.sqrt(x)	xの平方根をXにする
math.sqrt(x)	xのルート
math.sqrt(x)	xのルートを確認する
math.sqrt(x)	xのルートを求める
X = math.sqrt(x)	xのルートをXとする
math.ceil(x)	xの切り上げ
math.ceil(x)	xの小数点以下切り上げ
math.ceil(x)	xの切り上げを確認する
math.ceil(x)	xの小数点以下切り上げを調べる
math.ceil(x)	xの小数点以下切り上げを計算する
math.ceil(x)	xの切り上げを算出する
X = math.ceil(x)	xの小数点以下切り上げをXにする
X = math.ceil(x)	xの切り上げをXに代入する
math.ceil(x)	xを最も近い整数に切り上げ
math.ceil(x)	最も近い数字にxを切り上げ
math.ceil(x)	最も近い整数にxを切り上げ
math.ceil(x)	最も近い数値にxを切り上げ
math.ceil(x)	xを最も近い数値に切り上げ
math.ceil(x)	xを最も近い数字に切り上げ
math.ceil(x)	最も近い整数値にxを切り上げ
math.ceil(x)	xを最も近い整数値に切り上げ
math.ceil(x)	xを最も近い整数に切り上げを確認する
math.ceil(x)	最も近い整数値にxを切り上げを確認する
math.ceil(x)	最も近い整数にxを切り上げを調べる
math.ceil(x)	xを最も近い整数値に切り上げを調べる
math.ceil(x)	最も近い数字にxを切り上げを確認する
math.ceil(x)	xを最も近い数字に切り上げを見る
math.ceil(x)	xを最も近い数値に切り上げを調べる
math.ceil(x)	最も近い数値にxを切り上げを確認する
math.ceil(x)	xを最も近い整数に切り上げを計算する
math.ceil(x)	最も近い数字にxを切り上げを算出する
math.ceil(x)	xを最も近い数字に切り上げを算出する
math.ceil(x)	xを最も近い数値に切り上げを求める
math.ceil(x)	最も近い整数にxを切り上げを算出する
math.ceil(x)	xを最も近い整数値に切り上げを算出する
math.ceil(x)	最も近い数値にxを切り上げを計算する
math.ceil(x)	最も近い整数値にxを切り上げを計算する
X = math.ceil(x)	xを最も近い整数に切り上げをXにする
X = math.ceil(x)	最も近い整数にxを切り上げをXとする
X = math.ceil(x)	xを最も近い数字に切り上げをXとする
X = math.ceil(x)	xを最も近い数値に切り上げをXにする
X = math.ceil(x)	最も近い数字にxを切り上げをXに代入する
X = math.ceil(x)	最も近い数値にxを切り上げをXにする
X = math.ceil(x)	xを最も近い整数値に切り上げをXとする
X = math.ceil(x)	最も近い整数値にxを切り上げをXとする
math.ceil(x)	xに最も近い数字に切り上げ
math.ceil(x)	xに最も近い整数に切り上げ
math.ceil(x)	xに最も近い整数値に切り上げ
math.ceil(x)	xに最も近い数値に切り上げ
math.ceil(x)	xに最も近い数字に切り上げを表示する
math.ceil(x)	xに最も近い整数に切り上げを見る
math.ceil(x)	xに最も近い数値に切り上げをチェックする
math.ceil(x)	xに最も近い整数値に切り上げを見る
math.ceil(x)	xに最も近い整数に切り上げを求める
math.ceil(x)	xに最も近い数値に切り上げを求める
math.ceil(x)	xに最も近い整数値に切り上げを算出する
math.ceil(x)	xに最も近い数字に切り上げを計算する
X = math.ceil(x)	xに最も近い整数に切り上げをXに代入する
X = math.ceil(x)	xに最も近い数値に切り上げをXとする
X = math.ceil(x)	xに最も近い整数値に切り上げをXとする
X = math.ceil(x)	xに最も近い数字に切り上げをXに代入する
math.floor(x)	xの切り捨て
math.floor(x)	xの小数点以下切り捨て
math.floor(x)	xの小数点以下切り捨てを調べる
math.floor(x)	xの切り捨てをチェックする
math.floor(x)	xの小数点以下切り捨てを求める
math.floor(x)	xの切り捨てを算出する
X = math.floor(x)	xの切り捨てをXに代入する
X = math.floor(x)	xの小数点以下切り捨てをXとする
math.floor(x)	xを最も近い整数に切り捨て
math.floor(x)	最も近い整数にxを切り捨て
math.floor(x)	xを最も近い数字に切り捨て
math.floor(x)	最も近い数字にxを切り捨て
math.floor(x)	xを最も近い整数に切り捨てを調べる
math.floor(x)	最も近い数字にxを切り捨てを表示する
math.floor(x)	最も近い整数にxを切り捨てを確認する
math.floor(x)	xを最も近い数字に切り捨てを見る
math.floor(x)	xを最も近い整数に切り捨てを求める
math.floor(x)	xを最も近い数字に切り捨てを算出する
math.floor(x)	最も近い数字にxを切り捨てを計算する
math.floor(x)	最も近い整数にxを切り捨てを算出する
X = math.floor(x)	xを最も近い整数に切り捨てをXに代入する
X = math.floor(x)	最も近い数字にxを切り捨てをXに代入する
X = math.floor(x)	最も近い整数にxを切り捨てをXとする
X = math.floor(x)	xを最も近い数字に切り捨てをXとする
math.floor(x)	xに最も近い整数に切り捨て
math.floor(x)	xに最も近い数字に切り捨て
math.floor(x)	xに最も近い整数に切り捨てをチェックする
math.floor(x)	xに最も近い数字に切り捨てをチェックする
math.floor(x)	xに最も近い整数に切り捨てを算出する
math.floor(x)	xに最も近い数字に切り捨てを求める
X = math.floor(x)	xに最も近い整数に切り捨てをXに代入する
X = math.floor(x)	xに最も近い数字に切り捨てをXにする
math.gcd(x, y)	xとyの最大公約数
math.gcd(x, y)	xとyの最大公約数を見る
math.gcd(x, y)	xとyの最大公約数を求める
X = math.gcd(x, y)	xとyの最大公約数をXとする
math.lcm(x, y)	xとyの最小公倍数
math.lcm(x, y)	xとyの最小公倍数を確認する
math.lcm(x, y)	xとyの最小公倍数を計算する
X = math.lcm(x, y)	xとyの最小公倍数をXとする
math.comb(x, y)	xとyの組み合わせ
math.comb(x, y)	xとyのコンビネーション
math.comb(x, y)	xとyのコンビネーションを調べる
math.comb(x, y)	xとyの組み合わせをチェックする
math.comb(x, y)	xとyのコンビネーションを求める
math.comb(x, y)	xとyの組み合わせを求める
X = math.comb(x, y)	xとyの組み合わせをXにする
X = math.comb(x, y)	xとyのコンビネーションをXに代入する
math.copysign(x, y)	yの符号を持ったx
math.copysign(x, y)	yの符号を持ったxを表示する
math.copysign(x, y)	yの符号を持ったxを算出する
X = math.copysign(x, y)	yの符号を持ったxをXとする
math.copysign(x, y)	xをyの符号にした値
math.copysign(x, y)	yの符号にxをした値
math.copysign(x, y)	xをyの符号にしたデータ
math.copysign(x, y)	yの符号にxをしたデータ
math.copysign(x, y)	xをyの符号にした値をチェックする
math.copysign(x, y)	yの符号にxをした値をチェックする
math.copysign(x, y)	yの符号にxをしたデータを調べる
math.copysign(x, y)	xをyの符号にしたデータをチェックする
math.copysign(x, y)	xをyの符号にした値を計算する
math.copysign(x, y)	yの符号にxをした値を求める
math.copysign(x, y)	xをyの符号にしたデータを算出する
math.copysign(x, y)	yの符号にxをしたデータを計算する
X = math.copysign(x, y)	xをyの符号にした値をXにする
X = math.copysign(x, y)	yの符号にxをした値をXとする
X = math.copysign(x, y)	xをyの符号にしたデータをXに代入する
X = math.copysign(x, y)	yの符号にxをしたデータをXとする
math.fabs(x)	xの絶対値
math.fabs(x)	xの絶対値を調べる
math.fabs(x)	xの絶対値を算出する
X = math.fabs(x)	xの絶対値をXとする
math.factorial(x)	xの階乗
math.factorial(x)	xの階乗をチェックする
math.factorial(x)	xの階乗を計算する
X = math.factorial(x)	xの階乗をXに代入する
math.frexp(x)	xの仮数と指数
math.frexp(x)	xの仮数と指数を確認する
math.frexp(x)	xの仮数と指数を計算する
math.isclose(x, y)	xとyが近いかどうか
math.isclose(x, y)	xとyが近いかどうかをチェックする
math.isclose(x, y)	xとyが近いかどうかを計算する
if math.isclose(x, y) :	xとyが近いならば
math.isclose(x, y)	xとyが近似値かどうか
math.isclose(x, y)	xとyが近似値かどうかを調べる
math.isclose(x, y)	xとyが近似値かどうかを算出する
if math.isclose(x, y) :	xとyが近似値のとき
math.isfinite(x)	xが有限かどうか
math.isfinite(x)	xが有限かどうかを表示する
math.isfinite(x)	xが有限かどうかを算出する
if math.isfinite(x) :	もしxが有限なら
math.isinf(x)	xが無限大かどうか
math.isinf(x)	xが無限大かどうかをチェックする
math.isinf(x)	xが無限大かどうかを求める
if math.isinf(x) :	xが無限大なら
math.isnan(x)	xがNaNかどうか
math.isnan(x)	xがNaNかどうかを調べる
math.isnan(x)	xがNaNかどうかを算出する
if math.isnan(x) :	xがNaNのとき
math.modf(x)	xの小数部と整数部
math.modf(x)	xの小数部と整数部を表示する
math.modf(x)	xの小数部と整数部を計算する
math.perm(x)	xの順列の総数
math.perm(x)	xの順列の総数をチェックする
math.perm(x)	xの順列の総数を計算する
X = math.perm(x)	xの順列の総数をXとする
math.perm(x, y)	xからy個取り出した時の順列の総数
math.perm(x, y)	xからy個取り出した時の順列の総数を表示する
math.perm(x, y)	xからy個取り出した時の順列の総数を計算する
X = math.perm(x, y)	xからy個取り出した時の順列の総数をXに代入する
math.prod(l)	lの要素積
math.prod(l)	リストlの要素積
math.prod(l)	lリストの要素積
math.prod(l)	lの要素積を表示する
math.prod(l)	lリストの要素積を調べる
math.prod(l)	リストlの要素積を確認する
math.prod(l)	lの要素積を計算する
math.prod(l)	lリストの要素積を計算する
math.prod(l)	リストlの要素積を算出する
X = math.prod(l)	lの要素積をXにする
X = math.prod(l)	リストlの要素積をXに代入する
X = math.prod(l)	lリストの要素積をXにする
math.remainder(x, y)	xをyで割った剰余
math.remainder(x, y)	xをyでわったあまり
math.remainder(x, y)	xをyで割った剰余を見る
math.remainder(x, y)	xをyでわったあまりを表示する
math.remainder(x, y)	xをyで割った剰余を計算する
math.remainder(x, y)	xをyでわったあまりを計算する
X = math.remainder(x, y)	xをyで割った剰余をXにする
X = math.remainder(x, y)	xをyでわったあまりをXにする
math.exp(x)	eのx乗
math.exp(x)	eのx乗を見る
math.exp(x)	eのx乗を算出する
X = math.exp(x)	eのx乗をXとする
math.log(x)	xの自然対数
math.log(x)	xの自然対数をチェックする
math.log(x)	xの自然対数を算出する
X = math.log(x)	xの自然対数をXとする
math.log(x, y)	yを底とするxの対数
math.log(x, y)	yを底と直すxの対数
math.log(x, y)	yを底とするxの対数を確認する
math.log(x, y)	yを底と直すxの対数を見る
math.log(x, y)	yを底とするxの対数を計算する
math.log(x, y)	yを底と直すxの対数を求める
X = math.log(x, y)	yを底とするxの対数をXにする
X = math.log(x, y)	yを底と直すxの対数をXとする
math.log(x, y)	yに対するxの対数
math.log(x, y)	yに対するxの対数を見る
math.log(x, y)	yに対するxの対数を計算する
X = math.log(x, y)	yに対するxの対数をXに代入する
math.log1p(x)	1+xの自然対数
math.log1p(x)	1+xの自然対数を調べる
math.log1p(x)	1+xの自然対数を計算する
X = math.log1p(x)	1+xの自然対数をXとする
math.log2(x)	2を底とするxの対数
math.log2(x)	2を底と直すxの対数
math.log2(x)	2を底とするxの対数を確認する
math.log2(x)	2を底と直すxの対数を確認する
math.log2(x)	2を底とするxの対数を計算する
math.log2(x)	2を底と直すxの対数を求める
X = math.log2(x)	2を底とするxの対数をXに代入する
X = math.log2(x)	2を底と直すxの対数をXとする
math.log10(x)	xの常用対数
math.log10(x)	xの常用対数を表示する
math.log10(x)	xの常用対数を計算する
X = math.log10(x)	xの常用対数をXに代入する
math.log10(x)	xの10を底とする対数
math.log10(x)	xの10を底と直す対数
math.log10(x)	xの10を底とする対数を調べる
math.log10(x)	xの10を底と直す対数をチェックする
math.log10(x)	xの10を底とする対数を算出する
math.log10(x)	xの10を底と直す対数を算出する
X = math.log10(x)	xの10を底とする対数をXに代入する
X = math.log10(x)	xの10を底と直す対数をXに代入する
math.cos(x)	xの余弦
math.cos(x)	xの余弦を見る
math.cos(x)	xの余弦を算出する
X = math.cos(x)	xの余弦をXにする
math.cos(x)	xのコサイン
math.cos(x)	xのコサインを調べる
math.cos(x)	xのコサインを計算する
X = math.cos(x)	xのコサインをXとする
math.sin(x)	xの正弦
math.sin(x)	xの正弦を表示する
math.sin(x)	xの正弦を算出する
X = math.sin(x)	xの正弦をXに代入する
math.sin(x)	xのサイン
math.sin(x)	xのサインをチェックする
math.sin(x)	xのサインを計算する
X = math.sin(x)	xのサインをXとする
math.tan(x)	xの正接
math.tan(x)	xの正接をチェックする
math.tan(x)	xの正接を計算する
X = math.tan(x)	xの正接をXに代入する
math.tan(x)	xのタンジェント
math.tan(x)	xのタンジェントを確認する
math.tan(x)	xのタンジェントを求める
X = math.tan(x)	xのタンジェントをXにする
math.acos(x)	xの逆余弦
math.acos(x)	xの逆余弦を確認する
math.acos(x)	xの逆余弦を求める
X = math.acos(x)	xの逆余弦をXにする
math.acos(x)	xのアークコサイン
math.acos(x)	xのアークコサインをチェックする
math.acos(x)	xのアークコサインを算出する
X = math.acos(x)	xのアークコサインをXに代入する
math.asin(x)	xの逆正弦
math.asin(x)	xの逆正弦をチェックする
math.asin(x)	xの逆正弦を計算する
X = math.asin(x)	xの逆正弦をXとする
math.asin(x)	xのアークサイン
math.asin(x)	xのアークサインを見る
math.asin(x)	xのアークサインを計算する
X = math.asin(x)	xのアークサインをXにする
math.atan(x)	xの逆正接
math.atan(x)	xの逆正接を表示する
math.atan(x)	xの逆正接を求める
X = math.atan(x)	xの逆正接をXにする
math.atan(x)	xのアークタンジェント
math.atan(x)	xのアークタンジェントを見る
math.atan(x)	xのアークタンジェントを計算する
X = math.atan(x)	xのアークタンジェントをXとする
math.degrees(x)	xの角度
math.degrees(x)	xの角度を確認する
math.degrees(x)	xの角度を算出する
X = math.degrees(x)	xの角度をXに代入する
math.radians(x)	xのラジアン
math.radians(x)	xのラジアンを見る
math.radians(x)	xのラジアンを計算する
X = math.radians(x)	xのラジアンをXとする
math.acosh(x)	xの逆双曲線余弦
math.acosh(x)	xの逆双曲線余弦を表示する
math.acosh(x)	xの逆双曲線余弦を算出する
X = math.acosh(x)	xの逆双曲線余弦をXにする
math.asinh(x)	xの逆双曲線正弦
math.asinh(x)	xの逆双曲線正弦をチェックする
math.asinh(x)	xの逆双曲線正弦を算出する
X = math.asinh(x)	xの逆双曲線正弦をXにする
math.atanh(x)	xの逆双曲線正接
math.atanh(x)	xの逆双曲線正接を見る
math.atanh(x)	xの逆双曲線正接を算出する
X = math.atanh(x)	xの逆双曲線正接をXとする
math.cosh(x)	xの双曲線余弦
math.cosh(x)	xの双曲線余弦を調べる
math.cosh(x)	xの双曲線余弦を算出する
X = math.cosh(x)	xの双曲線余弦をXにする
math.sinh(x)	xの双曲線正弦
math.sinh(x)	xの双曲線正弦を調べる
math.sinh(x)	xの双曲線正弦を算出する
X = math.sinh(x)	xの双曲線正弦をXにする
math.tanh(x)	xの双曲線正接
math.tanh(x)	xの双曲線正接を調べる
math.tanh(x)	xの双曲線正接を算出する
X = math.tanh(x)	xの双曲線正接をXとする
math.dist(x, y)	xとyのユークリッド距離
math.dist(x, y)	xとyのユークリッド距離を確認する
math.dist(x, y)	xとyのユークリッド距離を求める
X = math.dist(x, y)	xとyのユークリッド距離をXに代入する
math.hypot(x,y)	xとyのノルム
math.hypot(x,y)	xとyのノルムを表示する
math.hypot(x,y)	xとyのノルムを求める
X = math.hypot(x,y)	xとyのノルムをXとする
math.hypot(x,y)	原点からの(x, y)の距離
math.hypot(x,y)	原点からの(x, y)の距離を表示する
math.hypot(x,y)	原点からの(x, y)の距離を算出する
X = math.hypot(x,y)	原点からの(x, y)の距離をXに代入する
math.gamma(x)	xのガンマ関数
math.gamma(x)	xのガンマ関数を見る
math.gamma(x)	xのガンマ関数を計算する
X = math.gamma(x)	xのガンマ関数をXにする
math.lgamma(x)	xのガンマ関数の絶対値の自然対数
math.lgamma(x)	xのガンマ関数の絶対値の自然対数を確認する
math.lgamma(x)	xのガンマ関数の絶対値の自然対数を求める
X = math.lgamma(x)	xのガンマ関数の絶対値の自然対数をXとする
math.pi	円周率
math.pi	円周率を見る
math.pi	円周率を算出する
math.e	ネイピア数
math.e	ネイピア数をチェックする
math.e	ネイピア数を計算する
math.inf	無限大
math.inf	無限大を確認する
math.inf	無限大を求める
math.nan	NaN
math.nan	NaNを見る
math.nan	NaNを計算する
import copy	copyモジュールをインポートする
import copy	copyモジュールをインポート直す
import copy	copyモジュールを使う
import copy	copyモジュールを使用する
import copy	copyモジュールを用いる
copy.copy(x)	xをコピーした結果
copy.deepcopy(x)	xを深くコピーした結果
import bisect	bisectモジュールをインポートする
import bisect	bisectモジュールをインポート直す
bisect.bisect_left(b, x)	ソートされた順序を保ったままxをbに挿入できるインデックス
bisect.bisect_left(b, x)	bに並び順をそのままでxを挿入できる場所
bisect.bisect_left(b, x)	bに並んでいる順序をそのままでxを挿入できるインデックス
bisect.bisect_left(b, x)	並んでいる順序をそのままでxをbに挿入できる場所
bisect.bisect_left(b, x)	bにソートされた順序を保ったままxを挿入できる位置
bisect.bisect_left(b, x)	bに並び順を保ったままxを挿入できるインデックス
bisect.bisect_left(b, x)	並んでいる順序をそのままでxをbに挿入できるインデックス
bisect.bisect_left(b, x)	ソートされた順序を保ったままxをbに挿入できる位置
bisect.bisect_left(b, x)	bに並んでいる順序をそのままでxを挿入できる場所
bisect.bisect_left(b, x)	bにソートされた順序を保ったままxを挿入できるインデックス
bisect.bisect_left(b, x)	並び順をそのままでxをbに挿入できるインデックス
bisect.bisect_left(b, x)	並び順を保ったままxをbに挿入できる位置
bisect.bisect_left(b, x)	並び順を保ったままxをbに挿入できるインデックス
bisect.bisect_left(b, x)	bに並び順をそのままでxを挿入できるインデックス
bisect.bisect_left(b, x)	並び順をそのままでxをbに挿入できる場所
bisect.bisect_left(b, x)	bに並び順を保ったままxを挿入できる位置
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる最後の位置
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる最後のインデックス
bisect.bisect_right(b, x)	並び順をそのままでxをbに挿入できる一番後ろの場所
bisect.bisect_right(b, x)	並んでいる順序をそのままでxをbに挿入できる一番後ろの場所
bisect.bisect_right(b, x)	bに並んでいる順序をそのままでxを挿入できる一番後ろの場所
bisect.bisect_right(b, x)	bに並び順を保ったままxを挿入できる右側の場所
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる最後の場所
bisect.bisect_right(b, x)	bにソートされた順序を保ったままxを挿入できる最後の場所
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる最後のインデックス
bisect.bisect_right(b, x)	bに並び順をそのままでxを挿入できる一番後ろの場所
bisect.bisect_right(b, x)	bにソートされた順序を保ったままxを挿入できる最後のインデックス
bisect.bisect_right(b, x)	並び順をそのままでxをbに挿入できる一番後ろのインデックス
bisect.bisect_right(b, x)	並んでいる順序をそのままでxをbに挿入できる一番後ろのインデックス
bisect.bisect_right(b, x)	bに並んでいる順序をそのままでxを挿入できる一番後ろのインデックス
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる右側の位置
bisect.bisect_right(b, x)	bにソートされた順序を保ったままxを挿入できる最後の位置
bisect.bisect_right(b, x)	bにソートされた順序を保ったままxを挿入できる右側の位置
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる右側の場所
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる最後の位置
bisect.bisect_right(b, x)	bに並び順を保ったままxを挿入できる最後の位置
bisect.bisect_right(b, x)	bに並び順をそのままでxを挿入できる一番後ろのインデックス
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる右側の場所
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる右側の位置
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる終わりの位置
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる右側のインデックス
bisect.bisect_right(b, x)	bに並び順を保ったままxを挿入できる最後のインデックス
bisect.bisect_right(b, x)	bにソートされた順序を保ったままxを挿入できる終わりの場所
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる終わりのインデックス
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる終わりの位置
bisect.bisect_right(b, x)	bにソートされた順序を保ったままxを挿入できる右側のインデックス
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる右側のインデックス
bisect.bisect_right(b, x)	ソートされた順序を保ったままxをbに挿入できる終わりの場所
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる最後の場所
bisect.bisect_right(b, x)	並び順を保ったままxをbに挿入できる終わりの場所
bisect.insort_left(b, x)	xをbにソート順で挿入する
bisect.insort_left(b, x)	bにxをソート順で挿入する
bisect.insort_right(b, x)	xをbにソート順で右側に挿入する
bisect.insort_right(b, x)	bにxをソート順で一番後ろ挿入する
bisect.insort_right(b, x)	bにxをソート順で右側に挿入する
bisect.insort_right(b, x)	xをbにソート順で一番後ろ挿入する
bisect.insort_right(b, x)	xをbにソート順で最後に挿入する
bisect.insort_right(b, x)	bにxをソート順で最後に挿入する
bisect.insort_right(b, x)	xをbにソート順で終わりに挿入する
bisect.insort_right(b, x)	bにxをソート順で終わりに挿入する
import itertools	itertoolsモジュールをインポートする
import itertools	itertoolsモジュールをインポート直す
itertools.repeat(10)	10の無限列
itertools.repeat(10, 3)	10の3回続く列
itertools.count()	無限にカウントアップする整数列
itertools.count()	無限にカウントアップ直す整数列
itertools.count(2)	2からカウントアップする無限の整数列
itertools.count(2)	2からカウントアップ直す無限の整数列
itertools.count(2, 10)	2から始まり10間隔でカウントアップする無限の整数列
itertools.count(2, 10)	2から始まり10間隔でカウントアップ直す無限の整数列
itertools.cycle(l)	lを無限に繰り返した列
itertools.cycle(l)	無限にlリストを繰り返した列
itertools.cycle(l)	無限にリストlを繰り返した列
itertools.cycle(l)	lリストを無限に繰り返した列
itertools.cycle(l)	無限にlを繰り返した列
itertools.cycle(l)	リストlを無限に繰り返した列
itertools.product(l1, l2)	l1とl2の直積
itertools.product(l1, l2)	リストl1とリストl2の直積
itertools.product(l1, l2)	l1リストとl2リストの直積
itertools.permutations(l)	lの順列
itertools.permutations(l)	lリストの順列
itertools.permutations(l)	リストlの順列
itertools.permutations(l, 2)	lのうち2個までの順列
itertools.permutations(l, 2)	リストlのうち2個までの順列
itertools.permutations(l, 2)	lリストのうち2個までの順列
itertools.combinations(l, 2)	lのうち2個までの組み合わせ
itertools.combinations(l, 2)	リストlのうち2個までの組み合わせ
itertools.combinations(l, 2)	lのうち2個までのコンビネーション
itertools.combinations(l, 2)	lリストのうち2個までの組み合わせ
itertools.combinations(l, 2)	lリストのうち2個までのコンビネーション
itertools.combinations(l, 2)	リストlのうち2個までのコンビネーション
itertools.combinations_with_replacement(l, 2)	lのうち2個までの重複コンビネーション
itertools.combinations_with_replacement(l, 2)	lリストのうち2個までの重複組み合わせ
itertools.combinations_with_replacement(l, 2)	lのうち2個までの重複組み合わせ
itertools.combinations_with_replacement(l, 2)	リストlのうち2個までの重複組み合わせ
itertools.combinations_with_replacement(l, 2)	リストlのうち2個までの重複コンビネーション
itertools.combinations_with_replacement(l, 2)	lリストのうち2個までの重複コンビネーション
import collections	collectionsモジュールを用いる
collections.deque()	dequeオブジェクトを生成する
collections.deque()	dequeオブジェクトを作成する
collections.deque()	dequeオブジェクトを作る
X = collections.deque()	dequeオブジェクトを作って、Xとする
X = collections.deque()	dequeオブジェクトを作られた結果をXに代入する
X = collections.deque()	dequeオブジェクトを生成して、Xにする
X = collections.deque()	dequeオブジェクトを生成した結果をXとする
X = collections.deque()	dequeオブジェクトを作成して、Xとする
X = collections.deque()	dequeオブジェクトを作成された結果をXにする
collections.deque(x)	xからdequeオブジェクトを作る
collections.deque(x)	xからdequeオブジェクトを作成する
collections.deque(x)	xからdequeオブジェクトを生成する
X = collections.deque(x)	xからdequeオブジェクトを生成し、Xに代入する
X = collections.deque(x)	xからdequeオブジェクトを生成された結果をXにする
X = collections.deque(x)	xからdequeオブジェクトを作って、Xにする
X = collections.deque(x)	xからdequeオブジェクトを作られた結果をXとする
X = collections.deque(x)	xからdequeオブジェクトを作成し、Xとする
X = collections.deque(x)	xからdequeオブジェクトを作成した結果をXにする
maxlen=5	5を最大長として
maxlen=5	最大長として5を
x.appendleft('l')	xの最初に'l'を追加する
x.appendleft('l')	xの先頭に'l'を付加する
x.appendleft('l')	'l'をxの先頭に追加する
x.appendleft('l')	'l'をxの左側に加える
x.appendleft('l')	'l'をxの先頭に付加する
x.appendleft('l')	'l'をxの左側に入れる
x.appendleft('l')	xの最初に'l'を入れる
x.appendleft('l')	xの先頭に'l'を加える
x.appendleft('l')	'l'をxの先頭に入れる
x.appendleft('l')	'l'をxの最初に付加する
x.appendleft('l')	'l'をxの最初に入れる
x.appendleft('l')	'l'をxの最初に加える
x.appendleft('l')	xの最初に'l'を付加する
x.appendleft('l')	xの先頭に'l'を入れる
x.appendleft('l')	xの最初に'l'を加える
x.appendleft('l')	'l'をxの左側に追加する
x.appendleft('l')	xの左側に'l'を追加する
x.appendleft('l')	'l'をxの左側に付加する
x.appendleft('l')	xの先頭に'l'を追加する
x.appendleft('l')	xの左側に'l'を入れる
x.appendleft('l')	'l'をxの先頭に加える
x.appendleft('l')	'l'をxの最初に追加する
x.appendleft('l')	xの左側に'l'を付加する
x.appendleft('l')	xの左側に'l'を加える
x.appendleft('l')	xの最初を'l'で拡張する
x.appendleft('l')	xの左側を'l'で拡張する
x.appendleft('l')	'l'でxの最初を拡張する
x.appendleft('l')	'l'でxの先頭を拡張する
x.appendleft('l')	'l'でxの左側を拡張する
x.appendleft('l')	xの先頭を'l'で拡張する
x.popleft()	xの先頭から取り除いた値
x.popleft()	xの先頭から抜いた値
x.popleft()	xの先頭から除いた値
x.popleft()	xの最初から抜いた値
x.popleft()	xの先頭から除いたデータ
x.popleft()	xの左側から抜いた値
x.popleft()	xの最初から取り除いた値
x.popleft()	xの最初から除いたデータ
x.popleft()	xの最初から除いた値
x.rotate()	xの要素を右にひとつローテートする
x.rotate()	右にxの要素をひとつローテートする
x.rotate()	xの値を右にひとつローテート直す
x.rotate()	右にxの値をひとつローテート直す
x.rotate()	右にxの要素をひとつ回転する
x.rotate()	xの要素を右にひとつ回転する
x.rotate()	右にxの要素をひとつローテート直す
x.rotate()	右にxの値をひとつローテートする
x.rotate()	右にxの値をひとつ回転する
x.rotate()	xの値を右にひとつ回転する
x.rotate()	xの値を右にひとつローテートする
x.rotate()	xの要素を右にひとつローテート直す
x.rotate(2)	xの要素を右に2つずつローテートする
x.rotate(2)	右にxの要素を2つずつ回転する
x.rotate(2)	xの値を右に2つずつ回転する
x.rotate(2)	xの要素を右に2つずつ回転する
x.rotate(2)	右にxの値を2つずつローテート直す
x.rotate(2)	右にxの要素を2つずつローテートする
x.rotate(2)	右にxの要素を2つずつローテート直す
x.rotate(2)	xの要素を右に2つずつローテート直す
x.rotate(2)	右にxの値を2つずつ回転する
x.rotate(2)	右にxの値を2つずつローテートする
x.rotate(2)	xの値を右に2つずつローテート直す
x.rotate(2)	xの値を右に2つずつローテートする
collections.Counter(l)	lの辞書カウンタ
collections.Counter(l)	リストlの辞書カウンタ
collections.Counter(l)	lリストの辞書カウンタ
X = collections.Counter(l)	lの辞書カウンタをXとする
X = collections.Counter(l)	lリストの辞書カウンタをXにする
X = collections.Counter(l)	リストlの辞書カウンタをXとする
c.most_common()	cの出現頻度順の列
c.most_common()	cの出現回数順の列
c.most_common(3)	cの上位3位までの出現頻度順の列
c.most_common(3)	cの上位3位までの出現回数順の列
c.most_common(3)	cの上位3個の出現頻度順の列
c.most_common(3)	cの上位3個の出現回数順の列
import os	osモジュールをインポートする
import os	osモジュールをインポート直す
os.sep	ファイルパスのセパレータ記号
os.getcwd	現在の作業ディレクトリ
os.system	コマンド
os.path.basename(p)	パスpのファイル名
os.path.basename(p)	パス文字列pのファイル名
os.path.dirname(p)	パス文字列pのディレクトリ名
os.path.dirname(p)	パスpのディレクトリ名
os.path.abspath(p)	パス文字列pの絶対ファイルパス
os.path.abspath(p)	パスpの絶対ファイルパス
os.path.split(p)	パスpのディレクトリ名とファイル名
os.path.split(p)	パス文字列pのディレクトリ名とファイル名
os.path.join('dir', 'subdir', 'filename.ext')	'dir'と'subdir'と'filename.ext'を連結したファイルパス
os.path.splitext(p)	パス文字列pのファイル名と拡張子
os.path.splitext(p)	パスpのファイル名と拡張子
os.path.get_size(p)	パスpのファイルのサイズ
os.path.get_size(p)	パスpのファイルの大きさ
os.path.get_size(p)	パス文字列pのファイルの大きさ
os.path.get_size(p)	パス文字列pのファイルのサイズ
import sys	sysモジュールをインポートする
import sys	sysモジュールをインポート直す
sys.exit()	プログラムを終了する
sys.exit()	処理を抜ける
sys.exit()	命令を終了する
import datetime	datetimeモジュールをインポートする
import datetime	datetimeモジュールをインポート直す
datetime.datetime.now()	現在の日時
datetime.datetime(year, month, day)	year年month月day日の日時
datetime.datetime(year, month, day, hour, minute)	year年month月day日hour時minute分の日時
datetime.datetime(year, month, day, hour, minute, second)	year年month月day日hour時minute分second秒の日時
re.search(r, s)	sにおいて正規表現rのパターンが最初にマッチする位置
re.search(r, s)	sにおいて正規表現rのパターンが先頭にマッチするインデックス
re.search(r, s)	sにおいて正規表現rのパターンが最初にマッチする場所
re.match(r, s)	sの先頭に正規表現rのパターンをマッチさせた結果
re.match(r, s)	正規表現rのパターンをsの先頭にマッチさせた結果
re.match(r, s)	正規表現rのパターンをsの最初にマッチさせた結果
re.match(r, s)	sの最初に正規表現rのパターンをマッチさせた結果
re.match(r, s)	正規表現rのパターンをsの左側にマッチさせた結果
re.match(r, s)	sの左側に正規表現rのパターンをマッチさせた結果
re.fullmatch(r, s)	s全体において正規表現rのパターンをマッチさせた結果
re.split(r, s)	sを正規表現rのパターンにマッチした部分で分割した文字列リスト
re.split(r, s)	sを正規表現rのパターンにマッチした箇所で分割した文字列リスト
re.sub(r, t, s)	s内の正規表現rのパターンにマッチした箇所をtに置き換えた文字列
re.sub(r, t, s)	s中の正規表現rのパターンにマッチした箇所をtに置き換えたデータ
re.sub(r, t, s)	sの中の正規表現rのパターンにマッチした箇所をtに置き換えた値
re.sub(r, t, s)	s中の正規表現rのパターンにマッチした箇所をtに置き換えた文字列
re.sub(r, t, s)	sの中の正規表現rのパターンにマッチした箇所をtに置き換えたデータ
re.sub(r, t, s)	s内の正規表現rのパターンにマッチした箇所をtに置き換えたデータ
re.sub(r, t, s)	sの中の正規表現rのパターンにマッチした箇所をtに置き換えた文字列
re.sub(r, t, s)	s中の正規表現rのパターンにマッチした箇所をtに置き換えた値
re.sub(r, t, s)	s内の正規表現rのパターンにマッチした箇所をtに置き換えた値
re.subn(r, t, s)	s内の正規表現rのパターンにマッチした箇所をtに置き換えた文字列と置き換えた箇所の数
re.subn(r, t, s)	s内の正規表現rのパターンにマッチした箇所をtに置き換えた値と置き換えた箇所の数
re.subn(r, t, s)	s中の正規表現rのパターンにマッチした箇所をtに置き換えた値と置換箇所数
re.subn(r, t, s)	s中の正規表現rのパターンにマッチした箇所をtに置き換えた文字列と置換箇所数
re.subn(r, t, s)	sの中の正規表現rのパターンにマッチした箇所をtに置き換えたデータと置き換え箇所の個数
re.subn(r, t, s)	sの中の正規表現rのパターンにマッチした箇所をtに置き換えた文字列と置き換え箇所の個数
re.subn(r, t, s)	sの中の正規表現rのパターンにマッチした箇所をtに置き換えた値と置き換え箇所の個数
re.subn(r, t, s)	s内の正規表現rのパターンにマッチした箇所をtに置き換えたデータと置き換えた箇所の数
re.subn(r, t, s)	s中の正規表現rのパターンにマッチした箇所をtに置き換えたデータと置換箇所数
re.findall(r, s)	sが正規表現rのパターンにマッチした文字列のリスト
re.findall(r, s)	正規表現rのパターンにsがマッチした文字列のリスト
re.findall(r, s)	sが正規表現rのパターンにマッチした値のリスト
re.findall(r, s)	正規表現rのパターンにsがマッチした値のリスト
re.findall(r, s)	正規表現rのパターンにsがマッチしたデータのリスト
re.findall(r, s)	sが正規表現rのパターンにマッチしたデータのリスト
re.compile(r)	rを正規表現にコンパイルした結果
re.compile(r)	正規表現にrをコンパイルした結果
print('Hello World')	'Hello World'とプリントする
print('Hello World')	'Hello World'と出力する
print('Hello World')	'Hello World'と表示する
print('Hello World')	「ハローワールド」とプリントする
print('Hello World')	「こんにちは世界」と表示する
print('Hello World')	「こんにちは世界」と出力する
print('Hello World')	「こんにちは世界」とプリントする
print('Hello World')	「ハローワールド」と出力する
print('Hello World')	「ハローワールド」と表示する
print('Hello World')	試しに何か動かす
print('Hello World')	何か動かす
print('Hello World')	最初のプログラム
print('Hello World')	先頭の処理
print('Hello World')	最初の命令
print('Hello World')	最初の処理
print('Hello World')	先頭のプログラム
3+8	3足す8
3+8	3たす8
3+8	3に8を加算する
3+8	8を3に加算する
3+8	3と8の和
1+2+3	1足す2足す3
1+2+3	1たす2たす3
1+2+3	1,2,3の和
100-70	100から70を引く
100-70	100から70をひく
5 * 12	5かける12
5 * 12	5掛ける12
10 / 5	10を5で割る
10 / 5	10を5でわる
10 // 5	10を5で割った商
10 // 5	10を5でわった商
10 % 5	10を5で割った余り
10 % 5	10を5でわったあまり
10 ** 5	10の5乗
'abc' + 'ABC'	文字列'abc'と'ABC'を繋ぐ
'abc' + 'ABC'	データ'abc'と'ABC'を結合する
'abc' + 'ABC'	文字列'abc'と'ABC'を結合する
'abc' + 'ABC'	値'abc'と'ABC'を繋ぐ
'abc' + 'ABC'	データ'abc'と'ABC'を繋ぐ
'abc' + 'ABC'	値'abc'と'ABC'を結合する
'abc' + 'ABC'	文字列'abc'と'ABC'を連結する
'abc' + 'ABC'	値'abc'と'ABC'を連結する
'abc' + 'ABC'	データ'abc'と'ABC'を連結する
'abc' + 'ABC'	'abc'と'ABC'を連結する
'abc' + 'ABC'	'abc'と'ABC'を繋ぐ
'abc' + 'ABC'	'abc'と'ABC'を結合する
str(1)	1を文字列に変換する
str(1)	1をデータに変換する
str(1)	データに1を直す
str(1)	文字列に1を直す
str(1)	1を値にする
str(1)	1を値に置き換える
str(1)	1をデータに直す
str(1)	値に1を置き換える
str(1)	値に1を変換する
str(1)	1を値に変換する
str(1)	値に1をする
str(1)	1を文字列に置き換える
str(1)	文字列に1を変換する
str(1)	1を文字列に直す
str(1)	文字列に1を置き換える
str(1)	データに1を変換する
str(1)	1を文字列にする
str(1)	1を値にする
str(1)	値に1をする
str(1)	1をデータに直す
str(1)	文字列に1をする
str(1)	データに1を直す
str(1)	1を変換した文字列
str(1)	1を変換した値
str(1)	1をしたデータ
str(1)	1をした値
'X' * 3	文字列'X'を3回繰り返す
'X' * 3	データ'X'を3回繰り返す
'X' * 3	値'X'を3回繰り返す
'X' * 3	文字列'X'を3回繰り返す
'X' * 3	データ'X'を3回繰り返す
'X' * 3	値'X'を3回繰り返す
x = input()	ユーザから入力を得る
x = input()	ユーザが入力した文字列をxとする
x = input()	ユーザが入力した値をxとする
x = input()	ユーザが入力したデータをxと直す
x = input()	ユーザから入力された文字列
x = input()	ユーザから入力されたデータ
x = input()	入力されたデータ
x = input()	入力された文字列
x = input()	ユーザから入力された値
x = input()	入力された値
x = input('X')	'X'というプロンプトを表示しユーザに文字列を入力させる
x = input('X')	表示しユーザに値を'X'というプロンプトを入力させる
x = input('X')	値を'X'というプロンプトを表示しユーザに入力させる
x = input('X')	表示しユーザにデータを'X'というプロンプトを入力させる
x = input('X')	'X'というプロンプトを値を表示しユーザに入力させる
x = input('X')	'X'というプロンプトを表示しユーザにデータを入力させる
x = input('X')	データを'X'というプロンプトを表示しユーザに入力させる
x = input('X')	'X'というプロンプトをデータを表示しユーザに入力させる
x = input('X')	'X'というプロンプトを表示しユーザに値を入力させる
x = input('X')	'X'というプロンプトを文字列を表示しユーザに入力させる
x = input('X')	表示しユーザに'X'というプロンプトを文字列を入力させる
x = input('X')	文字列を'X'というプロンプトを表示しユーザに入力させる
x = input('X')	表示しユーザに'X'というプロンプトをデータを入力させる
x = input('X')	データを表示しユーザに'X'というプロンプトを入力させる
x = input('X')	文字列を表示しユーザに'X'というプロンプトを入力させる
x = input('X')	値を表示しユーザに'X'というプロンプトを入力させる
x = input('X')	表示しユーザに'X'というプロンプトを値を入力させる
x = input('X')	表示しユーザに文字列を'X'というプロンプトを入力させる
x = input('X')	'X'という問い合わせに対しユーザから/入力を得る
float(x)	xを浮動小数点数に変換する
float(x)	xを浮動小数点数に置き換える
float(x)	浮動小数点数にxを直す
float(x)	浮動小数点数にxを変換する
float(x)	xを浮動小数点数に直す
float(x)	浮動小数点数にxをする
float(x)	xを浮動小数点数にする
float(x)	浮動小数点数にxを置き換える
float(x)	xを浮動小数点数にする
float(x)	浮動小数点数にxをする
float(x)	xを浮動小数点数に直す
float(x)	浮動小数点数にxを直す
float(x)	xを変換した浮動小数点数
float(x)	xをした浮動小数点数
int(x)	xを整数に変換する
int(x)	数字にxを直す
int(x)	整数にxを置き換える
int(x)	xを整数に置き換える
int(x)	整数にxを変換する
int(x)	数字にxをする
int(x)	xを数字に直す
int(x)	整数にxを直す
int(x)	xを整数に直す
int(x)	xを整数にする
int(x)	xを数字に変換する
int(x)	整数にxをする
int(x)	数字にxを変換する
int(x)	xを数字にする
int(x)	xを整数にする
int(x)	整数にxをする
int(x)	xを数字に直す
int(x)	数字にxをする
int(x)	xを数字にする
int(x)	数字にxを直す
int(x)	xを変換した整数
int(x)	xをした数字
x = int(input())	ユーザが入力した整数をxとする
x = int(input())	ユーザが入力した数字をxと直す
x = int(input())	入力された整数をxとする
x = int(input())	ユーザが入力した数字をxとする
x = int(input())	入力された数字をxとする
x = int(input())	入力された数字をxと直す
x = int(input())	入力された整数
x = int(input())	入力された数字
x = float(input())	ユーザが入力した浮動小数点数をxとする
x = float(input())	ユーザが入力した浮動小数点数をxと直す
x = float(input())	入力された浮動小数点数
type(x)	xのクラス
type(x)	xの型
type(x)	xの型を調べる
type(x)	xのクラスをチェックする
a == b	aとbが等しいかどうか
if a == b :	もしaとbが等しいならば
if a != b :	aとbが等しくないならば
while a == b :	aとbが等しい間
a == b	aがbと等しいかどうか
a == b	bと等しいかどうaがか
if a == b :	もしaがbと等しいならば
if a == b :	もしbと等しいかどうaがなら
if a != b :	aがbと等しくないとき
if a != b :	bと等しいかどうaがでないとき
while a == b :	aがbと等しい間
while a == b :	bと等しいかどうaがの間
a == b	aがbかどうか
a == b	bかどうaがか
if a == b :	aがbなら
if a == b :	もしbかどうaがなら
if a != b :	aがbでないならば
if a != b :	もしbかどうaがでないとき
while a == b :	aがbの間
while a == b :	bかどうaがの間
a > b	aがbより大きいかどうか
a > b	bより大きいかどうaがか
if a > b :	aがbより大きいなら
if a > b :	もしbより大きいかどうaがならば
if not a > b :	もしaがbより大きくない場合
if not a > b :	bより大きいかどうaがでないならば
while a > b :	aがbより大きい間
while a > b :	bより大きいかどうaがの間
a < b	aがbより小さいかどうか
a < b	bより小さいかどうaがか
a < b	小さいかどうbよりaがか
a < b	aが小さいかどうbよりか
a < b	bよりaが小さいかどうか
a < b	小さいかどうaがbよりか
if a < b :	もしaがbより小さいとき
if a < b :	小さいかどうaがbよりならば
if a < b :	もしaが小さいかどうbよりのとき
if a < b :	bよりaが小さいなら
if a < b :	もし小さいかどうbよりaがの場合
if a < b :	もしbより小さいかどうaがの場合
if not a < b :	もしaがbより小さくないとき
if not a < b :	もし小さいかどうaがbよりでないならば
if not a < b :	もしaが小さいかどうbよりでないなら
if not a < b :	もしbよりaが小さくない場合
if not a < b :	もし小さいかどうbよりaがでないならば
if not a < b :	もしbより小さいかどうaがでないなら
while a < b :	aがbより小さい間
while a < b :	bよりaが小さい間
while a < b :	小さいかどうaがbよりの間
while a < b :	bより小さいかどうaがの間
while a < b :	小さいかどうbよりaがの間
while a < b :	aが小さいかどうbよりの間
a >= b	aがb以上かどうか
a >= b	b以上かどうaがか
if a >= b :	もしaがb以上なら
if a >= b :	もしb以上かどうaがならば
if not a >= b :	もしaがb以上でないとき
if not a >= b :	もしb以上かどうaがでないとき
while a >= b :	aがb以上の間
while a >= b :	b以上かどうaがの間
a <= b	aがb以下かどうか
a <= b	b以下かどうaがか
if a <= b :	もしaがb以下の場合
if a <= b :	もしb以下かどうaがの場合
if not a <= b :	aがb以下でないならば
if not a <= b :	もしb以下かどうaがでないならば
while a <= b :	aがb以下の間
while a <= b :	b以下かどうaがの間
a % 2 == 0	aが偶数かどうか
a % 2 == 0	偶数かどうaがか
if a % 2 == 0 :	もしaが偶数ならば
if a % 2 == 0 :	もし偶数かどうaがのとき
if a % 2 != 0 :	aが偶数でないならば
if a % 2 != 0 :	偶数かどうaがでないなら
while a % 2 == 0 :	aが偶数の間
while a % 2 == 0 :	偶数かどうaがの間
a % 2 == 1	aが奇数かどうか
a % 2 == 1	奇数かどうaがか
if a % 2 == 1 :	aが奇数ならば
if a % 2 == 1 :	奇数かどうaがならば
if a % 2 != 1 :	もしaが奇数でないならば
if a % 2 != 1 :	奇数かどうaがでないなら
while a % 2 == 1 :	aが奇数の間
while a % 2 == 1 :	奇数かどうaがの間
a % n == 0	aがnの倍数かどうか
a % n == 0	nの倍数かどうaがか
if a % n == 0 :	aがnの倍数ならば
if a % n == 0 :	もしnの倍数かどうaがならば
if a % n != 0 :	もしaがnの倍数でない場合
if a % n != 0 :	nの倍数かどうaがでないとき
while a % n == 0 :	aがnの倍数の間
while a % n == 0 :	nの倍数かどうaがの間
a % n == 0	aがnで割り切れるかどうか
a % n == 0	nで割り切れるかどうaがか
if a % n == 0 :	もしaがnで割り切れるならば
if a % n == 0 :	もしnで割り切れるかどうaがなら
if a % n != 0 :	aがnで割り切れるでないなら
if a % n != 0 :	もしnで割り切れるかどうaがでないなら
while a % n == 0 :	aがnで割り切れるの間
while a % n == 0 :	nで割り切れるかどうaがの間
pass	何もしない
pass	パスする
quit()	プログラムの実行を途中で終了する
quit()	命令の実行を終了する
quit()	プログラムの実行を終了する
quit()	命令の実行を途中で終了する
quit()	処理の実行を途中で抜ける
quit()	処理の実行を抜ける
quit()	プログラムの実行を中断する
quit()	処理の実行を中断する
quit()	命令の実行を中断する
True	真
False	偽
if age < 6 or age >= 60:	もしageが6未満または60以上のとき
if age < 6 or age >= 60:	ageが6未満もしくは60以上のとき
if age < 6 or age >= 60:	ageが6未満もしくは60以上の時
if age < 6 or age >= 60:	もしageが6未満または60以上の時
if age < 6 or age >= 60:	もし6才未満または60才以上のとき
if age < 6 or age >= 60:	もし6才未満または60才以上の時
if age < 6 and age >= 60:	もしageが6未満かつ60以上のとき
if age < 6 and age >= 60:	ageがもし6未満かつ60以上の時
if age < 6 and age >= 60:	もしageが6未満かつ60以上の時
if age < 6 and age >= 60:	ageがもし6未満かつ60以上のとき
weight / (height / 100) ** 2	BMIを求めたい
weight / (height / 100) ** 2	BMIを求めたいを計算する
weight / (height / 100) ** 2	weightとheightからBMI
weight / (height / 100) ** 2	体重weightと身長heightからBMI
weight / (height / 100) ** 2	weight体重とheight身長からBMI
weight / (height / 100) ** 2	weightとheightからBMIを算出する
weight / (height / 100) ** 2	weight体重とheight身長からBMIを計算する
weight / (height / 100) ** 2	体重weightと身長heightからBMIを算出する
weight / (height / 100) ** 2	heightとweightからBMI
weight / (height / 100) ** 2	身長heightと体重weightからBMI
weight / (height / 100) ** 2	height身長とweight体重からBMI
weight / (height / 100) ** 2	heightとweightからBMIを求める
weight / (height / 100) ** 2	height身長とweight体重からBMIを求める
weight / (height / 100) ** 2	身長heightと体重weightからBMIを計算する
random.randint(1,6)	サイコロの目
random.randint(1,6)	サイコロの出目
random.randint(1,6)	サイコロを振った目
random.randint(1,6)	サイコロを振った値
random.randint(1,6)	サイコロを振った出目
random.randint(1,6)	サイコロを振ったデータ
random.randint(1,6)	1から6までの乱数
time.sleep(3)	3秒間、プログラムの実行を停止する
time.sleep(3)	3秒、プログラムの実行を停止する
time.sleep(3)	3秒、処理の実行を停止する
time.sleep(3)	3秒、命令の実行を停止する
time.sleep(3)	3秒間、命令の実行を停止する
time.sleep(3)	3秒間、処理の実行を停止する
time.sleep(3)	3秒、待つ
time.sleep(3)	3秒間、待つ
time.sleep(3)	3秒、止める
time.sleep(3)	3秒間、止める
while True: pass	無限ループ
while True: pass	とりあえず繰り返す
for i in range(5):	５回繰り返す
break	繰り返しを中断する
break	繰り返しから強制的に抜け出す
break	繰り返しから終了する
break	繰り返しから強制的に終了する
break	繰り返しから抜ける
break	繰り返しから抜け出す
break	繰り返しから強制的に抜ける
continue	繰り返しの先頭に戻る
continue	繰り返しの最初に戻る
continue	繰り返しの左側に戻る
continue	もう一回、繰り返す
continue	もう一度、繰り返す
[0] * n	大きさnの配列
for a in [1,2,3]:	リスト[1,2,3]の各要素を処理する
for a in [1,2,3]:	リスト[1,2,3]の要素を繰り返すたびにaに代入する
for a in [1,2,3]:	リスト[1,2,3]の値をaに繰り返すたびに代入
for a in [1,2,3]:	aに繰り返すたびにリスト[1,2,3]の要素を入れる
for a in [1,2,3]:	繰り返すたびにaにリスト[1,2,3]の値を代入
for a in [1,2,3]:	リスト[1,2,3]の要素を繰り返すたびにaに入れる
for a in [1,2,3]:	リスト[1,2,3]の値をaに繰り返すたびに入れる
for a in [1,2,3]:	リスト[1,2,3]の値を繰り返すたびにaに代入
for a in [1,2,3]:	繰り返すたびにリスト[1,2,3]の値をaに代入
for a in [1,2,3]:	aにリスト[1,2,3]の値を繰り返すたびに入れる
for a in [1,2,3]:	繰り返すたびにリスト[1,2,3]の値をaに代入する
for a in [1,2,3]:	aにリスト[1,2,3]の値を繰り返すたびに代入
for a in [1,2,3]:	繰り返すたびにaにリスト[1,2,3]の値を入れる
for a in [1,2,3]:	繰り返すたびにリスト[1,2,3]の要素をaに入れる
for a in [1,2,3]:	aにリスト[1,2,3]の要素を繰り返すたびに代入
for a in [1,2,3]:	繰り返すたびにaにリスト[1,2,3]の要素を入れる
for a in [1,2,3]:	繰り返すたびにリスト[1,2,3]の要素をaに代入する
for a in [1,2,3]:	リスト[1,2,3]の値を繰り返すたびにaに代入する
for a in [1,2,3]:	繰り返すたびにaにリスト[1,2,3]の要素を代入
for a in [1,2,3]:	繰り返すたびにaにリスト[1,2,3]の要素を代入する
for a in [1,2,3]:	繰り返すたびにリスト[1,2,3]の要素をaに代入
for a in [1,2,3]:	aに繰り返すたびにリスト[1,2,3]の値を代入する
for a in [1,2,3]:	aに繰り返すたびにリスト[1,2,3]の値を代入
for a in [1,2,3]:	aにリスト[1,2,3]の要素を繰り返すたびに代入する
for a in [1,2,3]:	aに繰り返すたびにリスト[1,2,3]の要素を代入
for a in [1,2,3]:	リスト[1,2,3]の要素をaに繰り返すたびに代入する
for a in [1,2,3]:	リスト[1,2,3]の値を繰り返すたびにaに入れる
for a in [1,2,3]:	aにリスト[1,2,3]の値を繰り返すたびに代入する
for a in [1,2,3]:	繰り返すたびにaにリスト[1,2,3]の値を代入する
for a in [1,2,3]:	リスト[1,2,3]の要素を繰り返すたびにaに代入
for a in [1,2,3]:	aに繰り返すたびにリスト[1,2,3]の要素を代入する
for a in [1,2,3]:	リスト[1,2,3]の値をaに繰り返すたびに代入する
for a in [1,2,3]:	繰り返すたびにリスト[1,2,3]の値をaに入れる
for a in [1,2,3]:	リスト[1,2,3]の要素をaに繰り返すたびに代入
for a in [1,2,3]:	aに繰り返すたびにリスト[1,2,3]の値を入れる
for a in [1,2,3]:	aにリスト[1,2,3]の要素を繰り返すたびに入れる
for a in [1,2,3]:	リスト[1,2,3]の要素をaに繰り返すたびに入れる
a.append(x)	aの末尾にxを追加する
a.append(x)	aの最後にxを付加する
a.append(x)	aリストの末尾にxを追加する
a.append(x)	aリストの末尾にxを付加する
a.append(x)	aの終わりにxを追加する
a.append(x)	aリストの末尾にxを加える
a.append(x)	aの末尾にxを入れる
a.append(x)	xをaリストの最後に入れる
a.append(x)	aの最後にxを追加する
a.append(x)	xをリストaの末尾に追加する
a.append(x)	aの最後にxを入れる
a.append(x)	xをリストaの最後に追加する
a.append(x)	リストaの末尾にxを入れる
a.append(x)	xをaの最後に追加する
a.append(x)	xをリストaの最後に入れる
a.append(x)	リストaの後ろにxを加える
a.append(x)	xをaの最後に入れる
a.append(x)	aの末尾にxを付加する
a.append(x)	xをaの最後に加える
a.append(x)	aの終わりにxを加える
a.append(x)	aリストの最後にxを付加する
a.append(x)	リストaの最後にxを入れる
a.append(x)	xをリストaの後ろに加える
a.append(x)	xをaリストの最後に付加する
a.append(x)	aリストの最後にxを入れる
a.append(x)	リストaの末尾にxを追加する
a.append(x)	xをaリストの最後に追加する
a.append(x)	xをaリストの末尾に入れる
a.append(x)	リストaの末尾にxを付加する
a.append(x)	xをリストaの最後に加える
a.append(x)	xをaの末尾に付加する
a.append(x)	aリストの終わりにxを追加する
a.append(x)	aリストの最後にxを加える
a.append(x)	aの末尾にxを加える
a.append(x)	xをaリストの末尾に付加する
a.append(x)	リストaの末尾にxを加える
a.append(x)	aリストの最後にxを追加する
a.append(x)	xをリストaの末尾に加える
a.append(x)	xをリストaの最後に付加する
a.append(x)	xをaの末尾に入れる
a.append(x)	xをリストaの末尾に入れる
a.append(x)	xをaの最後に付加する
a.append(x)	aの最後にxを加える
a.append(x)	aリストの末尾にxを入れる
a.append(x)	リストaの最後にxを付加する
a.append(x)	xをリストaの終わりに追加する
a.append(x)	リストaの最後にxを追加する
a.append(x)	xをaの末尾に追加する
a.append(x)	xをaリストの末尾に追加する
a.append(x)	xをaの後ろに加える
a.append(x)	xをaリストの末尾に加える
a.append(x)	xをリストaの末尾に付加する
a.append(x)	リストaの終わりにxを追加する
a.append(x)	aの後ろにxを加える
a.append(x)	xをaの終わりに加える
a.append(x)	aリストの後ろにxを加える
a.append(x)	xをaリストの後ろに加える
a.append(x)	aリストの終わりにxを加える
del(a[2])	aから2番目の値を削除する
del(a[2])	aリストから2番目の値を削除する
del(a[2])	リストaから2番目の値を削除する
del(a[2])	aリストから2番目の要素を削除する
del(a[2])	リストaから2番目のデータを削除する
del(a[2])	リストaから2番目の要素を削除する
del(a[2])	aから2番目の要素を削除する
del(a[2])	aから2番目のデータを削除する
del(a[2])	aリストから2番目のデータを削除する
a[start:end]	aの一部分を取り出す
a[start:end]	aリストの一部分を得る
a[start:end]	リストaの一部分を得る
a[start:end]	aの一部分を得る
a[start:end]	リストaの一部分を取り出す
a[start:end]	リストaの一部分を抜き出す
a[start:end]	aの一部分を抜き出す
a[start:end]	aリストの一部分を抜き出す
a[start:end]	aリストの一部分を取り出す
sum(a)	aの合計値
sum(a)	aの合計
sum(a)	aリストの合計
sum(a)	aリストの合計値
sum(a)	リストaの合計
sum(a)	リストaの合計値
sum(a)	リストaの合計データ
sum(a)	aリストの合計データ
sum(a)	aの合計データ
sum(a)	aの総和
sum(a)	リストaの総和
sum(a)	aリストの総和
sum(a)/len(a)	aの平均値
sum(a)/len(a)	リストaの平均
sum(a)/len(a)	aの平均
sum(a)/len(a)	リストaの平均値
sum(a)/len(a)	aリストの平均
sum(a)/len(a)	aリストの平均値
sum(a)/len(a)	aリストの平均データ
sum(a)/len(a)	リストaの平均データ
random.suffle(a)	aをシャッフルする
random.suffle(a)	リストaをシャッフルする
random.suffle(a)	aリストをシャッフル直す
random.suffle(a)	aをシャッフル直す
random.suffle(a)	リストaをシャッフル直す
random.suffle(a)	aリストをシャッフルする
d.keys()	dのキーの一覧を得る
d.keys()	d辞書のキーの一覧を得る
d.keys()	辞書dのキーの一覧を得る
d.keys()	dのキーの一覧
d.keys()	d辞書のキーの一覧
d.keys()	辞書dのキーの一覧
d[key]	dのキーkeyのデータを参照する
d[key]	辞書dのキーkeyのデータを参照する
d[key]	d辞書のキーkeyの値を参照する
d[key]	dのキーkeyの値を参照する
d[key]	辞書dのキーkeyの値を参照する
d[key]	d辞書のキーkeyのデータを参照する
d[key]	dのキーkeyのを参照する
d[key]	d辞書のキーkeyのを参照する
d[key]	辞書dのキーkeyのを参照する
d[key]	dのキーkeyの値
d[key]	d辞書のキーkeyの値
d[key]	辞書dのキーkeyの値
d[key]	d辞書のキーkeyの
d[key]	辞書dのキーkeyのデータ
d[key]	d辞書のキーkeyのデータ
d[key]	辞書dのキーkeyの
d[key]	dのキーkeyの
d[key]	dのキーkeyのデータ
for key in d.keys(): value = d[key]	dに入っているデータを一つずつ処理する
for key in d.keys(): value = d[key]	入っている値をdに処理する
for key in d.keys(): value = d[key]	d辞書に入っている値を一つずつ処理する
for key in d.keys(): value = d[key]	入っている値をd辞書に一つずつ処理する
for key in d.keys(): value = d[key]	入っている値を辞書dに処理する
for key in d.keys(): value = d[key]	dに入っている値を処理する
for key in d.keys(): value = d[key]	辞書dに入っているデータを一つずつ処理する
for key in d.keys(): value = d[key]	入っているデータをdに一つずつ処理する
for key in d.keys(): value = d[key]	d辞書に入っている値を処理する
for key in d.keys(): value = d[key]	辞書dに入っている値を処理する
for key in d.keys(): value = d[key]	入っているデータをd辞書に処理する
for key in d.keys(): value = d[key]	入っているをd辞書に処理する
for key in d.keys(): value = d[key]	辞書dに入っている値を一つずつ処理する
for key in d.keys(): value = d[key]	d辞書に入っているを処理する
for key in d.keys(): value = d[key]	入っているデータを辞書dに一つずつ処理する
for key in d.keys(): value = d[key]	入っている値をdに一つずつ処理する
for key in d.keys(): value = d[key]	入っている値をd辞書に処理する
for key in d.keys(): value = d[key]	d辞書に入っているデータを一つずつ処理する
for key in d.keys(): value = d[key]	dに入っている値を一つずつ処理する
for key in d.keys(): value = d[key]	入っている値を辞書dに一つずつ処理する
for key in d.keys(): value = d[key]	入っているをdに処理する
for key in d.keys(): value = d[key]	入っているを辞書dに処理する
for key in d.keys(): value = d[key]	入っているデータをd辞書に一つずつ処理する
for key in d.keys(): value = d[key]	辞書dに入っているデータを処理する
for key in d.keys(): value = d[key]	入っているデータを辞書dに処理する
for key in d.keys(): value = d[key]	dに入っているを処理する
for key in d.keys(): value = d[key]	辞書dに入っているを処理する
math.ceil(x)	実数xの小数点以下を切り上げる
math.ceil(x)	実数xのを切り上げる
math.ceil(x)	xの小数点以下を切り上げた整数
math.ceil(x)	xのを切り上げた数字
key in d	dにkeyがあるかどうか
key in d	d辞書にkeyキーが含まれているかどうか
key in d	あるかどうd辞書にkeyキーがか
key in d	キーkeyが辞書dにあるかどうか
key in d	keyがあるかどうdにか
key in d	辞書dにキーkeyがあるかどうか
key in d	d辞書にあるかどうkeyキーがか
key in d	あるかどうkeyキーがd辞書にか
key in d	dにkeyが含まれているかどうか
key in d	d辞書に含まれているかどうkeyキーがか
key in d	あるかどうdにkeyがか
key in d	keyがdに含まれているかどうか
key in d	含まれているかどうkeyがdにか
key in d	辞書dにキーkeyが存在するかどうか
key in d	含まれているかどうd辞書にkeyキーがか
key in d	dに存在するかどうkeyがか
key in d	含まれているかどうキーkeyが辞書dにか
key in d	keyキーがd辞書にあるかどうか
key in d	キーkeyがあるかどう辞書dにか
key in d	辞書dにキーkeyが含まれているかどうか
key in d	keyキーがあるかどうd辞書にか
key in d	keyキーがd辞書に含まれているかどうか
key in d	キーkeyが辞書dに存在するかどうか
key in d	辞書dに含まれているかどうキーkeyがか
key in d	dにkeyが存在するかどうか
key in d	あるかどう辞書dにキーkeyがか
key in d	keyが含まれているかどうdにか
key in d	あるかどうキーkeyが辞書dにか
key in d	keyがdにあるかどうか
key in d	含まれているかどうdにkeyがか
key in d	辞書dにあるかどうキーkeyがか
key in d	dに含まれているかどうkeyがか
key in d	dにあるかどうkeyがか
key in d	keyが存在するかどうdにか
key in d	キーkeyが辞書dに含まれているかどうか
key in d	keyキーが含まれているかどうd辞書にか
key in d	存在するかどうkeyキーがd辞書にか
key in d	キーkeyが存在するかどう辞書dにか
key in d	keyキーがd辞書に存在するかどうか
key in d	キーkeyが含まれているかどう辞書dにか
key in d	存在するかどうdにkeyがか
key in d	d辞書にkeyキーがあるかどうか
key in d	含まれているかどうkeyキーがd辞書にか
key in d	存在するかどうd辞書にkeyキーがか
key in d	存在するかどうキーkeyが辞書dにか
key in d	あるかどうkeyがdにか
key in d	d辞書に存在するかどうkeyキーがか
key not in date	dにキーkeyが含まれていないかどうか
key not in date	辞書dにキーkeyがないかどうか
key not in date	d辞書にキーkeyがないかどうか
key not in date	キーkeyが含まれていないかどう辞書dにか
key not in date	含まれていないかどうキーkeyが辞書dにか
key not in date	ないかどうdにキーkeyがか
key not in date	辞書dに存在しないかどうキーkeyがか
key not in date	キーkeyがないかどう辞書dにか
key not in date	含まれていないかどう辞書dにキーkeyがか
key not in date	d辞書にないかどうキーkeyがか
key not in date	辞書dに含まれていないかどうキーkeyがか
key not in date	ないかどうキーkeyが辞書dにか
key not in date	辞書dにないかどうキーkeyがか
key not in date	辞書dにキーkeyが含まれていないかどうか
key not in date	含まれていないかどうd辞書にキーkeyがか
key not in date	ないかどうd辞書にキーkeyがか
key not in date	d辞書に含まれていないかどうキーkeyがか
key not in date	キーkeyがないかどうd辞書にか
key not in date	dにキーkeyがないかどうか
key not in date	キーkeyがdに含まれていないかどうか
key not in date	キーkeyがd辞書に存在しないかどうか
key not in date	キーkeyが含まれていないかどうdにか
key not in date	存在しないかどうキーkeyがd辞書にか
key not in date	含まれていないかどうキーkeyがdにか
key not in date	キーkeyがd辞書にないかどうか
key not in date	dにないかどうキーkeyがか
key not in date	キーkeyが存在しないかどうd辞書にか
key not in date	d辞書にキーkeyが存在しないかどうか
key not in date	辞書dにキーkeyが存在しないかどうか
key not in date	dにキーkeyが存在しないかどうか
key not in date	キーkeyがd辞書に含まれていないかどうか
key not in date	キーkeyがdにないかどうか
key not in date	キーkeyが辞書dにないかどうか
key not in date	dに含まれていないかどうキーkeyがか
key not in date	含まれていないかどうdにキーkeyがか
key not in date	ないかどうキーkeyがd辞書にか
key not in date	キーkeyが含まれていないかどうd辞書にか
key not in date	存在しないかどうキーkeyがdにか
key not in date	d辞書にキーkeyが含まれていないかどうか
key not in date	存在しないかどう辞書dにキーkeyがか
key not in date	ないかどう辞書dにキーkeyがか
key not in date	存在しないかどうキーkeyが辞書dにか
key not in date	含まれていないかどうキーkeyがd辞書にか
key not in date	キーkeyが存在しないかどう辞書dにか
key not in date	キーkeyがないかどうdにか
key not in date	キーkeyが辞書dに含まれていないかどうか
key not in date	ないかどうキーkeyがdにか
key not in date	キーkeyが辞書dに存在しないかどうか
key not in date	存在しないかどうdにキーkeyがか
s.strip()	sの前後の空白を除去する
s.strip()	sの前後のスペースを除去する
s.strip()	データsの前後の空白を消す
s.strip()	sの前後の空白を消す
s.strip()	sデータの前後の半角スペースを消去する
s.strip()	データsの前後のスペースを除去する
s.strip()	sデータの前後の空白を除去する
s.strip()	sデータの前後のスペースを取り除く
s.strip()	sデータの前後の空白を削除する
s.strip()	データsの前後の空白を取り除く
s.strip()	sデータの前後の空白を消す
s.strip()	sデータの前後の半角スペースを除去する
s.strip()	sデータの前後のスペースを消す
s.strip()	sの前後の空白を消去する
s.strip()	データsの前後の半角スペースを消す
s.strip()	データsの前後の半角スペースを消去する
s.strip()	sデータの前後のスペースを除去する
s.strip()	sの前後のスペースを消す
s.strip()	sデータの前後の半角スペースを削除する
s.strip()	sの前後の空白を削除する
s.strip()	sの前後の半角スペースを除去する
s.strip()	sの前後の半角スペースを消去する
s.strip()	データsの前後のスペースを消す
s.strip()	データsの前後のスペースを消去する
s.strip()	sの前後のスペースを取り除く
s.strip()	sデータの前後の空白を取り除く
s.strip()	sの前後の空白を取り除く
s.strip()	sの前後の半角スペースを消す
s.strip()	データsの前後のスペースを取り除く
s.strip()	データsの前後の半角スペースを削除する
s.strip()	sデータの前後の半角スペースを取り除く
s.strip()	データsの前後の空白を消去する
s.strip()	データsの前後の空白を除去する
s.strip()	データsの前後の半角スペースを除去する
s.strip()	sデータの前後の半角スペースを消す
s.strip()	sの前後のスペースを消去する
s.strip()	データsの前後の空白を削除する
s.strip()	sの前後の半角スペースを取り除く
s.strip()	sデータの前後のスペースを削除する
s.strip()	sの前後のスペースを削除する
s.strip()	sデータの前後の空白を消去する
s.strip()	データsの前後のスペースを削除する
s.strip()	sの前後の半角スペースを削除する
s.strip()	sデータの前後のスペースを消去する
s.strip()	sの余分な改行を除去する
s.strip()	sデータの余分な改行を除去する
s.strip()	sデータの改行を除去する
s.strip()	sデータの余分な改行を消す
s.strip()	データsの余分な改行を除去する
s.strip()	sの改行を消す
s.strip()	sデータの改行を消す
s.strip()	データsの改行を消す
s.strip()	sの余分な改行を消す
s.strip()	データsの余分な改行を消す
s.strip()	データsの改行を除去する
s.strip()	sの改行を除去する
s.split(',')	sを','で区切る
s.split(',')	sをカンマで区切る
s.split(',')	','でデータsを分割する
s.split(',')	sを','で分割する
s.split(',')	','でsデータを区切る
s.split(',')	','でsデータを分割する
s.split(',')	カンマでデータsを分割する
s.split(',')	sデータを','で分割する
s.split(',')	データsを','で区切る
s.split(',')	','でsを分割する
s.split(',')	データsを','で分割する
s.split(',')	','でデータsを区切る
s.split(',')	カンマでsデータを分割する
s.split(',')	データsをカンマで分割する
s.split(',')	カンマでデータsを区切る
s.split(',')	データsをカンマで区切る
s.split(',')	カンマでsを区切る
s.split(',')	sデータをカンマで分割する
s.split(',')	カンマでsを分割する
s.split(',')	sデータを','で区切る
s.split(',')	sデータをカンマで区切る
s.split(',')	','でsを区切る
s.split(',')	カンマでsデータを区切る
s.split(',')	sをカンマで分割する
s.split(',')	sをカンマで区切った文字列のリスト
s.split(',')	sデータを','で分割した値のリスト
s.split(',')	sを','で分割したデータのリスト
s.split(',')	データsをカンマで分割した文字列のリスト
s.split(',')	データsを','で分割したデータのリスト
s.split(',')	sデータをカンマで分割した文字列のリスト
s.split(',')	データsをカンマで分割した値のリスト
s.split(',')	データsを','で分割した値のリスト
s.split(',')	sデータを','で分割したデータのリスト
s.split(',')	sをカンマで分割した文字列のリスト
s.split(',')	データsをカンマで区切った値のリスト
s.split(',')	sをカンマで分割した値のリスト
s.split(',')	sデータを','で区切ったデータのリスト
s.split(',')	データsをカンマで区切った文字列のリスト
s.split(',')	sデータをカンマで区切った文字列のリスト
s.split(',')	データsを','で区切った値のリスト
s.split(',')	sを','で区切ったデータのリスト
s.split(',')	データsを','で区切ったデータのリスト
s.split(',')	sを','で分割した値のリスト
s.split(',')	sを','で区切った値のリスト
s.split(',')	sデータをカンマで分割した値のリスト
s.split(',')	sデータを','で区切った値のリスト
s.split(',')	sデータをカンマで区切った値のリスト
s.split(',')	sをカンマで区切った値のリスト
sorted(a)	aを昇順にソートする
sorted(a)	aを昇順に整列する
sorted(a)	aを昇順にソート直す
sorted(a)	aを小さい順に並べ変える
sorted(a)	aを昇順に並べる
sorted(a)	aを小さい順に並べ直す
sorted(a)	aを小さい順に並べる
sorted(a)	aを昇順にソートした列
sorted(a)	aを昇順に整列した列
sorted(a)	昇順にaを並べた列
sorted(a)	昇順にaを並べ替えた列
sorted(a)	昇順にaを整列した列
sorted(a)	昇順にaをソートした列
sorted(a)	aを昇順に並べた列
sorted(a)	aを昇順に並べ替えた列
sorted(a)	昇順にaを並べ直した列
sorted(a)	aを昇順に並べ直した列
sorted(a, reverse=True)	aを降順にソートする
sorted(a, reverse=True)	aを降順にソート直す
sorted(a, reverse=True)	aを大きい順にソートする
sorted(a, reverse=True)	aを逆順にソートする
sorted(a, reverse=True)	aを大きい順にソート直す
sorted(a, reverse=True)	aを逆順にソート直す
sorted(a, reverse=True)	aを降順にソートした列
sorted(a, reverse=True)	降順にaをソートした列
datetime.date.today()	プログラムを実行した日付
datetime.date.today()	処理を実行した日付
datetime.date.today()	命令を実行した日付
datetime.date.today()	今日の日付
datetime.date.today()	本日の日付
datetime.date.today().year	プログラムを実行した年
datetime.date.today().year	命令を実行した年
datetime.date.today().year	処理を実行した年
datetime.date.today().year	本日の年
datetime.date.today().year	今日の年
datetime.date.today().month	プログラムを実行した月
datetime.date.today().month	処理を実行した月
datetime.date.today().month	命令を実行した月
datetime.date.today().month	本日の月
datetime.date.today().month	今日の月
datetime.date.today().day	プログラムを実行した日
datetime.date.today().day	命令を実行した日
datetime.date.today().day	処理を実行した日
datetime.date.today().day	本日の日
datetime.date.today().day	今日の日
x.year	xの年
x.month	xの月
x.day	xの日
datetime.datetime.now()	命令を実行したエポックタイム
datetime.datetime.now()	処理を実行したエポックタイム
datetime.datetime.now()	命令を実行したエポック
datetime.datetime.now()	Pythonを実行したエポック
datetime.datetime.now()	プログラムを実行したエポック秒
datetime.datetime.now()	処理を実行したエポック秒
datetime.datetime.now()	命令を実行したエポック秒
datetime.datetime.now()	命令を実行したタイムスタンプ
datetime.datetime.now()	Pythonを実行したエポックタイム
datetime.datetime.now()	プログラムを実行したエポックタイム
datetime.datetime.now()	Pythonを実行したタイムスタンプ
datetime.datetime.now()	Pythonを実行したエポック秒
datetime.datetime.now()	本日のタイムスタンプ
datetime.datetime.now()	今日のエポック秒
datetime.datetime.now()	本日のエポック
datetime.datetime.now()	今日のエポックタイム
