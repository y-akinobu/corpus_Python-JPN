import <name1> as <name5>	<name1> を  <name5> としてインポートする
import <name1> as <name2>	<name1> を  <name2> としてインポートする
<name4> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv 'をカンマ区切りで読み込み、  <name4> とする
<name1> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv 'をカンマ区切りで読み込み、  <name1> とする
<name5> . head ( <val3> )	<name5> の上  <val3> 行を表示する
<name1> . head ( <val2> )	<name1> の上  <val2> 行を表示する
<name1> . head ( )	<name1> の上  5 行を表示する
<name2> . tail ( )	<name2> の下  5 行を表示する
<name1> . tail ( )	<name1> の下  5 行を表示する
<name4> . shape	<name4> の行数と列数を確認する
<name1> . shape	<name1> の行数と列数を確認する
<name4> . index	<name4> のインデックスを確認する
<name1> . index	<name1> のインデックスを確認する
<name2> . columns	<name2> のカラムを確認する
<name1> . columns	<name1> のカラムを確認する
<name5> . dtypes	<name5> のデータ型を確認する
<name1> . dtypes	<name1> のデータ型を確認する
<name5> [ [ <val2>   , <val4>   ] ] . head ( )	<name5> の  <val2>  列と  <val4>  列だけ上  5 行を表示する
<name1> [ [ <val2>   , <val3>   ] ] . head ( )	<name1> の  <val2>  列と  <val3>  列だけ上  5 行を表示する
<name5> [ <val6> : 106 ]	<name5> の  <val6> 行目から  105 行目を抽出する
<name1> [ <val2> : 106 ]	<name1> の  <val2> 行目から  105 行目を抽出する
<name3> . loc [ <val2> ]	<name3> のインデックスが  <val2> の行を抽出する
<name1> . loc [ <val2> ]	<name1> のインデックスが  <val2> の行を抽出する
<name1> . iloc [ [ <val2> , <val6> , <val3> ] , [ <val5> , <val6> ] ]	<name1> の  <val2> , <val6> , <val3> 行目と  <val5> , <val6> 列目を抽出する
<name1> . iloc [ [ <val2> , <val3> , <val4> ] , [ <val5> , <val3> ] ]	<name1> の  <val2> , <val3> , <val4> 行目と  <val5> , <val3> 列目を抽出する
<name2> [ <name2> [ <val1>   ] >   <val3> ]	<name2> の  <val1>  列が  <val3> より大きいものを抽出する
<name1> [ <name1> [ <val2>   ] >   <val3> ]	<name1> の  <val2>  列が  <val3> より大きいものを抽出する
<name2> [ <val4>   ] . unique ( )	<name2> の  <val4>  列に含まれるデータを確認する
<name1> [ <val2>   ] . unique ( )	<name1> の  <val2>  列に含まれるデータを確認する
<name4> . drop_duplicates ( )	重複している行を  <name4> から削除する
<name1> . drop_duplicates ( )	重複している行を  <name1> から削除する
<name3> . describe ( )	<name3> の統計情報を取得する
<name1> . describe ( )	<name1> の統計情報を取得する
<name4> . set_index ( 'datetime'   , inplace = True )	datetime '列を  <name4> のインデックスとする
<name1> . set_index ( 'datetime'   , inplace = True )	datetime '列を  <name1> のインデックスとする
<name6> . rename ( columns = {  <val3>   : <val4>  }  , inplace = True )	<name6> の  <val3>  列を  <val4>  列とする
<name1> . rename ( columns = {  <val2>   : <val3>  }  , inplace = True )	<name1> の  <val2>  列を  <val3>  列とする
<name2> . sort_values ( by = <val1>   , ascending = True ) . head ( )	<val1> 列が昇順になるよう  <name2> をソートし、上  5 行を表示する
<name1> . sort_values ( by = <val2>   , ascending = True ) . head ( )	<val2> 列が昇順になるよう  <name1> をソートし、上  5 行を表示する
<name3> . sort_values ( [ 'sales'   , <val1>   ] , ascending = False ) . head ( )	' sales' 列と <val1> 列が降順になるよう  <name3> をソートし、上  5 行を表示する
<name1> . sort_values ( [ 'sales'   , <val2>   ] , ascending = False ) . head ( )	' sales' 列と <val2> 列が降順になるよう  <name1> をソートし、上  5 行を表示する
<name4> . index = pd . to_datetime ( <name4> . index , format = '%Y-%m-%d'   )	<name4> のインデックスを  datetime 型に変換する
<name1> . index = pd . to_datetime ( <name1> . index , format = '%Y-%m-%d'   )	<name1> のインデックスを  datetime 型に変換する
<name1> . isnull ( ) . sum ( )	<name1> の欠損値の個数を列単位で確認する
<name5> [ <name5> . isnull ( ) . any ( axis = 1 ) ] . head ( )	<name5> の欠損値が含まれている行を抽出し、上  5 行を表示する
<name1> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . head ( )	<name1> の欠損値が含まれている行を抽出し、上  5 行を表示する
<name6> [ <name6> . isnull ( ) . any ( axis = 1 ) ] . shape	<name6> の欠損値が含まれている行を抽出し、その列数と行数を確認する
<name1> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . shape	<name1> の欠損値が含まれている行を抽出し、その列数と行数を確認する
<name6> . fillna ( value = {  'payday'   : <val4> }  , inplace = True )	<name6> の  'paypay'  列に含まれる欠損値を  <val4> に置き換える
<name1> . fillna ( value = {  'payday'   : <val2> }  , inplace = True )	<name1> の  'paypay'  列に含まれる欠損値を  <val2> に置き換える
<name6> . dropna ( subset = [ <val4>   ] , axis = 0 , inplace = True )	<name6> の  <val4>  列に欠損値がある行を削除する
<name1> . dropna ( subset = [ <val2>   ] , axis = 0 , inplace = True )	<name1> の  <val2>  列に欠損値がある行を削除する
<name3> [ 'precipitation'   ] = <name3> [ 'precipitation'   ] . str . replace ( <val4>   , 0 ) . astype ( float )	<name3> の  'percipitation'  列内の  <val4>  を  0.0 に置き換える
<name1> [ 'precipitation'   ] = <name1> [ 'precipitation'   ] . str . replace ( <val2>   , 0 ) . astype ( float )	<name1> の  'percipitation'  列内の  <val2>  を  0.0 に置き換える
pd . DataFrame ( <name5> [ <val1>   ] . mask ( <name5> [ <val1>   ] >   <val6> , <val4> ) ) . head ( )	<name5> の  <val1>  列が  <val6> より大きければ  <val4> に置換し、上  5 行を表示する
pd . DataFrame ( <name1> [ <val2>   ] . mask ( <name1> [ <val2>   ] >   <val3> , <val4> ) ) . head ( )	<name1> の  <val2>  列が  <val3> より大きければ  <val4> に置換し、上  5 行を表示する
<name4> . drop ( [ <val1>   ] , axis = 1 , inplace = True )	<name4> の  <val1>  列を削除する
<name1> . drop ( [ <val2>   ] , axis = 1 , inplace = True )	<name1> の  <val2>  列を削除する
<name3> [ 'weather'   ] . value_counts ( )	<name3> の  'wether'  列の値をカウントする
<name1> [ 'weather'   ] . value_counts ( )	<name1> の  'wether'  列の値をカウントする
<name1> . groupby ( [ <val5>   ] ) [ <val6>   ] . count ( )	<name1> の  <val5>  列ごとに  <val6>  列の値をカウントする
<name1> . groupby ( [ <val2>   ] ) [ <val3>   ] . count ( )	<name1> の  <val2>  列ごとに  <val3>  列の値をカウントする
<name2> . groupby ( [ <val5>   , <val4>   ] ) [ <val1>   ] . sum ( )	<name2> の  <val5>  列と  <val4>  列ごとに  <val1>  列の値の和を計算する
<name1> . groupby ( [ <val2>   , <val3>   ] ) [ <val4>   ] . sum ( )	<name1> の  <val2>  列と  <val3>  列ごとに  <val4>  列の値の和を計算する
<name6> . groupby ( [ <val5>   ] ) [ <val3>   ] . mean ( )	<name6> の  <val5>  列ごとに  <val3>  列の値の平均を計算する
<name1> . groupby ( [ <val2>   ] ) [ <val3>   ] . mean ( )	<name1> の  <val2>  列ごとに  <val3>  列の値の平均を計算する
<name6> [ <val2>   ] = <name6> [ <val3>   ] . diff ( periods = 1 )	<name6> の  <val3>  列内の前の行との差を計算し、  <val2>  列とする
<name1> [ <val2>   ] = <name1> [ <val3>   ] . diff ( periods = 1 )	<name1> の  <val3>  列内の前の行との差を計算し、  <val2>  列とする
<name6> [ [ <val3>   , <val1>   ] ] . head ( )	<name6> の  <val3>  列と  <val1>  列の上  5 行を表示する
<name1> [ [ <val2>   , <val3>   ] ] . head ( )	<name1> の  <val2>  列と  <val3>  列の上  5 行を表示する
<name4> [ <val1>   ] = <name4> [ <val5>   ] . rolling ( <name2> = <val3> ) . mean ( )	<name4> の  <val5>  列の移動平均を  <name2> サイズを  <val3> として計算し、  <val1>  列とする
<name1> [ <val2>   ] = <name1> [ <val3>   ] . rolling ( <name4> = <val5> ) . mean ( )	<name1> の  <val3>  列の移動平均を  <name4> サイズを  <val5> として計算し、  <val2>  列とする
<name4> . dropna ( subset = [ <val3>   , <val1>   , <val5>   ] , axis = 0 , inplace = True )	<name4> の  <val3>  列、  <val1>  列、  <val5>  列に欠損値がある行を削除する
<name1> . dropna ( subset = [ <val2>   , <val3>   , <val4>   ] , axis = 0 , inplace = True )	<name1> の  <val2>  列、  <val3>  列、  <val4>  列に欠損値がある行を削除する
import <name6> <name1> as <name2>	<name6> <name1> を  <name2> としてインポートする
import <name1> <name2> as <name3>	<name1> <name2> を  <name3> としてインポートする
<name3> [ <val4>   ] . plot ( )	<name3> の  <val4>  列の値を折れ線グラフとして表示する
<name1> [ <val2>   ] . plot ( )	<name1> の  <val2>  列の値を折れ線グラフとして表示する
<name4> . plot ( y = [ <val1>   , 'temperature_rolling_mean'   , <val6>   ] , figsize = ( <val5> , <val2> ) , alpha = <val3> )	<name4> の  <val1>  列、  'temperature_rolling'  列、  <val6>  列の値を、横  <val5> 縦  <val2> のサイズで透過率が  <val3> の折れ線グラフとして表示する
<name1> . plot ( y = [ <val2>   , 'temperature_rolling_mean'   , <val3>   ] , figsize = ( <val4> , <val5> ) , alpha = <val6> )	<name1> の  <val2>  列、  'temperature_rolling'  列、  <val3>  列の値を、横  <val4> 縦  <val5> のサイズで透過率が  <val6> の折れ線グラフとして表示する
plt . title ( <val2>   )	グラフのタイトルを  <val2>  とする
plt . title ( <val1>   )	グラフのタイトルを  <val1>  とする
<name2> . plot ( kind = 'hist'   , y = <val4>     , bins = 10 , figsize = ( <val3> , <val5> ) , alpha = <val6> )	<name2> の  <val4>  列の値を横  <val3> 縦  <val5> のサイズで透過率が  <val6> のヒストグラムとして表示する
<name1> . plot ( kind = 'hist'   , y = <val2>     , bins = 10 , figsize = ( <val3> , <val4> ) , alpha = <val5> )	<name1> の  <val2>  列の値を横  <val3> 縦  <val4> のサイズで透過率が  <val5> のヒストグラムとして表示する
<name1> . plot ( kind = 'scatter'   , x = <val4>   , y = <val6>   )	<name1> の  <val4>  列を  x 軸、  <val6>  列を  y 軸とした散布図を表示する
<name1> . plot ( kind = 'scatter'   , x = <val2>   , y = <val3>   )	<name1> の  <val2>  列を  x 軸、  <val3>  列を  y 軸とした散布図を表示する
<name5> [ [ <val3>   , <val2>   ] ] . corr ( )	<name5> の  <val3>  列と  <val2>  列の相関を求める
<name1> [ [ <val2>   , <val3>   ] ] . corr ( )	<name1> の  <val2>  列と  <val3>  列の相関を求める
pivot_monthly_df . plot ( kind = 'bar'   , alpha = 0.6 , figsize = ( 12 , 3 ) )	monthly_df のインデックスをリセットし、  'month'  列をインデックス、  'period'  列をカラム、  'sales'  列を値としたピボットテーブルを表示する
<name6> = pd . get_dummies ( <name5> , columns = [ <val2>   , <val1>   , <val3>   , <val4>   , <val6>   ] )	<name5> の  <val2>  列、  <val1>  列、  <val3>  列、  <val4>  列、  <val6>  列をダミー化したものを  <name6> とする
<name1> = pd . get_dummies ( <name2> , columns = [ <val3>   , <val4>   , <val5>   , <val6>   , <val1>   ] )	<name2> の  <val3>  列、  <val4>  列、  <val5>  列、  <val6>  列、  <val1>  列をダミー化したものを  <name1> とする
pd . set_option ( 'display.max_columns'   , <val2> )	<val2> 番目までの列を表示させる
pd . set_option ( 'display.max_columns'   , <val1> )	<val1> 番目までの列を表示させる
<name4> . to_csv ( <val2>   , encoding = 'utf-8'   )	<name4> を  <val2>  に  utf -8 で保存する
<name1> . to_csv ( <val2>   , encoding = 'utf-8'   )	<name1> を  <val2>  に  utf -8 で保存する
plt . plot ( <name6> , <name2> , label = <val4>   )	ラベルを  <val4>  とし、  <name6> , <name2> の値を折れ線グラフとして表示する
plt . plot ( <name1> , <name2> , label = <val3>   )	ラベルを  <val3>  とし、  <name1> , <name2> の値を折れ線グラフとして表示する
plt . legend ( )	凡例を表示する
plt . show ( )	プロットを表示する
plt . plot ( <name2> , <name6> , color = ( <val5> , <val5> , <val3> ) )	色を  RGB = ( <val5> , <val5> , <val3> ) とし、  <name2> , <name6> の値を折れ線グラフとして表示する
plt . plot ( <name1> , <name2> , color = ( <val3> , <val3> , <val4> ) )	色を  RGB = ( <val3> , <val3> , <val4> ) とし、  <name1> , <name2> の値を折れ線グラフとして表示する
plt . plot ( <name6> , <name3> , color = <val1>   )	色を  <val1>  とし、  <name6> , <name3> の値を折れ線グラフとして表示する
plt . plot ( <name1> , <name2> , color = <val3>   )	色を  <val3>  とし、  <name1> , <name2> の値を折れ線グラフとして表示する
plt . savefig ( <val6>   )	プロットを  <val6>  として保存する
plt . savefig ( <val1>   )	プロットを  <val1>  として保存する
import <name5> as <name2>	<name5> を  <name2> としてインポートする
import <name1> as <name2>	<name1> を  <name2> としてインポートする
import <name1> . random as <name6>	<name1> の  <name6> モジュールを  <name6> としてインポートする
import <name1> . random as <name2>	<name1> の  <name2> モジュールを  <name2> としてインポートする
import <name5> as <name3>	<name5> を  <name3> としてインポートする
import <name1> as <name2>	<name1> を  <name2> としてインポートする
from <name3> import <name6> , <name5>	<name3> の  <name6> と  <name5> をインポートする
from <name1> import <name2> , <name3>	<name1> の  <name2> と  <name3> をインポートする
import <name1> <name2> as <name4>	<name1> <name2> を  <name4> としてインポートする
import <name1> <name2> as <name3>	<name1> <name2> を  <name3> としてインポートする
import <name1> as <name3>	<name1> を  <name3> としてインポートする
import <name1> as <name2>	<name1> を  <name2> としてインポートする
import <name2> as <name3>	<name2> を  <name3> としてインポートする
import <name1> as <name2>	<name1> を  <name2> としてインポートする
sns . set ( )	seaboen のデフォルトスタイルを適用する
random . seed ( <val3> )	シード値を  <val3> とする
random . seed ( <val1> )	シード値を  <val1> とする
plt . title ( <val1>   )	グラフタイトルを  <val1>  とする
plt . xlabel ( <val3>   )	x 座標のラベルを  <val3>  とする
plt . xlabel ( <val1>   )	x 座標のラベルを  <val1>  とする
plt . ylabel ( <val6>   )	y 座標のラベルを  <val6>  とする
plt . ylabel ( <val1>   )	y 座標のラベルを  <val1>  とする
plt . grid ( True )	グリッドを表示する
plt . figure ( figsize = ( <val2> , <val3> ) )	グラフの大きさを横  <val2> 縦  <val3> とする
plt . figure ( figsize = ( <val1> , <val2> ) )	グラフの大きさを横  <val1> 縦  <val2> とする
plt . subplot ( <val4> , <val6> , <val6> )	<val4> 行  <val6> 列のグラフの  <val6> つ目を指定
plt . subplot ( <val1> , <val2> , <val2> )	<val1> 行  <val2> 列のグラフの  <val2> つ目を指定
plt . subplot ( <val3> , <val6> , <val3> )	<val3> 行  <val6> 列のグラフの  <val3> つ目を指定
plt . subplot ( <val1> , <val2> , <val1> )	<val1> 行  <val2> 列のグラフの  <val1> つ目を指定
plt . bar ( x , <name3> , align = 'center'   , width = <val2> )	横軸を  x 、縦軸を  <name3> として、幅  <val2> の棒グラフを表示する
plt . bar ( x , <name1> , align = 'center'   , width = <val2> )	横軸を  x 、縦軸を  <name1> として、幅  <val2> の棒グラフを表示する
plt . xticks ( x , [ <val4>   , <val2>   , <val6>   ] )	x 軸のラベルをそれぞれ  <val4> , <val2> , <val6>  とする
plt . xticks ( x , [ <val1>   , <val2>   , <val3>   ] )	x 軸のラベルをそれぞれ  <val1> , <val2> , <val3>  とする
plt . barh ( x , <name4> , align = 'center'   )	横軸を  x 、縦軸を  <name4> として、幅  0.5 の棒グラフを横向きに表示する
plt . barh ( x , <name1> , align = 'center'   )	横軸を  x 、縦軸を  <name1> として、幅  0.5 の棒グラフを横向きに表示する
plt . yticks ( x , [ <val3>   , <val2>   , <val1>   ] )	y 軸のラベルをそれぞれ  <val3> , <val2> , <val1>  とする
plt . yticks ( x , [ <val1>   , <val2>   , <val3>   ] )	y 軸のラベルをそれぞれ  <val1> , <val2> , <val3>  とする
plt . legend ( loc = 'best'   )	凡例を最適な位置に表示する
from <name6> import <name2>	<name6> から  <name2> をインポートする
from <name1> import <name2>	<name1> から  <name2> をインポートする
<name5> = pd . read_csv ( 'student-mat.csv'   )	student - mat .csv 'を  <name5> として読み込む
<name1> = pd . read_csv ( 'student-mat.csv'   )	student - mat .csv 'を  <name1> として読み込む
plt . hist ( <name6> [ <val3>   ] )	<name6> の  <val3>  列を値としたヒストグラムを表示する
plt . hist ( <name1> [ <val2>   ] )	<name1> の  <val2>  列を値としたヒストグラムを表示する
import <name3> as <name1>	<name3> を  <name1> としてインポートする
import <name1> as <name2>	<name1> を  <name2> としてインポートする
<name6> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv 'をカンマ区切りで読み込んで、  <name6> とする
<name1> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv 'をカンマ区切りで読み込んで、  <name1> とする
<name5> . head ( <val2> )	<name5> の初めの  <val2> 行を表示する
<name1> . head ( <val2> )	<name1> の初めの  <val2> 行を表示する
<name2> . head ( )	<name2> の初めの  5 行を表示する
<name1> . head ( )	<name1> の初めの  5 行を表示する
<name1> . tail ( )	<name1> の最後の  5 行を表示する
<name6> . shape	<name6> の形状を表示する
<name1> . shape	<name1> の形状を表示する
<name2> . index	<name2> の  index を表示する
<name1> . index	<name1> の  index を表示する
<name1> . columns	<name1> の列の名前を取得する。
<name3> . dtypes	<name3> の形状を取得する。
<name1> . dtypes	<name1> の形状を取得する。
<name2> [ [ <val5>   , <val1>   ] ] . head ( )	<name2> の  <val5> , <val1>  の列の初めの  5 行を表示する
<name1> [ [ <val2>   , <val3>   ] ] . head ( )	<name1> の  <val2> , <val3>  の列の初めの  5 行を表示する
<name3> [ <val2> : 106 ]	<name3> の  <val2> 行目から  105 行目を表示する
<name1> [ <val2> : 106 ]	<name1> の  <val2> 行目から  105 行目を表示する
<name3> . loc [ <val1> ]	<name3> の  <val1> 列目を取得する
<name1> . loc [ <val2> ]	<name1> の  <val2> 列目を取得する
<name5> . iloc [ [ <val4> , <val6> , <val2> ] , [ <val1> , <val6> ] ]	<name5> の  <val4> 、  <val6> 、  <val2> 行目の  <val1> 、  <val6> 列目であるものを取得する
<name1> . iloc [ [ <val2> , <val3> , <val4> ] , [ <val5> , <val3> ] ]	<name1> の  <val2> 、  <val3> 、  <val4> 行目の  <val5> 、  <val3> 列目であるものを取得する
<name1> [ <name1> [ <val3>   ] >   <val4> ]	<name1> の  <val3>  列を参照し、  <val4> より大きいものだけ表示する。
<name1> [ <name1> [ <val2>   ] >   <val3> ]	<name1> の  <val2>  列を参照し、  <val3> より大きいものだけ表示する。
df [ 'remarks'   ] . unique ( )	remarks 'の中身を重複を除いて取得する。
<name6> . drop_duplicates ( )	<name6> から重複した行を削除したデータを取得する。
<name1> . drop_duplicates ( )	<name1> から重複した行を削除したデータを取得する。
<name5> . describe ( )	<name5> のそれぞれの行に対して重複を  bool 値で取得する。
<name1> . describe ( )	<name1> のそれぞれの行に対して重複を  bool 値で取得する。
df . set_index ( 'datetime'   , inplace = True )	datetime 列を  index に設定する。
df . rename ( columns = {  <val5>   : <val2>  }  , inplace = True )	列の名前を  <val5>  から <val2> に変更する。
df . rename ( columns = {  <val1>   : <val2>  }  , inplace = True )	列の名前を  <val1>  から <val2> に変更する。
<name6> . sort_values ( by = <val2>   , ascending = True ) . head ( )	<val2> を参照して昇順に並び替えた後、  <name6> の初めの  5 行を表示する。
<name1> . sort_values ( by = <val2>   , ascending = True ) . head ( )	<val2> を参照して昇順に並び替えた後、  <name1> の初めの  5 行を表示する。
df . sort_values ( [ 'sales'   , 'temperature'   ] , ascending = False ) . head ( )	sales '、' temperature 'をそれぞれ降順に並び替えた後、カッコ内の列の初めの  5 行を表示する。
<name2> <name6> = pd . to_datetime ( <name2> <name6> , format = '%Y-%m-%d'   )	<name2> <name6> を参照し、年月日をハイフン区切りの形式に変更する。
<name1> <name2> = pd . to_datetime ( <name1> <name2> , format = '%Y-%m-%d'   )	<name1> <name2> を参照し、年月日をハイフン区切りの形式に変更する。
<name5> . isnull ( ) . sum ( )	<name5> のそれぞれの列に対して欠損値の個数をカウントする。
<name1> . isnull ( ) . sum ( )	<name1> のそれぞれの列に対して欠損値の個数をカウントする。
<name3> [ <name3> . isnull ( ) . any ( axis = 1 ) ] . head ( )	<name3> のそれぞれの行に対して欠損値を含むか否か  bool 値で取得し、  True 限定で初めの  5 行を表示する。
<name1> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . head ( )	<name1> のそれぞれの行に対して欠損値を含むか否か  bool 値で取得し、  True 限定で初めの  5 行を表示する。
<name1> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . shape	<name1> のそれぞれの行に対して欠損値を含むか否か  bool 値で取得し、  True だけを抽出したときに形状を取得する。
df . fillna ( value = {  <val3>   : <val1> }  , inplace = True )	列  <val3>  に欠損値があれば  <val1> に置換する
df . fillna ( value = {  <val1>   : <val2> }  , inplace = True )	列  <val1>  に欠損値があれば  <val2> に置換する
df . dropna ( subset = [ <val2>   ] , axis = 0 , inplace = True )	列  <val2>  の列に欠損値がある行を削除する
df . dropna ( subset = [ <val1>   ] , axis = 0 , inplace = True )	列  <val1>  の列に欠損値がある行を削除する
df [ 'precipitation'   ] = df [ 'precipitation'   ] . str . replace ( '--'   , <val4> ) . astype ( <name2> )	列  'precipitationの要素をstr型にした後に' - - ' を   <val4> に置き換えて、  <name2> 型にデータ型を変換する。
df [ 'precipitation'   ] = df [ 'precipitation'   ] . str . replace ( '--'   , <val1> ) . astype ( <name2> )	列  'precipitationの要素をstr型にした後に' - - ' を   <val1> に置き換えて、  <name2> 型にデータ型を変換する。
pd . DataFrame ( df [ <val5>   ] . mask ( df [ <val5>   ] >   80 , <val6> ) ) . head ( )	列  <val5>  の値が  0 より大きいとき  <val6> に置き換えて、初めの  5 行を表示する。
pd . DataFrame ( df [ <val1>   ] . mask ( df [ <val1>   ] >   80 , <val2> ) ) . head ( )	列  <val1>  の値が  0 より大きいとき  <val2> に置き換えて、初めの  5 行を表示する。
df . drop ( [ 'remarks'   ] , axis = 1 , inplace = True )	remarks 'の行を削除する
<name5> [ <val3>   ] . value_counts ( )	<name5> の  <val3>  を参照し、各要素の出現回数を取得する
<name1> [ <val2>   ] . value_counts ( )	<name1> の  <val2>  を参照し、各要素の出現回数を取得する
df . groupby ( [ 'week'   ] ) [ 'soldout'   ] . count ( )	week 'を軸に' soldout 'の個数をカウントする。
df . groupby ( [ 'month'   , 'period'   ] ) [ 'sales'   ] . sum ( )	month '、' period 'を2軸として' sales 'の合計値を求める。
df . groupby ( [ 'weather'   ] ) [ 'temperature'   ] . mean ( )	weather 'を軸に' temperature 'の平均値を求める。
df [ 'temperature_diff'   ] = df [ 'temperature'   ] . diff ( periods = 1 )	temperature 'を参照して1行前の値との差分を算出し、' temperature_diff 'という列に代入する。
<name3> [ [ <val2>   , <val4>   ] ] . head ( )	<name3> の  <val2> , <val4>  の列の初めの  5 行を表示する
<name1> [ [ <val2>   , <val3>   ] ] . head ( )	<name1> の  <val2> , <val3>  の列の初めの  5 行を表示する
df [ <val2>   ] = df [ <val5>   ] . rolling ( window = <val4> ) . mean ( )	列  <val5>  を参照において、自身も含めた後ろ  <val4> つの要素の平均値を、列  <val2>  に格納する。
df [ <val1>   ] = df [ <val2>   ] . rolling ( window = <val3> ) . mean ( )	列  <val2>  を参照において、自身も含めた後ろ  <val3> つの要素の平均値を、列  <val1>  に格納する。
df . dropna ( subset = [ 'temperature_diff'   , 'temperature_rolling_mean'   , 'temperature_pct_change'   ] , axis = 0 , inplace = True )	temperature_diff ', ' temperature_rolling_mean ', ' temperature_pct_change 'の行のいずれかに欠損値がある列は削除する。
import <name1> <name5> as <name2>	<name1> <name5> 'を' <name2> 'としてインポートする。
import <name1> <name2> as <name3>	<name1> <name2> 'を' <name3> 'としてインポートする。
df [ 'sales'   ] . plot ( )	sales 'の値を二次元グラフにプロットする
df . plot ( y = [ <val5>   , <val1>   , <val6>   ] , figsize = ( <val3> , <val2> ) , alpha = <val4> )	y 軸  = [ <val5> , <val1> , <val6> ] 、サイズ  = ( <val3> , <val2> ) 、透過率  = <val4> の折れ線グラフを描く。
df . plot ( y = [ <val1>   , <val2>   , <val3>   ] , figsize = ( <val4> , <val5> ) , alpha = <val6> )	y 軸  = [ <val1> , <val2> , <val3> ] 、サイズ  = ( <val4> , <val5> ) 、透過率  = <val6> の折れ線グラフを描く。
plt . title ( <val6>   )	グラフのタイトルを  <val6>  とする。
plt . title ( <val1>   )	グラフのタイトルを  <val1>  とする。
df . plot ( kind = 'hist'   , y = <val1>     , bins = <val4> , figsize = ( <val6> , <val3> ) , alpha = <val2> )	y 軸  = <val1>  、階級数  = <val4> 、サイズ  = ( <val6> , <val3> ) 、透過率  = <val2> のヒストグラムを描く。
df . plot ( kind = 'hist'   , y = <val1>     , bins = <val2> , figsize = ( <val3> , <val4> ) , alpha = <val5> )	y 軸  = <val1>  、階級数  = <val2> 、サイズ  = ( <val3> , <val4> ) 、透過率  = <val5> のヒストグラムを描く。
<name6> . plot ( kind = 'scatter'   , x = <val4>   , y = <val5>   )	x 軸に  <val4>  、  y 軸に  <val5>  と設定した  <name6> の散布図を描く。
<name1> . plot ( kind = 'scatter'   , x = <val2>   , y = <val3>   )	x 軸に  <val2>  、  y 軸に  <val3>  と設定した  <name1> の散布図を描く。
df [ [ <val6>   , <val4>   ] ] . corr ( )	[ <val6> , <val4> ] の相関係数を取得する。
df [ [ <val1>   , <val2>   ] ] . corr ( )	[ <val1> , <val2> ] の相関係数を取得する。
<name6> . plot ( kind = 'bar'   , alpha = <val5> , figsize = ( <val2> , <val3> ) )	<name6> を参照して透過率  = <val5> 、サイズ  = ( <val2> , <val3> ) の垂直棒グラフを描く。
<name1> . plot ( kind = 'bar'   , alpha = <val2> , figsize = ( <val3> , <val4> ) )	<name1> を参照して透過率  = <val2> 、サイズ  = ( <val3> , <val4> ) の垂直棒グラフを描く。
dummy_df = pd . get_dummies ( <name4> , columns = [ <val5>   , <val1>   , <val6>   , <val2>   , <val3>   ] )	<name4> を参照して、列  = [ <val5> , <val1> , <val6> , <val2> , <val3> ] のダミー変数を生成する。
dummy_df = pd . get_dummies ( <name1> , columns = [ <val2>   , <val3>   , <val4>   , <val5>   , <val6>   ] )	<name1> を参照して、列  = [ <val2> , <val3> , <val4> , <val5> , <val6> ] のダミー変数を生成する。
pd . set_option ( 'display.max_columns'   , <val3> )	最大表示列数を  <val3> 列に設定する。
pd . set_option ( 'display.max_columns'   , <val1> )	最大表示列数を  <val1> 列に設定する。
<name2> . to_csv ( <val3>   , encoding = 'utf-8'   )	<name2> を、文字コードを  utf -8 で  <val3>  という名前の  csv ファイルにして保存する。
<name1> . to_csv ( <val2>   , encoding = 'utf-8'   )	<name1> を、文字コードを  utf -8 で  <val2>  という名前の  csv ファイルにして保存する。
plt . plot ( <name4> , <name2> , label = <val1>   )	ラベル名を  <val1>  と定義し、  <name4> と  <name2> からグラフをプロットする。
plt . plot ( <name1> , <name2> , label = <val3>   )	ラベル名を  <val3>  と定義し、  <name1> と  <name2> からグラフをプロットする。
plt . legend ( )	グラフ内に凡例を表示する。
plt . show ( )	プロットしたグラフを表示する
plt . plot ( <name2> , <name1> , color = ( <val4> , <val4> , <val5> ) )	グラフの色を  RGB で  ( <val4> , <val4> , <val5> ) の色に指定して、  <name2> と  <name1> からグラフをプロットする。
plt . plot ( <name1> , <name2> , color = ( <val3> , <val3> , <val4> ) )	グラフの色を  RGB で  ( <val3> , <val3> , <val4> ) の色に指定して、  <name1> と  <name2> からグラフをプロットする。
plt . plot ( <name2> , <name5> , color = <val4>   )	グラフの色をカラーコードで  <val4>  の色に指定して、  <name2> と  <name5> からグラフをプロットする。
plt . plot ( <name1> , <name2> , color = <val3>   )	グラフの色をカラーコードで  <val3>  の色に指定して、  <name1> と  <name2> からグラフをプロットする。
plt . savefig ( <val1>   )	グラフを  <val1>  という名前で保存する。
import <name1> as <name6>	<name1> を  <name6> としてインポートする。
import <name1> as <name2>	<name1> を  <name2> としてインポートする。
import <name2> <name5> as <name4>	<name2> <name5> を  <name4> としてインポートする。
import <name1> <name2> as <name3>	<name1> <name2> を  <name3> としてインポートする。
import <name1> as <name3>	<name1> を  <name3> という名前でインポートする。
import <name1> as <name2>	<name1> を  <name2> という名前でインポートする。
from <name6> import <name3> , <name5>	<name6> の  <name3> , <name5> をインポートする。
from <name1> import <name2> , <name3>	<name1> の  <name2> , <name3> をインポートする。
import <name5> <name1> as <name3>	<name5> <name1> を  <name3> という名前でインポートする。
import <name1> <name2> as <name3>	<name1> <name2> を  <name3> という名前でインポートする。
import <name1> as <name4>	<name1> を  <name4> としてインポートする。
import <name1> as <name2>	<name1> を  <name2> としてインポートする。
import <name6> as <name2>	<name6> を  <name2> としてインポートする。
import <name1> as <name2>	<name1> を  <name2> としてインポートする。
sns . set ( )	グラフのデザインを  seaborn のスタイルに適用する
random . seed ( <val6> )	ランダムシードを  <val6> に設定する。
random . seed ( <val1> )	ランダムシードを  <val1> に設定する。
plt . title ( <val3>   )	グラフのタイトルを  <val3>  と設定する。
plt . title ( <val1>   )	グラフのタイトルを  <val1>  と設定する。
plt . xlabel ( <val5>   )	x 軸に  <val5>  という軸ラベルをつける。
plt . xlabel ( <val1>   )	x 軸に  <val1>  という軸ラベルをつける。
plt . ylabel ( <val3>   )	y 軸に  <val3>  という軸ラベルをつける。
plt . ylabel ( <val1>   )	y 軸に  <val1>  という軸ラベルをつける。
plt . grid ( True )	グラフにグリッドを表示させる。
plt . figure ( <name2> = ( <val6> , <val4> ) )	グラフのサイズを  <name2> = ( <val6> , <val4> ) に設定する。
plt . figure ( <name1> = ( <val2> , <val3> ) )	グラフのサイズを  <name1> = ( <val2> , <val3> ) に設定する。
plt . subplot ( <val2> , <val3> , <val3> )	複数のグラフを  <val3> つにまとめて表示して、これは  <val2> 行  <val3> 列の  <val3> 番目の位置にプロットする
plt . subplot ( <val1> , <val2> , <val2> )	複数のグラフを  <val2> つにまとめて表示して、これは  <val1> 行  <val2> 列の  <val2> 番目の位置にプロットする
plt . subplot ( <val3> , <val1> , <val3> )	複数のグラフを  <val1> つにまとめて表示して、これは  <val3> 行  <val1> 列の  <val3> 番目の位置にプロットする
plt . subplot ( <val1> , <val2> , <val1> )	複数のグラフを  <val2> つにまとめて表示して、これは  <val1> 行  <val2> 列の  <val1> 番目の位置にプロットする
from <name4> import <name2>	<name4> の  <name2> をインポートする。
from <name1> import <name2>	<name1> の  <name2> をインポートする。
import <name1> as <name5>	<name1> を  <name5> と名前を付けてインポート
import <name1> as <name2>	<name1> を  <name2> と名前を付けてインポート
<name1> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv 'をカンマ区切りで読み込んだものを  <name1> に代入
<name3> . head ( <val5> )	<name3> の先頭の  <val5> 行を表示
<name1> . head ( <val2> )	<name1> の先頭の  <val2> 行を表示
<name3> . head ( )	<name3> の先頭の  5 行を表示
<name1> . head ( )	<name1> の先頭の  5 行を表示
<name1> . tail ( )	<name1> の最後の  5 行を表示
<name6> . shape	<name6> の行数・列数を確認
<name1> . shape	<name1> の行数・列数を確認
<name2> . index	<name2> の  index を確認
<name1> . index	<name1> の  index を確認
<name5> . columns	<name5> の  column を確認
<name1> . columns	<name1> の  column を確認
<name3> . dtypes	<name3> の各列のデータ型を確認
<name1> . dtypes	<name1> の各列のデータ型を確認
<name3> [ [ <val2>   , <val4>   ] ] . head ( )	<name3> の列   <val2>  、列   <val4>  の最初の５行を表示
<name1> [ [ <val2>   , <val3>   ] ] . head ( )	<name1> の列   <val2>  、列   <val3>  の最初の５行を表示
<name4> [ <val6> : 106 ]	<name4> の  <val6> 行目から  105 行目までを取得
<name1> [ <val2> : 106 ]	<name1> の  <val2> 行目から  105 行目までを取得
<name3> . loc [ <val4> ]	<name3> のうち、  index が  <val4> の行のみを取得
<name1> . loc [ <val2> ]	<name1> のうち、  index が  <val2> の行のみを取得
<name6> . iloc [ [ <val3> , <val4> , <val2> ] , [ <val5> , <val4> ] ]	<name6> のうち、  <val3> , <val4> , <val2> 行目の  <val5> ~  <val4> 列目を取得
<name1> . iloc [ [ <val2> , <val3> , <val4> ] , [ <val5> , <val3> ] ]	<name1> のうち、  <val2> , <val3> , <val4> 行目の  <val5> ~  <val3> 列目を取得
<name3> [ <name3> [ <val6>   ] >   <val5> ]	<name3> のうち、列  <val6>  が  <val5> よりも大きい行のみを取得
<name1> [ <name1> [ <val2>   ] >   <val3> ]	<name1> のうち、列  <val2>  が  <val3> よりも大きい行のみを取得
<name1> [ <val3>   ] . unique ( )	<name1> の列  <val3>  に存在する値を重複を省いて取得
<name1> [ <val2>   ] . unique ( )	<name1> の列  <val2>  に存在する値を重複を省いて取得
<name6> . drop_duplicates ( )	<name6> のうち、重複した行を削除
<name1> . drop_duplicates ( )	<name1> のうち、重複した行を削除
<name2> . describe ( )	<name2> の各列の要約統計量を取得
<name1> . describe ( )	<name1> の各列の要約統計量を取得
<name5> . set_index ( 'datetime'   , inplace = True )	<name5> の列  'datatime'  をインデックスとして設定
<name1> . set_index ( 'datetime'   , inplace = True )	<name1> の列  'datatime'  をインデックスとして設定
<name1> . rename ( columns = {  <val5>   : <val6>  }  , inplace = True )	<name1> の列  <val5>  のカラム名を  <val6>  に変更
<name1> . rename ( columns = {  <val2>   : <val3>  }  , inplace = True )	<name1> の列  <val2>  のカラム名を  <val3>  に変更
<name5> . sort_values ( by = <val3>   , ascending = True ) . head ( )	<name5> の列  <val3>  を降順で並び替え、最初の５行を表示
<name1> . sort_values ( by = <val2>   , ascending = True ) . head ( )	<name1> の列  <val2>  を降順で並び替え、最初の５行を表示
<name1> . sort_values ( [ <val2>   , 'temperature'   ] , ascending = False ) . head ( )	<name1> の列  <val2>  と列  'temprature'  を照準で並び替え、最初の  5 行を表示
<name5> . index = pd . to_datetime ( <name5> . index , format = '%Y-%m-%d'   )	<name5> のインデックスを  datetime64 [ ns ] 型の年月日をハイフン区切りにしたものに変更
<name1> . index = pd . to_datetime ( <name1> . index , format = '%Y-%m-%d'   )	<name1> のインデックスを  datetime64 [ ns ] 型の年月日をハイフン区切りにしたものに変更
<name3> . isnull ( ) . sum ( )	<name3> に含まれる欠損値の個数を列ごとに算出
<name1> . isnull ( ) . sum ( )	<name1> に含まれる欠損値の個数を列ごとに算出
<name3> [ <name3> . isnull ( ) . any ( axis = 1 ) ] . head ( )	<name3> に含まれる欠損値の有無を行ごとに判定し、初めの５行について結果を表示
<name1> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . head ( )	<name1> に含まれる欠損値の有無を行ごとに判定し、初めの５行について結果を表示
<name1> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . shape	<name1> に含まれる欠損値の有無を行ごとに判定し、欠損値が含まれるもののみを抽出したときの形状を取得
<name3> . fillna ( value = {  <val1>   : 0.0 }  , inplace = True )	<name3> の列  <val1>  にある欠損値を  '0.0'  に置換
<name1> . fillna ( value = {  <val2>   : 0.0 }  , inplace = True )	<name1> の列  <val2>  にある欠損値を  '0.0'  に置換
<name5> . dropna ( subset = [ <val4>   ] , axis = 0 , inplace = True )	<name5> の列  <val4>  に欠損値がある行を削除する
<name1> . dropna ( subset = [ <val2>   ] , axis = 0 , inplace = True )	<name1> の列  <val2>  に欠損値がある行を削除する
<name1> [ <val4>   ] = <name1> [ <val4>   ] . str . replace ( <val3>   , <val2> ) . astype ( <name6> )	<name1> の列  <val4>   の型タイプを  <name6> に変更すると同時に、   <val3>   を   <val2> に置換
<name1> [ <val2>   ] = <name1> [ <val2>   ] . str . replace ( <val3>   , <val4> ) . astype ( <name5> )	<name1> の列  <val2>   の型タイプを  <name5> に変更すると同時に、   <val3>   を   <val4> に置換
pd . DataFrame ( df [ <val5>   ] . mask ( df [ <val5>   ] >   <val4> , <val6> ) ) . head ( )	データフレームの  <val5>  の値が  <val4> よりも大きければ、その値を  <val6> に置換し、最初の５行を出力
pd . DataFrame ( df [ <val1>   ] . mask ( df [ <val1>   ] >   <val2> , <val3> ) ) . head ( )	データフレームの  <val1>  の値が  <val2> よりも大きければ、その値を  <val3> に置換し、最初の５行を出力
<name4> . drop ( [ <val5>   ] , axis = 1 , inplace = True )	<name4> から列  <val5>  を削除
<name1> . drop ( [ <val2>   ] , axis = 1 , inplace = True )	<name1> から列  <val2>  を削除
<name1> [ <val2>   ] . value_counts ( )	<name1> の列  <val2>  について、値の集計をとる
<name3> . groupby ( [ <val4>   ] ) [ <val2>   ] . count ( )	<name3> について、列  <val4>  の値ごとに  <val2>  の数をカウント
<name1> . groupby ( [ <val2>   ] ) [ <val3>   ] . count ( )	<name1> について、列  <val2>  の値ごとに  <val3>  の数をカウント
<name3> . groupby ( [ <val1>   , <val6>   ] ) [ 'sales'   ] . sum ( )	<name3> について、列  <val1> , 列  <val6>  の値ごとに  'soldout'  の数をカウント
<name1> . groupby ( [ <val2>   , <val3>   ] ) [ 'sales'   ] . sum ( )	<name1> について、列  <val2> , 列  <val3>  の値ごとに  'soldout'  の数をカウント
<name6> . groupby ( [ <val2>   ] ) [ <val4>   ] . mean ( )	<name6> について、列  <val2>  の値ごとに  <val4>  の平均を算出
<name1> . groupby ( [ <val2>   ] ) [ <val3>   ] . mean ( )	<name1> について、列  <val2>  の値ごとに  <val3>  の平均を算出
<name2> [ [ <val5>   , <val6>   ] ] . head ( )	<name2> の列  <val5> , 列  <val6>  について最初の５行を表示
<name1> [ [ <val2>   , <val3>   ] ] . head ( )	<name1> の列  <val2> , 列  <val3>  について最初の５行を表示
<name5> [ 'temperature_rolling_mean'   ] = <name5> [ <val6>   ] . rolling ( <name1> = <val3> ) . mean ( )	<name5> の列  <val6>  について、頭から  <name1> サイズ  <val3> で移動平均を算出
<name1> [ 'temperature_rolling_mean'   ] = <name1> [ <val2>   ] . rolling ( <name3> = <val4> ) . mean ( )	<name1> の列  <val2>  について、頭から  <name3> サイズ  <val4> で移動平均を算出
<name1> . dropna ( subset = [ <val6>   , <val2>   , <val5>   ] , axis = 0 , inplace = True )	<name1> のうち、列  <val6> , <val2> , <val5>  に１つでも欠損値がある行は削除
<name1> . dropna ( subset = [ <val2>   , <val3>   , <val4>   ] , axis = 0 , inplace = True )	<name1> のうち、列  <val2> , <val3> , <val4>  に１つでも欠損値がある行は削除
import <name6> <name1> as <name2>	<name6> <name1> を  <name2> と名前を付けてインポート
import <name1> <name2> as <name3>	<name1> <name2> を  <name3> と名前を付けてインポート
<name3> [ <val5>   ] . plot ( )	<name3> の列  <val5>  の値を折れ線グラフとしてプロット
<name1> [ <val2>   ] . plot ( )	<name1> の列  <val2>  の値を折れ線グラフとしてプロット
df . plot ( y = [ 'temperature'   , 'temperature_rolling_mean'   , 'temperature_pct_change'   ] , figsize = ( <val6> , <val4> ) , alpha = <val5> )	列’  temperature ', 列' temperature_rolling_mean ', 列' temperature_pct_change 'の値をサイズ  <val6> ×  <val4> 、透過度  <val5> の折れ線グラフで表示
df . plot ( y = [ 'temperature'   , 'temperature_rolling_mean'   , 'temperature_pct_change'   ] , figsize = ( <val1> , <val2> ) , alpha = <val3> )	列’  temperature ', 列' temperature_rolling_mean ', 列' temperature_pct_change 'の値をサイズ  <val1> ×  <val2> 、透過度  <val3> の折れ線グラフで表示
plt . title ( <val1>   )	グラフのタイトルを  <val1>  とする
df . plot ( kind = 'hist'   , y = <val4>     , bins = <val5> , figsize = ( <val1> , <val2> ) , alpha = <val3> )	y 軸を  <val4>  として、図のサイズ  <val1> ×  <val2> 、ビンのサイズ  <val5> 、透過率  <val3> のヒストグラムを表示
df . plot ( kind = 'hist'   , y = <val1>     , bins = <val2> , figsize = ( <val3> , <val4> ) , alpha = <val5> )	y 軸を  <val1>  として、図のサイズ  <val3> ×  <val4> 、ビンのサイズ  <val2> 、透過率  <val5> のヒストグラムを表示
df . plot ( kind = 'scatter'   , x = <val6>   , y = <val5>   )	x 軸を  <val6>  、  y 軸を  <val5>  とした散布図を表示
df . plot ( kind = 'scatter'   , x = <val1>   , y = <val2>   )	x 軸を  <val1>  、  y 軸を  <val2>  とした散布図を表示
df [ [ 'kcal'   , 'sales'   ] ] . corr ( )	kcal 'と' sales 'の相関係数を算出
<name2> = pd . get_dummies ( df , columns = [ <val3>   , <val6>   , <val4>   , <val1>   , <val5>   ] )	列  <val3> , 列  <val6> , 列  <val4> , 列  <val1> , 列  <val5>  を全てダミー化したものを  <name2> とする
<name1> = pd . get_dummies ( df , columns = [ <val2>   , <val3>   , <val4>   , <val5>   , <val6>   ] )	列  <val2> , 列  <val3> , 列  <val4> , 列  <val5> , 列  <val6>  を全てダミー化したものを  <name1> とする
<name2> . to_csv ( <val6>   , encoding = 'utf-8'   )	<name2> を  <val6>  に  utf -8 で保存
<name1> . to_csv ( <val2>   , encoding = 'utf-8'   )	<name1> を  <val2>  に  utf -8 で保存
plt . plot ( <name3> , <name6> , label = <val4>   )	ラベルを  <val4>  として、  <name3> と  <name6> の値からプロット
plt . plot ( <name1> , <name2> , label = <val3>   )	ラベルを  <val3>  として、  <name1> と  <name2> の値からプロット
plt . legend ( )	凡例の表示
plt . show ( )	プロット表示  ( 設定の反映  )
plt . plot ( <name4> , <name2> , color = ( <val3> , <val3> , <val5> ) )	RGB を  ( <val3> , <val3> , <val5> ) と指定して、  <name4> と  <name2> の値からプロット
plt . plot ( <name1> , <name2> , color = ( <val3> , <val3> , <val4> ) )	RGB を  ( <val3> , <val3> , <val4> ) と指定して、  <name1> と  <name2> の値からプロット
plt . plot ( <name6> , <name1> , color = <val5>   )	16 進数表記のカラーコードを  <val5>  と指定して、  <name6> と  <name1> の値からプロット
plt . plot ( <name1> , <name2> , color = <val3>   )	16 進数表記のカラーコードを  <val3>  と指定して、  <name1> と  <name2> の値からプロット
plt . savefig ( <val1>   )	作ったグラフを  <val1>  として保存
import <name6> as <name3>	<name6> を  <name3> と名前を付けてインポート
import <name1> as <name2>	<name1> を  <name2> と名前を付けてインポート
import <name6> <name4> as <name1>	<name6> <name4> を  <name1> と名前を付けてインポート
import <name1> <name2> as <name3>	<name1> <name2> を  <name3> と名前を付けてインポート
import <name4> as <name2>	<name4> を  <name2> と名前を付けてインポート
import <name1> as <name2>	<name1> を  <name2> と名前を付けてインポート
from <name4> import <name3> , <name1>	<name4> から  <name3> と  <name1> をインポート
from <name1> import <name2> , <name3>	<name1> から  <name2> と  <name3> をインポート
import <name1> <name4> as <name3>	<name1> <name4> を  <name3> と名前を付けてインポート
import <name1> <name2> as <name3>	<name1> <name2> を  <name3> と名前を付けてインポート
import <name3> as <name5>	<name3> を  <name5> と名前を付けてインポート
import <name1> as <name2>	<name1> を  <name2> と名前を付けてインポート
import <name2> as <name4>	<name2> を  <name4> と名前を付けてインポート
import <name1> as <name2>	<name1> を  <name2> と名前を付けてインポート
sns . set ( )	グラフのスタイルを  seaborn に変更
random . seed ( <val4> )	シード値を  <val4> として固定
random . seed ( <val1> )	シード値を  <val1> として固定
plt . title ( <val4>   )	グラフタイトルを  <val4>  とする
plt . title ( <val1>   )	グラフタイトルを  <val1>  とする
plt . xlabel ( <val6>   )	グラフの  x 軸のラベルを  <val6>  とする
plt . xlabel ( <val1>   )	グラフの  x 軸のラベルを  <val1>  とする
plt . ylabel ( <val3>   )	グラフの  x 軸のラベルを  <val3>  とする
plt . ylabel ( <val1>   )	グラフの  x 軸のラベルを  <val1>  とする
plt . grid ( True )	グラフにグリッドを表示する
plt . figure ( figsize = ( <val5> , <val4> ) )	グラフの大きさを  <val5> ×  <val4> に指定
plt . figure ( figsize = ( <val1> , <val2> ) )	グラフの大きさを  <val1> ×  <val2> に指定
plt . subplot ( <val4> , <val2> , <val2> )	グラフを  <val4> 行  <val2> 列のグラフの  <val2> つ目として指定
plt . subplot ( <val1> , <val2> , <val2> )	グラフを  <val1> 行  <val2> 列のグラフの  <val2> つ目として指定
plt . subplot ( <val4> , <val2> , <val4> )	グラフを  <val4> 行  <val2> 列のグラフの  <val4> つ目として指定
plt . subplot ( <val1> , <val2> , <val1> )	グラフを  <val1> 行  <val2> 列のグラフの  <val1> つ目として指定
plt . bar ( <name1> , <name2> , align = 'center'   , width = <val6> )	<name1> 軸を  <name1> 、  <name2> 軸を  <name2> として幅  <val6> の棒グラフを  <name1> のメモリの真ん中の位置に来るように配置
plt . bar ( <name1> , <name2> , align = 'center'   , width = <val3> )	<name1> 軸を  <name1> 、  <name2> 軸を  <name2> として幅  <val3> の棒グラフを  <name1> のメモリの真ん中の位置に来るように配置
plt . xticks ( <name4> , [ <val5>   , <val3>   , <val2>   ] )	グラフの  <name4> 軸の目盛り文字列を  <name4> から  [ <val5> , <val3> , <val2> ] に変更
plt . xticks ( <name1> , [ <val2>   , <val3>   , <val4>   ] )	グラフの  <name1> 軸の目盛り文字列を  <name1> から  [ <val2> , <val3> , <val4> ] に変更
plt . barh ( <name1> , y , align = 'center'   )	<name1> の軸と  y の軸を入れ替えた棒グラフを  <name1> のメモリの真ん中の位置に来るように配置
plt . yticks ( <name4> , [ <val3>   , <val1>   , <val5>   ] )	グラフの  y 軸の目盛り文字列を  <name4> から  [ <val3> , <val1> , <val5> ] に変更
plt . yticks ( <name1> , [ <val2>   , <val3>   , <val4>   ] )	グラフの  y 軸の目盛り文字列を  <name1> から  [ <val2> , <val3> , <val4> ] に変更
plt . legend ( loc = 'best'   )	凡例を最適な位置に配置
from <name1> import linear_model	<name1> から  liner_model をインポート
<name1> = pd . read_csv ( 'student-mat.csv'   )	student - mat .csv 'のデータを読み込み、  <name1> とする
plt . hist ( <name4> [ 'absences'   ] )	データ  <name4> の  absences についてのヒストグラムを表示
plt . hist ( <name1> [ 'absences'   ] )	データ  <name1> の  absences についてのヒストグラムを表示
<name5> [ 'absences'   ] . median ( )	データ  <name5> の  absences についての中央値を取得
<name1> [ 'absences'   ] . median ( )	データ  <name1> の  absences についての中央値を取得
<name6> [ 'absences'   ] . mode ( )	データ  <name6> の  absences についての最頻値を取得
<name1> [ 'absences'   ] . mode ( )	データ  <name1> の  absences についての最頻値を取得
<name5> [ 'absences'   ] . var ( )	データ  <name5> の  absences についての分散を取得
<name1> [ 'absences'   ] . var ( )	データ  <name1> の  absences についての分散を取得
<name3> [ 'absences'   ] . std ( )	データ  <name3> の  absences についての標準偏差を取得
<name1> [ 'absences'   ] . std ( )	データ  <name1> の  absences についての標準偏差を取得
<name4> [ 'absences'   ] . describe ( )	データ  <name4> の  absences についての要約統計量を取得
<name1> [ 'absences'   ] . describe ( )	データ  <name1> の  absences についての要約統計量を取得
plt . boxplot ( <name3> [ 'G1'   ] )	データ  <name3> の  G1 についての箱ひげ図を表示
plt . boxplot ( <name1> [ 'G1'   ] )	データ  <name1> の  G1 についての箱ひげ図を表示
plt . boxplot ( [ <name5> [ 'G1'   ] , <name5> [ 'G2'   ] , <name5> [ 'G3'   ] ] )	データ  <name5> の  G1 , G2 , G3 についての箱ひげ図を表示
plt . boxplot ( [ <name1> [ 'G1'   ] , <name1> [ 'G2'   ] , <name1> [ 'G3'   ] ] )	データ  <name1> の  G1 , G2 , G3 についての箱ひげ図を表示
plt . plot ( <name6> [ 'G1'   ] , <name6> [ 'G3'   ] , <val5>   )	データ  <name6> の  G1 , G3 についての散布図をプロットを  <val5>  として表示
plt . plot ( <name1> [ 'G1'   ] , <name1> [ 'G3'   ] , <val2>   )	データ  <name1> の  G1 , G3 についての散布図をプロットを  <val2>  として表示
np . cov ( <name5> [ 'G1'   ] , <name5> [ 'G3'   ] )	データ  <name5> の  G1 , G3 について共分散行列を算出
np . cov ( <name1> [ 'G1'   ] , <name1> [ 'G3'   ] )	データ  <name1> の  G1 , G3 について共分散行列を算出
sp . stats . pearsonr ( <name1> [ 'G1'   ] , <name1> [ 'G3'   ] )	データ  <name1> の  G1 , G3 について相関係数を算出
np . corrcoef ( [ <name4> [ 'G1'   ] , <name4> [ 'G3'   ] ] )	データ  <name4> の  G1 , G3 について相関行列を算出
np . corrcoef ( [ <name1> [ 'G1'   ] , <name1> [ 'G3'   ] ] )	データ  <name1> の  G1 , G3 について相関行列を算出
sns . pairplot ( <name3> [ [ 'Dalc'   , 'Walc'   , 'G1'   , 'G3'   ] ] )	データ  <name3> の  Dalc , Walc , G1 , G3 について各変数のヒストグラムをすべて表示
sns . pairplot ( <name1> [ [ 'Dalc'   , 'Walc'   , 'G1'   , 'G3'   ] ] )	データ  <name1> の  Dalc , Walc , G1 , G3 について各変数のヒストグラムをすべて表示
<name5> = linear_model . LinearRegression ( )	線形回帰のインスタンスを生成し、  <name5> とする
<name1> = linear_model . LinearRegression ( )	線形回帰のインスタンスを生成し、  <name1> とする
reg . coef_	回帰係数を算出
reg . intercept_	切片を算出
plt . plot ( X , reg . predict ( X ) )	線形回帰直線を引く
reg . score ( X , Y )	決定係数を算出する
<name2> = <name2> [ [ <val3>   , <val5>   , <val6>   , <val4>   ] ]	<name2> から列  <val3> , 列  <val5> , 列  <val6> , 列  <val4>  を抽出して、  <name2> とする
<name1> = <name1> [ [ <val2>   , <val3>   , <val4>   , <val5>   ] ]	<name1> から列  <val2> , 列  <val3> , 列  <val4> , 列  <val5>  を抽出して、  <name1> とする
<name1> . isin ( [ <val5>   ] ) . sum ( )	<name1> のそれぞれのカラムに存在する  <val5>  の個数の合計値を算出
<name1> . isin ( [ <val2>   ] ) . sum ( )	<name1> のそれぞれのカラムに存在する  <val2>  の個数の合計値を算出
<name5> = <name5> . replace ( <val1>   , np . nan ) . dropna ( )	<name5> に存在する  <val1>  を欠損値に置換し、欠損値がある行を削除
<name1> = <name1> . replace ( <val2>   , np . nan ) . dropna ( )	<name1> に存在する  <val2>  を欠損値に置換し、欠損値がある行を削除
<name6> = <name6> . assign ( price = pd . to_numeric ( <name6> . price ) )	<name6> の列  'price'  を数値型に変換
<name1> = <name1> . assign ( price = pd . to_numeric ( <name1> . price ) )	<name1> の列  'price'  を数値型に変換
from sklearn . linear_model import <name5>	sklearn_linear から  <name5> をインポート
from sklearn . linear_model import <name1>	sklearn_linear から  <name1> をインポート
<name6> = <name4> . drop ( <val1>   , axis = 1 )	列  <val1>  以外の  <name4> を  <name6> とする
<name1> = <name2> . drop ( <val3>   , axis = 1 )	列  <val3>  以外の  <name2> を  <name1> とする
import <name1>	<name1> をインポート
adult . groupby ( <val6>   ) . size ( )	列  <val6>  の値ごとのデータの数を表示
adult . groupby ( <val1>   ) . size ( )	列  <val1>  の値ごとのデータの数を表示
from <name6> <name4> import <name2>	<name6> <name4> から  <name2> をインポート
from <name1> <name2> import <name3>	<name1> <name2> から  <name3> をインポート
from <name6> <name1> import <name2>	<name6> <name1> から  <name2> をインポート
from <name1> <name2> import <name3>	<name1> <name2> から  <name3> をインポート
import <name1> as <name2>	<name1> を  <name2> としてインポート
<name4> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv 'をカンマ区切りで読み、  <name4> とする
<name1> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv 'をカンマ区切りで読み、  <name1> とする
<name4> . head ( <val5> )	<name4> の最初の  <val5> 行を表示させる
<name1> . head ( <val2> )	<name1> の最初の  <val2> 行を表示させる
<name6> . head ( )	<name6> の最初の  5 行を表示させる
<name1> . head ( )	<name1> の最初の  5 行を表示させる
<name6> . tail ( )	<name6> の最後の  5 行を表示させる
<name1> . tail ( )	<name1> の最後の  5 行を表示させる
<name4> . shape	<name4> の行数および列数を表示
<name1> . shape	<name1> の行数および列数を表示
<name5> . index	<name5> のインデックスを表示
<name1> . index	<name1> のインデックスを表示
<name3> . columns	<name3> のカラムを表示
<name1> . columns	<name1> のカラムを表示
<name1> . dtypes	<name1> のデータ型を表示
import <name2> as <name1>	<name2> をインポートし以降  <name1> として扱う
import <name1> as <name2>	<name1> をインポートし以降  <name2> として扱う
<name4> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv をカンマ区切りで読み込み、  <name4> として扱う
<name1> = pd . read_csv ( './data/lunch_box.csv'   , sep = ','   )	. / data / lunch_box .csv をカンマ区切りで読み込み、  <name1> として扱う
<name5> . head ( <val3> )	<name5> の先頭  <val3> 行を表示する
<name1> . head ( <val2> )	<name1> の先頭  <val2> 行を表示する
<name6> . head ( )	<name6> の先頭  5 行を表示する
<name1> . head ( )	<name1> の先頭  5 行を表示する
<name5> . tail ( )	<name5> の末尾  5 行を表示する
<name1> . tail ( )	<name1> の末尾  5 行を表示する
<name5> . shape	<name5> の大きさを表示する
<name1> . shape	<name1> の大きさを表示する
<name3> . index	<name3> の  index を表示する
<name1> . index	<name1> の  index を表示する
<name4> . columns	<name4> の  columns を表示する
<name1> . columns	<name1> の  columns を表示する
<name6> [ [ 'name'   , 'kcal'   ] ] . head ( )	<name6> の  name と  kcal を抽出し、先頭  5 行を表示する
<name1> [ [ 'name'   , 'kcal'   ] ] . head ( )	<name1> の  name と  kcal を抽出し、先頭  5 行を表示する
